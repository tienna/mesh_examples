"use strict";
var __assign = (this && this.__assign) || function () {
    __assign = Object.assign || function(t) {
        for (var s, i = 1, n = arguments.length; i < n; i++) {
            s = arguments[i];
            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))
                t[p] = s[p];
        }
        return t;
    };
    return __assign.apply(this, arguments);
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.DataPair = void 0;
var Data_1 = require("./Data.js");
var assert_1 = require("./utils/assert.js");
var roDescr_1 = require("./utils/roDescr.js");
var DataPair = /** @class */ (function () {
    function DataPair(fst, snd) {
        (0, assert_1.assert)((0, Data_1.isData)(fst) && (0, Data_1.isData)(snd), "invalid Data passed to 'DataPair' constructor; fst: ".concat(fst, "; snd: ").concat(snd));
        Object.defineProperties(this, {
            fst: __assign({ value: fst }, roDescr_1.roDescr),
            snd: __assign({ value: snd }, roDescr_1.roDescr),
        });
    }
    DataPair.prototype.clone = function () {
        return new DataPair(this.fst, this.snd);
    };
    DataPair.prototype.toString = function () {
        return "(".concat(this.fst.toString(), ",").concat(this.snd.toString(), ")");
    };
    return DataPair;
}());
exports.DataPair = DataPair;
