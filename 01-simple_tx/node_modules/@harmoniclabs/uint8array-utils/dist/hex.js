"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.fromHex = exports.toHex = void 0;
var isUint8Array_1 = require("./isUint8Array.js");
function toHex(buff) {
    if (!(0, isUint8Array_1.isUint8Array)(buff))
        throw new TypeError('toHex expects an `Uint8Array`;');
    var strArr = new Array(buff.length);
    buff.forEach(function (b, i) { return strArr[i] = b.toString(16).padStart(2, '0'); });
    return strArr.join('');
}
exports.toHex = toHex;
var hexChars = Object.freeze(Array.from("0123456789abcdef"));
function isLowerCaseHex(str) {
    return Array.from(str).every(function (ch) { return hexChars.includes(ch); });
}
function fromHex(str) {
    if (typeof str !== "string")
        throw new TypeError('fromHex expects an hexadecimal string;');
    str = str.toLowerCase();
    str = str.length % 2 === 0 ? str : '0' + str;
    var len = str.length / 2;
    var arr = new Array(len);
    for (var i = 0; i < len; i++) {
        var i2 = i * 2;
        var byte = str.substring(i2, i2 + 2);
        if (!isLowerCaseHex(byte))
            throw new TypeError('fromHex expects an hexadecimal string; input was: ' + str);
        arr[i] = parseInt("0x" + byte);
    }
    return new Uint8Array(arr);
}
exports.fromHex = fromHex;
