import { BitStream } from "@harmoniclabs/bitstream";
import { ByteString } from "@harmoniclabs/bytestring";
import { Pair } from "@harmoniclabs/pair";
import { Data } from "@harmoniclabs/plutus-data";
import { ConstType } from "./ConstType/index.js";
import { ConstValue, ConstValueList } from "./ConstValue/index.js";
import { BlsG1, BlsG2, BlsResult } from "@harmoniclabs/crypto";
export declare class UPLCConst {
    static get UPLCTag(): BitStream;
    private _type;
    get type(): ConstType;
    private _value;
    get value(): ConstValue;
    constructor(type: ConstType, value: number | bigint);
    constructor(type: ConstType, value: ByteString);
    constructor(type: ConstType, value: string);
    constructor(type: ConstType, value?: undefined);
    constructor(type: ConstType, value: boolean);
    constructor(type: ConstType, value: ConstValueList);
    constructor(type: ConstType, value: Pair<ConstValue, ConstValue>);
    constructor(type: ConstType, value: Data);
    constructor(type: ConstType, value: BlsG1);
    constructor(type: ConstType, value: BlsG2);
    constructor(type: ConstType, value: BlsResult);
    clone(): UPLCConst;
    static int(int: number | bigint): UPLCConst;
    static byteString(bs: ByteString): UPLCConst;
    static str(str: string): UPLCConst;
    static get unit(): UPLCConst;
    static bool(bool: boolean): UPLCConst;
    static listOf(typeArg: ConstType): ((values: ConstValueList) => UPLCConst);
    static pairOf(typeArgFirst: ConstType, typeArgSecond: ConstType): ((first: ConstValue, second: ConstValue) => UPLCConst);
    static data(data: Data): UPLCConst;
    static bls12_381_G1_element(g1: BlsG1): UPLCConst;
    static bls12_381_G2_element(g2: BlsG2): UPLCConst;
    static bls12_381_MlResult(mlResult: BlsResult): UPLCConst;
}
