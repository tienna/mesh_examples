/**
 * # 5 Built in types, functions, and values
 *
 * Plutus Core comes with a predefined set of built-in types and functions which will be useful
 * for blockchain applications.
 *
 * The set of built-ins is fixed, although in future we may provide a
 * framework to allow customisation for specialised blockchains.
 *
 * There are four basic types: unit, bool, integer, and bytestring (and strings only for debugging purposes)
 *
 * These types are given in Figure 13:
 *
 * for example (con integer) is the type of signed integers.
 *
 * We provide standard arithmetic and comparison operations for integers and a number of list-like functions for bytestrings.
 *
 * The details are given in Figure 14, using a number of abbreviations given in Figure 12.
 *
 * Note the following:
 *
 *  •   Some of the entries in Figure 14 contain success conditions. If a success condition is violated
 *      then the function immediately returns (error).
 *
 *  •   Every built-in function returns either a value or the term (error).
 *
 *  •   The ifThenElse operation is polymorphic and must be instantiated with the type of its
 *      branches before being applied: see the example below.
 *
 *  •   We provide two versions of the division and remainder operations for integers. These differ
 *      in their treatment of negative arguments.
 */
import { BitStream } from "@harmoniclabs/bitstream";
import { UPLCBuiltinTag } from "./UPLCBuiltinTag.js";
export declare class Builtin {
    static get UPLCTag(): BitStream;
    private _tag;
    get tag(): UPLCBuiltinTag;
    constructor(tag: UPLCBuiltinTag);
    clone(): Builtin;
    static get addInteger(): Builtin;
    static get subtractInteger(): Builtin;
    static get multiplyInteger(): Builtin;
    static get divideInteger(): Builtin;
    static get quotientInteger(): Builtin;
    static get remainderInteger(): Builtin;
    static get modInteger(): Builtin;
    static get equalsInteger(): Builtin;
    static get lessThanInteger(): Builtin;
    static get lessThanEqualInteger(): Builtin;
    static get appendByteString(): Builtin;
    static get consByteString(): Builtin;
    static get sliceByteString(): Builtin;
    static get lengthOfByteString(): Builtin;
    static get indexByteString(): Builtin;
    static get equalsByteString(): Builtin;
    static get lessThanByteString(): Builtin;
    static get lessThanEqualsByteString(): Builtin;
    static get sha2_256(): Builtin;
    static get sha3_256(): Builtin;
    static get blake2b_256(): Builtin;
    static get verifyEd25519Signature(): Builtin;
    static get appendString(): Builtin;
    static get equalsString(): Builtin;
    static get encodeUtf8(): Builtin;
    static get decodeUtf8(): Builtin;
    static get ifThenElse(): Builtin;
    static get chooseUnit(): Builtin;
    static get trace(): Builtin;
    static get fstPair(): Builtin;
    static get sndPair(): Builtin;
    static get chooseList(): Builtin;
    static get mkCons(): Builtin;
    static get headList(): Builtin;
    static get tailList(): Builtin;
    static get nullList(): Builtin;
    static get chooseData(): Builtin;
    static get constrData(): Builtin;
    static get mapData(): Builtin;
    static get listData(): Builtin;
    static get iData(): Builtin;
    static get bData(): Builtin;
    static get unConstrData(): Builtin;
    static get unMapData(): Builtin;
    static get unListData(): Builtin;
    static get unIData(): Builtin;
    static get unBData(): Builtin;
    static get equalsData(): Builtin;
    static get mkPairData(): Builtin;
    static get mkNilData(): Builtin;
    static get mkNilPairData(): Builtin;
    static get serialiseData(): Builtin;
    static get verifyEcdsaSecp256k1Signature(): Builtin;
    static get verifySchnorrSecp256k1Signature(): Builtin;
    static get bls12_381_G1_add(): Builtin;
    static get bls12_381_G1_neg(): Builtin;
    static get bls12_381_G1_scalarMul(): Builtin;
    static get bls12_381_G1_equal(): Builtin;
    static get bls12_381_G1_hashToGroup(): Builtin;
    static get bls12_381_G1_compress(): Builtin;
    static get bls12_381_G1_uncompress(): Builtin;
    static get bls12_381_G2_add(): Builtin;
    static get bls12_381_G2_neg(): Builtin;
    static get bls12_381_G2_scalarMul(): Builtin;
    static get bls12_381_G2_equal(): Builtin;
    static get bls12_381_G2_hashToGroup(): Builtin;
    static get bls12_381_G2_compress(): Builtin;
    static get bls12_381_G2_uncompress(): Builtin;
    static get bls12_381_millerLoop(): Builtin;
    static get bls12_381_mulMlResult(): Builtin;
    static get bls12_381_finalVerify(): Builtin;
    static get keccak_256(): Builtin;
    static get blake2b_224(): Builtin;
    static get integerToByteString(): Builtin;
    static get byteStringToInteger(): Builtin;
}
