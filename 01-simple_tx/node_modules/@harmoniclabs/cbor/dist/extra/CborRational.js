"use strict";
var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        if (typeof b !== "function" && b !== null)
            throw new TypeError("Class extends value " + String(b) + " is not a constructor or null");
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
var __read = (this && this.__read) || function (o, n) {
    var m = typeof Symbol === "function" && o[Symbol.iterator];
    if (!m) return o;
    var i = m.call(o), r, ar = [], e;
    try {
        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);
    }
    catch (error) { e = { error: error }; }
    finally {
        try {
            if (r && !r.done && (m = i["return"])) m.call(i);
        }
        finally { if (e) throw e.error; }
    }
    return ar;
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.CborPositiveRational = void 0;
var obj_utils_1 = require("@harmoniclabs/obj-utils");
var CborArray_1 = require("../CborObj/CborArray.js");
var CborTag_1 = require("../CborObj/CborTag.js");
var CborUInt_1 = require("../CborObj/CborUInt.js");
var ints_1 = require("../utils/ints.js");
var CborPositiveRational = /** @class */ (function (_super) {
    __extends(CborPositiveRational, _super);
    function CborPositiveRational(num, den) {
        var _this = this;
        var _num = (0, ints_1.forceBigUInt)(num);
        var _den = (0, ints_1.forceBigUInt)(den);
        _this = _super.call(this, 30, new CborArray_1.CborArray([
            new CborUInt_1.CborUInt(_num),
            new CborUInt_1.CborUInt(_den)
        ])) || this;
        (0, obj_utils_1.defineReadOnlyProperty)(_this, "num", _num);
        (0, obj_utils_1.defineReadOnlyProperty)(_this, "den", _den);
        return _this;
    }
    CborPositiveRational.fromCborObjOrUndef = function (cObj) {
        return ((cObj instanceof CborTag_1.CborTag &&
            cObj.data instanceof CborArray_1.CborArray &&
            cObj.data.array[0] instanceof CborUInt_1.CborUInt &&
            cObj.data.array[1] instanceof CborUInt_1.CborUInt) ?
            new CborPositiveRational(cObj.data.array[0].num, cObj.data.array[1].num)
            : undefined);
    };
    CborPositiveRational.fromNumber = function (n) {
        var _a = __read(n.toString().split("."), 2), a = _a[0], b = _a[1];
        /**
         * b might be undefinded (eg. whole numbers)
         * @since patch 1.1.2
        **/
        if (!(typeof b === "string")) {
            return new CborPositiveRational(Number(a), 1);
        }
        return new CborPositiveRational(
        // `a + b` is string concatenation
        Number(a + b), Number("1e".concat(b.length)));
    };
    CborPositiveRational.prototype.toNumber = function () {
        return Number(this.num) / Number(this.den);
    };
    CborPositiveRational.prototype.valueOf = function () {
        return this.toNumber();
    };
    return CborPositiveRational;
}(CborTag_1.CborTag));
exports.CborPositiveRational = CborPositiveRational;
