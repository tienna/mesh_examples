"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.CborTag = exports.isRawCborTag = void 0;
var obj_utils_1 = require("@harmoniclabs/obj-utils");
var assert_1 = require("../utils/assert.js");
var ints_1 = require("../utils/ints.js");
var CborObj_1 = require("./CborObj.js");
function isRawCborTag(t) {
    if (typeof t !== "object" || t === null)
        return false;
    var keys = Object.keys(t);
    return (keys.includes("tag") &&
        keys.includes("data") &&
        (0, ints_1.canBeUInteger)(t.tag) &&
        (0, CborObj_1.isRawCborObj)(t.data));
}
exports.isRawCborTag = isRawCborTag;
var CborTag = /** @class */ (function () {
    function CborTag(tag, data) {
        if (typeof tag === "number")
            tag = BigInt(tag);
        (0, assert_1.assert)(typeof tag === "bigint" &&
            (0, CborObj_1.isCborObj)(data), "using direct value constructor; either 'tag' is not a number or 'data' is missing");
        (0, obj_utils_1.defineReadOnlyProperty)(this, "tag", tag);
        (0, obj_utils_1.defineReadOnlyProperty)(this, "data", data);
    }
    CborTag.prototype.toRawObj = function () {
        return {
            tag: this.tag,
            data: this.data.toRawObj(),
        };
    };
    CborTag.prototype.clone = function () {
        return new CborTag(this.tag, this.data.clone());
    };
    return CborTag;
}());
exports.CborTag = CborTag;
