import type { MessageHeader, ConnectorPlatform, ScriptContext, UntypedConnectorKind } from './core/types';
export { isNufiMessage, isNufiWidgetManagementMessage } from './core/utils';
export declare const setIfDoesNotExist: <U>(into: any, path: string[], what: U) => void;
export declare const set: <U>(into: any, path: string[], what: U) => void;
export declare const messageDirectionMatches: (msg: MessageHeader, senderContext: ScriptContext, targetContext: ScriptContext) => boolean;
export declare const ensureChannelIsReady: (appId: string, connectorPlatform: ConnectorPlatform, connectorKind: UntypedConnectorKind, sendPostMessage: (message: unknown) => void) => Promise<unknown>;
export type EnsureChannelIsReady = typeof ensureChannelIsReady;
export declare const objKeyByConnectorPlatform: Record<ConnectorPlatform, string>;
export declare const safeReplyToEvent: (e: MessageEvent<unknown>, message: unknown) => void;
export { getRandomUUID } from './core/utils';
//# sourceMappingURL=publicUtils.d.ts.map