import type { InjectConnectors } from './core/injectConnectors';
import { logger, setLogLevel } from './core/logging';
import type { EnsureChannelIsReady } from './publicUtils';
import { getCoreSdkInfo } from './sdkInfo';
import type { EnsureWidgetEmbeddedInIframe, IFrameOptions } from './widget';
import type { SocialLoginInfo } from './widget/socialLoginInfo';
import { exposeSocialLoginInfo } from './widget/socialLoginInfo';
export { SdkInfoItem, SdkInfoMessage, getSdkInfoReporter } from './sdkInfo';
export { injectConnectors } from './core/injectConnectors';
export { ensureWidgetEmbeddedInIframe, EnsureWidgetEmbeddedInIframe, CORE_SDK_NOT_INITIALIZED, } from './widget';
export * from './core/types';
export * from './publicUtils';
export * from './widget/types';
export * from './widget/web3AuthProviders';
export type { SocialLoginInfoChangedMessage, SocialLoginInfo, } from './widget/socialLoginInfo';
type Api = {
    hideWidget: () => void;
    onSocialLoginInfoChanged: (cb: (data: SocialLoginInfo | null) => unknown) => SocialLoginInfo | null;
    getSocialLoginInfo: typeof exposeSocialLoginInfo;
    signOut: () => void;
    isMetamaskInstalled: () => Promise<boolean>;
};
type CoreDappSdkContext = {
    ensureWidgetEmbeddedInIframe: EnsureWidgetEmbeddedInIframe;
    ensureChannelIsReady: EnsureChannelIsReady;
    injectConnectors: InjectConnectors;
};
export type PublicCoreSdk = {
    __getContext: () => CoreDappSdkContext;
    __setLogLevel: typeof setLogLevel;
    __logger: typeof logger;
    __getSdkInfo: typeof getCoreSdkInfo;
    getApi: () => Api;
    init: (origin?: string) => void;
};
declare const publicNufiCoreSdk: {
    __getContext: () => CoreDappSdkContext;
    __setLogLevel: (level: "none" | "debug") => void;
    __logger: {
        debug: (...data: unknown[]) => void;
    };
    __getSdkInfo: () => import("./sdkInfo").SdkInfoItem;
    getApi: () => Api;
    init: (origin?: string, iframeOptions?: IFrameOptions) => void;
};
export default publicNufiCoreSdk;
//# sourceMappingURL=index.d.ts.map