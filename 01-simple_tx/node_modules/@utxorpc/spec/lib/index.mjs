var __defProp = Object.defineProperty;
var __export = (target, all) => {
  for (var name in all)
    __defProp(target, name, { get: all[name], enumerable: true });
};

// src/utxorpc/v1alpha/cardano/cardano_pb.ts
var cardano_pb_exports = {};
__export(cardano_pb_exports, {
  AddressPattern: () => AddressPattern,
  Anchor: () => Anchor,
  Asset: () => Asset,
  AssetPattern: () => AssetPattern,
  AuthCommitteeHotCert: () => AuthCommitteeHotCert,
  AuxData: () => AuxData,
  BigInt: () => BigInt,
  Block: () => Block,
  BlockBody: () => BlockBody,
  BlockHeader: () => BlockHeader,
  Certificate: () => Certificate,
  Collateral: () => Collateral,
  Constr: () => Constr,
  CostModel: () => CostModel,
  CostModels: () => CostModels,
  DRep: () => DRep,
  Datum: () => Datum,
  EvalError: () => EvalError,
  EvalTrace: () => EvalTrace,
  ExPrices: () => ExPrices,
  ExUnits: () => ExUnits,
  GenesisKeyDelegationCert: () => GenesisKeyDelegationCert,
  Metadata: () => Metadata,
  Metadatum: () => Metadatum,
  MetadatumArray: () => MetadatumArray,
  MetadatumMap: () => MetadatumMap,
  MetadatumPair: () => MetadatumPair,
  MirCert: () => MirCert,
  MirSource: () => MirSource,
  MirTarget: () => MirTarget,
  Multiasset: () => Multiasset,
  NativeScript: () => NativeScript,
  NativeScriptList: () => NativeScriptList,
  PParams: () => PParams,
  PlutusData: () => PlutusData,
  PlutusDataArray: () => PlutusDataArray,
  PlutusDataMap: () => PlutusDataMap,
  PlutusDataPair: () => PlutusDataPair,
  PoolMetadata: () => PoolMetadata,
  PoolRegistrationCert: () => PoolRegistrationCert,
  PoolRetirementCert: () => PoolRetirementCert,
  ProtocolVersion: () => ProtocolVersion,
  RationalNumber: () => RationalNumber,
  Redeemer: () => Redeemer,
  RedeemerPurpose: () => RedeemerPurpose,
  RegCert: () => RegCert,
  RegDRepCert: () => RegDRepCert,
  Relay: () => Relay,
  ResignCommitteeColdCert: () => ResignCommitteeColdCert,
  Script: () => Script,
  ScriptNOfK: () => ScriptNOfK,
  StakeCredential: () => StakeCredential,
  StakeDelegationCert: () => StakeDelegationCert,
  StakeRegDelegCert: () => StakeRegDelegCert,
  StakeVoteDelegCert: () => StakeVoteDelegCert,
  StakeVoteRegDelegCert: () => StakeVoteRegDelegCert,
  Tx: () => Tx,
  TxEval: () => TxEval,
  TxInput: () => TxInput,
  TxOutput: () => TxOutput,
  TxOutputPattern: () => TxOutputPattern,
  TxPattern: () => TxPattern,
  TxValidity: () => TxValidity,
  UnRegCert: () => UnRegCert,
  UnRegDRepCert: () => UnRegDRepCert,
  UpdateDRepCert: () => UpdateDRepCert,
  VKeyWitness: () => VKeyWitness,
  VoteDelegCert: () => VoteDelegCert,
  VoteRegDelegCert: () => VoteRegDelegCert,
  Withdrawal: () => Withdrawal,
  WitnessSet: () => WitnessSet
});
import { Message, proto3, protoInt64 } from "@bufbuild/protobuf";
var RedeemerPurpose = /* @__PURE__ */ ((RedeemerPurpose2) => {
  RedeemerPurpose2[RedeemerPurpose2["UNSPECIFIED"] = 0] = "UNSPECIFIED";
  RedeemerPurpose2[RedeemerPurpose2["SPEND"] = 1] = "SPEND";
  RedeemerPurpose2[RedeemerPurpose2["MINT"] = 2] = "MINT";
  RedeemerPurpose2[RedeemerPurpose2["CERT"] = 3] = "CERT";
  RedeemerPurpose2[RedeemerPurpose2["REWARD"] = 4] = "REWARD";
  RedeemerPurpose2[RedeemerPurpose2["VOTE"] = 5] = "VOTE";
  RedeemerPurpose2[RedeemerPurpose2["PROPOSE"] = 6] = "PROPOSE";
  return RedeemerPurpose2;
})(RedeemerPurpose || {});
proto3.util.setEnumType(RedeemerPurpose, "utxorpc.v1alpha.cardano.RedeemerPurpose", [
  { no: 0, name: "REDEEMER_PURPOSE_UNSPECIFIED" },
  { no: 1, name: "REDEEMER_PURPOSE_SPEND" },
  { no: 2, name: "REDEEMER_PURPOSE_MINT" },
  { no: 3, name: "REDEEMER_PURPOSE_CERT" },
  { no: 4, name: "REDEEMER_PURPOSE_REWARD" },
  { no: 5, name: "REDEEMER_PURPOSE_VOTE" },
  { no: 6, name: "REDEEMER_PURPOSE_PROPOSE" }
]);
var MirSource = /* @__PURE__ */ ((MirSource2) => {
  MirSource2[MirSource2["UNSPECIFIED"] = 0] = "UNSPECIFIED";
  MirSource2[MirSource2["RESERVES"] = 1] = "RESERVES";
  MirSource2[MirSource2["TREASURY"] = 2] = "TREASURY";
  return MirSource2;
})(MirSource || {});
proto3.util.setEnumType(MirSource, "utxorpc.v1alpha.cardano.MirSource", [
  { no: 0, name: "MIR_SOURCE_UNSPECIFIED" },
  { no: 1, name: "MIR_SOURCE_RESERVES" },
  { no: 2, name: "MIR_SOURCE_TREASURY" }
]);
var _Redeemer = class _Redeemer extends Message {
  constructor(data) {
    super();
    /**
     * Purpose of the redeemer.
     *
     * @generated from field: utxorpc.v1alpha.cardano.RedeemerPurpose purpose = 1;
     */
    this.purpose = 0 /* UNSPECIFIED */;
    proto3.util.initPartial(data, this);
  }
  static fromBinary(bytes, options) {
    return new _Redeemer().fromBinary(bytes, options);
  }
  static fromJson(jsonValue, options) {
    return new _Redeemer().fromJson(jsonValue, options);
  }
  static fromJsonString(jsonString, options) {
    return new _Redeemer().fromJsonString(jsonString, options);
  }
  static equals(a, b) {
    return proto3.util.equals(_Redeemer, a, b);
  }
};
_Redeemer.runtime = proto3;
_Redeemer.typeName = "utxorpc.v1alpha.cardano.Redeemer";
_Redeemer.fields = proto3.util.newFieldList(() => [
  { no: 1, name: "purpose", kind: "enum", T: proto3.getEnumType(RedeemerPurpose) },
  { no: 2, name: "payload", kind: "message", T: PlutusData }
]);
var Redeemer = _Redeemer;
var _TxInput = class _TxInput extends Message {
  constructor(data) {
    super();
    /**
     * Hash of the previous transaction.
     *
     * @generated from field: bytes tx_hash = 1;
     */
    this.txHash = new Uint8Array(0);
    /**
     * Index of the output in the previous transaction.
     *
     * @generated from field: uint32 output_index = 2;
     */
    this.outputIndex = 0;
    proto3.util.initPartial(data, this);
  }
  static fromBinary(bytes, options) {
    return new _TxInput().fromBinary(bytes, options);
  }
  static fromJson(jsonValue, options) {
    return new _TxInput().fromJson(jsonValue, options);
  }
  static fromJsonString(jsonString, options) {
    return new _TxInput().fromJsonString(jsonString, options);
  }
  static equals(a, b) {
    return proto3.util.equals(_TxInput, a, b);
  }
};
_TxInput.runtime = proto3;
_TxInput.typeName = "utxorpc.v1alpha.cardano.TxInput";
_TxInput.fields = proto3.util.newFieldList(() => [
  {
    no: 1,
    name: "tx_hash",
    kind: "scalar",
    T: 12
    /* ScalarType.BYTES */
  },
  {
    no: 2,
    name: "output_index",
    kind: "scalar",
    T: 13
    /* ScalarType.UINT32 */
  },
  { no: 3, name: "as_output", kind: "message", T: TxOutput },
  { no: 4, name: "redeemer", kind: "message", T: Redeemer }
]);
var TxInput = _TxInput;
var _TxOutput = class _TxOutput extends Message {
  constructor(data) {
    super();
    /**
     * Address receiving the output.
     *
     * @generated from field: bytes address = 1;
     */
    this.address = new Uint8Array(0);
    /**
     * Amount of ADA in the output.
     *
     * @generated from field: uint64 coin = 2;
     */
    this.coin = protoInt64.zero;
    /**
     * Additional native (non-ADA) assets in the output.
     *
     * @generated from field: repeated utxorpc.v1alpha.cardano.Multiasset assets = 3;
     */
    this.assets = [];
    proto3.util.initPartial(data, this);
  }
  static fromBinary(bytes, options) {
    return new _TxOutput().fromBinary(bytes, options);
  }
  static fromJson(jsonValue, options) {
    return new _TxOutput().fromJson(jsonValue, options);
  }
  static fromJsonString(jsonString, options) {
    return new _TxOutput().fromJsonString(jsonString, options);
  }
  static equals(a, b) {
    return proto3.util.equals(_TxOutput, a, b);
  }
};
_TxOutput.runtime = proto3;
_TxOutput.typeName = "utxorpc.v1alpha.cardano.TxOutput";
_TxOutput.fields = proto3.util.newFieldList(() => [
  {
    no: 1,
    name: "address",
    kind: "scalar",
    T: 12
    /* ScalarType.BYTES */
  },
  {
    no: 2,
    name: "coin",
    kind: "scalar",
    T: 4
    /* ScalarType.UINT64 */
  },
  { no: 3, name: "assets", kind: "message", T: Multiasset, repeated: true },
  { no: 4, name: "datum", kind: "message", T: Datum },
  { no: 5, name: "script", kind: "message", T: Script }
]);
var TxOutput = _TxOutput;
var _Datum = class _Datum extends Message {
  constructor(data) {
    super();
    /**
     * Hash of this datum as seen on-chain
     *
     * @generated from field: bytes hash = 1;
     */
    this.hash = new Uint8Array(0);
    /**
     * Original cbor-encoded data as seen on-chain
     *
     * @generated from field: bytes original_cbor = 3;
     */
    this.originalCbor = new Uint8Array(0);
    proto3.util.initPartial(data, this);
  }
  static fromBinary(bytes, options) {
    return new _Datum().fromBinary(bytes, options);
  }
  static fromJson(jsonValue, options) {
    return new _Datum().fromJson(jsonValue, options);
  }
  static fromJsonString(jsonString, options) {
    return new _Datum().fromJsonString(jsonString, options);
  }
  static equals(a, b) {
    return proto3.util.equals(_Datum, a, b);
  }
};
_Datum.runtime = proto3;
_Datum.typeName = "utxorpc.v1alpha.cardano.Datum";
_Datum.fields = proto3.util.newFieldList(() => [
  {
    no: 1,
    name: "hash",
    kind: "scalar",
    T: 12
    /* ScalarType.BYTES */
  },
  { no: 2, name: "payload", kind: "message", T: PlutusData },
  {
    no: 3,
    name: "original_cbor",
    kind: "scalar",
    T: 12
    /* ScalarType.BYTES */
  }
]);
var Datum = _Datum;
var _Asset = class _Asset extends Message {
  constructor(data) {
    super();
    /**
     * Name of the custom asset.
     *
     * @generated from field: bytes name = 1;
     */
    this.name = new Uint8Array(0);
    /**
     * Quantity of the custom asset in case of an output.
     *
     * @generated from field: uint64 output_coin = 2;
     */
    this.outputCoin = protoInt64.zero;
    /**
     * Quantity of the custom asset in case of a mint.
     *
     * @generated from field: int64 mint_coin = 3;
     */
    this.mintCoin = protoInt64.zero;
    proto3.util.initPartial(data, this);
  }
  static fromBinary(bytes, options) {
    return new _Asset().fromBinary(bytes, options);
  }
  static fromJson(jsonValue, options) {
    return new _Asset().fromJson(jsonValue, options);
  }
  static fromJsonString(jsonString, options) {
    return new _Asset().fromJsonString(jsonString, options);
  }
  static equals(a, b) {
    return proto3.util.equals(_Asset, a, b);
  }
};
_Asset.runtime = proto3;
_Asset.typeName = "utxorpc.v1alpha.cardano.Asset";
_Asset.fields = proto3.util.newFieldList(() => [
  {
    no: 1,
    name: "name",
    kind: "scalar",
    T: 12
    /* ScalarType.BYTES */
  },
  {
    no: 2,
    name: "output_coin",
    kind: "scalar",
    T: 4
    /* ScalarType.UINT64 */
  },
  {
    no: 3,
    name: "mint_coin",
    kind: "scalar",
    T: 3
    /* ScalarType.INT64 */
  }
]);
var Asset = _Asset;
var _Multiasset = class _Multiasset extends Message {
  constructor(data) {
    super();
    /**
     * Policy ID governing the custom assets.
     *
     * @generated from field: bytes policy_id = 1;
     */
    this.policyId = new Uint8Array(0);
    /**
     * List of custom assets.
     *
     * @generated from field: repeated utxorpc.v1alpha.cardano.Asset assets = 2;
     */
    this.assets = [];
    proto3.util.initPartial(data, this);
  }
  static fromBinary(bytes, options) {
    return new _Multiasset().fromBinary(bytes, options);
  }
  static fromJson(jsonValue, options) {
    return new _Multiasset().fromJson(jsonValue, options);
  }
  static fromJsonString(jsonString, options) {
    return new _Multiasset().fromJsonString(jsonString, options);
  }
  static equals(a, b) {
    return proto3.util.equals(_Multiasset, a, b);
  }
};
_Multiasset.runtime = proto3;
_Multiasset.typeName = "utxorpc.v1alpha.cardano.Multiasset";
_Multiasset.fields = proto3.util.newFieldList(() => [
  {
    no: 1,
    name: "policy_id",
    kind: "scalar",
    T: 12
    /* ScalarType.BYTES */
  },
  { no: 2, name: "assets", kind: "message", T: Asset, repeated: true },
  { no: 3, name: "redeemer", kind: "message", T: Redeemer }
]);
var Multiasset = _Multiasset;
var _TxValidity = class _TxValidity extends Message {
  constructor(data) {
    super();
    /**
     * Start of the validity interval.
     *
     * @generated from field: uint64 start = 1;
     */
    this.start = protoInt64.zero;
    /**
     * End of the validity interval (TTL: Time to Live).
     *
     * @generated from field: uint64 ttl = 2;
     */
    this.ttl = protoInt64.zero;
    proto3.util.initPartial(data, this);
  }
  static fromBinary(bytes, options) {
    return new _TxValidity().fromBinary(bytes, options);
  }
  static fromJson(jsonValue, options) {
    return new _TxValidity().fromJson(jsonValue, options);
  }
  static fromJsonString(jsonString, options) {
    return new _TxValidity().fromJsonString(jsonString, options);
  }
  static equals(a, b) {
    return proto3.util.equals(_TxValidity, a, b);
  }
};
_TxValidity.runtime = proto3;
_TxValidity.typeName = "utxorpc.v1alpha.cardano.TxValidity";
_TxValidity.fields = proto3.util.newFieldList(() => [
  {
    no: 1,
    name: "start",
    kind: "scalar",
    T: 4
    /* ScalarType.UINT64 */
  },
  {
    no: 2,
    name: "ttl",
    kind: "scalar",
    T: 4
    /* ScalarType.UINT64 */
  }
]);
var TxValidity = _TxValidity;
var _Collateral = class _Collateral extends Message {
  constructor(data) {
    super();
    /**
     * Collateral inputs for the transaction.
     *
     * @generated from field: repeated utxorpc.v1alpha.cardano.TxInput collateral = 1;
     */
    this.collateral = [];
    /**
     * Total amount of collateral.
     *
     * @generated from field: uint64 total_collateral = 3;
     */
    this.totalCollateral = protoInt64.zero;
    proto3.util.initPartial(data, this);
  }
  static fromBinary(bytes, options) {
    return new _Collateral().fromBinary(bytes, options);
  }
  static fromJson(jsonValue, options) {
    return new _Collateral().fromJson(jsonValue, options);
  }
  static fromJsonString(jsonString, options) {
    return new _Collateral().fromJsonString(jsonString, options);
  }
  static equals(a, b) {
    return proto3.util.equals(_Collateral, a, b);
  }
};
_Collateral.runtime = proto3;
_Collateral.typeName = "utxorpc.v1alpha.cardano.Collateral";
_Collateral.fields = proto3.util.newFieldList(() => [
  { no: 1, name: "collateral", kind: "message", T: TxInput, repeated: true },
  { no: 2, name: "collateral_return", kind: "message", T: TxOutput },
  {
    no: 3,
    name: "total_collateral",
    kind: "scalar",
    T: 4
    /* ScalarType.UINT64 */
  }
]);
var Collateral = _Collateral;
var _Withdrawal = class _Withdrawal extends Message {
  constructor(data) {
    super();
    /**
     * Address of the reward account.
     *
     * @generated from field: bytes reward_account = 1;
     */
    this.rewardAccount = new Uint8Array(0);
    /**
     * Amount of ADA withdrawn.
     *
     * @generated from field: uint64 coin = 2;
     */
    this.coin = protoInt64.zero;
    proto3.util.initPartial(data, this);
  }
  static fromBinary(bytes, options) {
    return new _Withdrawal().fromBinary(bytes, options);
  }
  static fromJson(jsonValue, options) {
    return new _Withdrawal().fromJson(jsonValue, options);
  }
  static fromJsonString(jsonString, options) {
    return new _Withdrawal().fromJsonString(jsonString, options);
  }
  static equals(a, b) {
    return proto3.util.equals(_Withdrawal, a, b);
  }
};
_Withdrawal.runtime = proto3;
_Withdrawal.typeName = "utxorpc.v1alpha.cardano.Withdrawal";
_Withdrawal.fields = proto3.util.newFieldList(() => [
  {
    no: 1,
    name: "reward_account",
    kind: "scalar",
    T: 12
    /* ScalarType.BYTES */
  },
  {
    no: 2,
    name: "coin",
    kind: "scalar",
    T: 4
    /* ScalarType.UINT64 */
  },
  { no: 3, name: "redeemer", kind: "message", T: Redeemer }
]);
var Withdrawal = _Withdrawal;
var _WitnessSet = class _WitnessSet extends Message {
  constructor(data) {
    super();
    /**
     * List of VKey witnesses.
     *
     * @generated from field: repeated utxorpc.v1alpha.cardano.VKeyWitness vkeywitness = 1;
     */
    this.vkeywitness = [];
    /**
     * List of scripts.
     *
     * @generated from field: repeated utxorpc.v1alpha.cardano.Script script = 2;
     */
    this.script = [];
    /**
     * List of Plutus data elements associated with the transaction.
     *
     * @generated from field: repeated utxorpc.v1alpha.cardano.PlutusData plutus_datums = 3;
     */
    this.plutusDatums = [];
    proto3.util.initPartial(data, this);
  }
  static fromBinary(bytes, options) {
    return new _WitnessSet().fromBinary(bytes, options);
  }
  static fromJson(jsonValue, options) {
    return new _WitnessSet().fromJson(jsonValue, options);
  }
  static fromJsonString(jsonString, options) {
    return new _WitnessSet().fromJsonString(jsonString, options);
  }
  static equals(a, b) {
    return proto3.util.equals(_WitnessSet, a, b);
  }
};
_WitnessSet.runtime = proto3;
_WitnessSet.typeName = "utxorpc.v1alpha.cardano.WitnessSet";
_WitnessSet.fields = proto3.util.newFieldList(() => [
  { no: 1, name: "vkeywitness", kind: "message", T: VKeyWitness, repeated: true },
  { no: 2, name: "script", kind: "message", T: Script, repeated: true },
  { no: 3, name: "plutus_datums", kind: "message", T: PlutusData, repeated: true }
]);
var WitnessSet = _WitnessSet;
var _AuxData = class _AuxData extends Message {
  constructor(data) {
    super();
    /**
     * List of auxiliary metadata elements.
     *
     * @generated from field: repeated utxorpc.v1alpha.cardano.Metadata metadata = 1;
     */
    this.metadata = [];
    /**
     * List of auxiliary scripts.
     *
     * @generated from field: repeated utxorpc.v1alpha.cardano.Script scripts = 2;
     */
    this.scripts = [];
    proto3.util.initPartial(data, this);
  }
  static fromBinary(bytes, options) {
    return new _AuxData().fromBinary(bytes, options);
  }
  static fromJson(jsonValue, options) {
    return new _AuxData().fromJson(jsonValue, options);
  }
  static fromJsonString(jsonString, options) {
    return new _AuxData().fromJsonString(jsonString, options);
  }
  static equals(a, b) {
    return proto3.util.equals(_AuxData, a, b);
  }
};
_AuxData.runtime = proto3;
_AuxData.typeName = "utxorpc.v1alpha.cardano.AuxData";
_AuxData.fields = proto3.util.newFieldList(() => [
  { no: 1, name: "metadata", kind: "message", T: Metadata, repeated: true },
  { no: 2, name: "scripts", kind: "message", T: Script, repeated: true }
]);
var AuxData = _AuxData;
var _Tx = class _Tx extends Message {
  constructor(data) {
    super();
    /**
     * List of transaction inputs
     *
     * @generated from field: repeated utxorpc.v1alpha.cardano.TxInput inputs = 1;
     */
    this.inputs = [];
    /**
     * List of transaction outputs
     *
     * @generated from field: repeated utxorpc.v1alpha.cardano.TxOutput outputs = 2;
     */
    this.outputs = [];
    /**
     * List of certificates
     *
     * @generated from field: repeated utxorpc.v1alpha.cardano.Certificate certificates = 3;
     */
    this.certificates = [];
    /**
     * List of withdrawals
     *
     * @generated from field: repeated utxorpc.v1alpha.cardano.Withdrawal withdrawals = 4;
     */
    this.withdrawals = [];
    /**
     * List of minted custom assets
     *
     * @generated from field: repeated utxorpc.v1alpha.cardano.Multiasset mint = 5;
     */
    this.mint = [];
    /**
     * List of reference inputs
     *
     * @generated from field: repeated utxorpc.v1alpha.cardano.TxInput reference_inputs = 6;
     */
    this.referenceInputs = [];
    /**
     * Transaction fee in ADA
     *
     * @generated from field: uint64 fee = 9;
     */
    this.fee = protoInt64.zero;
    /**
     * Flag indicating whether the transaction was successful
     *
     * @generated from field: bool successful = 11;
     */
    this.successful = false;
    /**
     * Hash of the transaction that serves as main identifier
     *
     * @generated from field: bytes hash = 13;
     */
    this.hash = new Uint8Array(0);
    proto3.util.initPartial(data, this);
  }
  static fromBinary(bytes, options) {
    return new _Tx().fromBinary(bytes, options);
  }
  static fromJson(jsonValue, options) {
    return new _Tx().fromJson(jsonValue, options);
  }
  static fromJsonString(jsonString, options) {
    return new _Tx().fromJsonString(jsonString, options);
  }
  static equals(a, b) {
    return proto3.util.equals(_Tx, a, b);
  }
};
_Tx.runtime = proto3;
_Tx.typeName = "utxorpc.v1alpha.cardano.Tx";
_Tx.fields = proto3.util.newFieldList(() => [
  { no: 1, name: "inputs", kind: "message", T: TxInput, repeated: true },
  { no: 2, name: "outputs", kind: "message", T: TxOutput, repeated: true },
  { no: 3, name: "certificates", kind: "message", T: Certificate, repeated: true },
  { no: 4, name: "withdrawals", kind: "message", T: Withdrawal, repeated: true },
  { no: 5, name: "mint", kind: "message", T: Multiasset, repeated: true },
  { no: 6, name: "reference_inputs", kind: "message", T: TxInput, repeated: true },
  { no: 7, name: "witnesses", kind: "message", T: WitnessSet },
  { no: 8, name: "collateral", kind: "message", T: Collateral },
  {
    no: 9,
    name: "fee",
    kind: "scalar",
    T: 4
    /* ScalarType.UINT64 */
  },
  { no: 10, name: "validity", kind: "message", T: TxValidity },
  {
    no: 11,
    name: "successful",
    kind: "scalar",
    T: 8
    /* ScalarType.BOOL */
  },
  { no: 12, name: "auxiliary", kind: "message", T: AuxData },
  {
    no: 13,
    name: "hash",
    kind: "scalar",
    T: 12
    /* ScalarType.BYTES */
  }
]);
var Tx = _Tx;
var _BlockHeader = class _BlockHeader extends Message {
  constructor(data) {
    super();
    /**
     * Slot number.
     *
     * @generated from field: uint64 slot = 1;
     */
    this.slot = protoInt64.zero;
    /**
     * Block hash.
     *
     * @generated from field: bytes hash = 2;
     */
    this.hash = new Uint8Array(0);
    /**
     * Block height.
     *
     * @generated from field: uint64 height = 3;
     */
    this.height = protoInt64.zero;
    proto3.util.initPartial(data, this);
  }
  static fromBinary(bytes, options) {
    return new _BlockHeader().fromBinary(bytes, options);
  }
  static fromJson(jsonValue, options) {
    return new _BlockHeader().fromJson(jsonValue, options);
  }
  static fromJsonString(jsonString, options) {
    return new _BlockHeader().fromJsonString(jsonString, options);
  }
  static equals(a, b) {
    return proto3.util.equals(_BlockHeader, a, b);
  }
};
_BlockHeader.runtime = proto3;
_BlockHeader.typeName = "utxorpc.v1alpha.cardano.BlockHeader";
_BlockHeader.fields = proto3.util.newFieldList(() => [
  {
    no: 1,
    name: "slot",
    kind: "scalar",
    T: 4
    /* ScalarType.UINT64 */
  },
  {
    no: 2,
    name: "hash",
    kind: "scalar",
    T: 12
    /* ScalarType.BYTES */
  },
  {
    no: 3,
    name: "height",
    kind: "scalar",
    T: 4
    /* ScalarType.UINT64 */
  }
]);
var BlockHeader = _BlockHeader;
var _BlockBody = class _BlockBody extends Message {
  constructor(data) {
    super();
    /**
     * List of transactions.
     *
     * @generated from field: repeated utxorpc.v1alpha.cardano.Tx tx = 1;
     */
    this.tx = [];
    proto3.util.initPartial(data, this);
  }
  static fromBinary(bytes, options) {
    return new _BlockBody().fromBinary(bytes, options);
  }
  static fromJson(jsonValue, options) {
    return new _BlockBody().fromJson(jsonValue, options);
  }
  static fromJsonString(jsonString, options) {
    return new _BlockBody().fromJsonString(jsonString, options);
  }
  static equals(a, b) {
    return proto3.util.equals(_BlockBody, a, b);
  }
};
_BlockBody.runtime = proto3;
_BlockBody.typeName = "utxorpc.v1alpha.cardano.BlockBody";
_BlockBody.fields = proto3.util.newFieldList(() => [
  { no: 1, name: "tx", kind: "message", T: Tx, repeated: true }
]);
var BlockBody = _BlockBody;
var _Block = class _Block extends Message {
  constructor(data) {
    super();
    proto3.util.initPartial(data, this);
  }
  static fromBinary(bytes, options) {
    return new _Block().fromBinary(bytes, options);
  }
  static fromJson(jsonValue, options) {
    return new _Block().fromJson(jsonValue, options);
  }
  static fromJsonString(jsonString, options) {
    return new _Block().fromJsonString(jsonString, options);
  }
  static equals(a, b) {
    return proto3.util.equals(_Block, a, b);
  }
};
_Block.runtime = proto3;
_Block.typeName = "utxorpc.v1alpha.cardano.Block";
_Block.fields = proto3.util.newFieldList(() => [
  { no: 1, name: "header", kind: "message", T: BlockHeader },
  { no: 2, name: "body", kind: "message", T: BlockBody }
]);
var Block = _Block;
var _VKeyWitness = class _VKeyWitness extends Message {
  constructor(data) {
    super();
    /**
     * Verification key.
     *
     * @generated from field: bytes vkey = 1;
     */
    this.vkey = new Uint8Array(0);
    /**
     * Signature generated using the associated private key.
     *
     * @generated from field: bytes signature = 2;
     */
    this.signature = new Uint8Array(0);
    proto3.util.initPartial(data, this);
  }
  static fromBinary(bytes, options) {
    return new _VKeyWitness().fromBinary(bytes, options);
  }
  static fromJson(jsonValue, options) {
    return new _VKeyWitness().fromJson(jsonValue, options);
  }
  static fromJsonString(jsonString, options) {
    return new _VKeyWitness().fromJsonString(jsonString, options);
  }
  static equals(a, b) {
    return proto3.util.equals(_VKeyWitness, a, b);
  }
};
_VKeyWitness.runtime = proto3;
_VKeyWitness.typeName = "utxorpc.v1alpha.cardano.VKeyWitness";
_VKeyWitness.fields = proto3.util.newFieldList(() => [
  {
    no: 1,
    name: "vkey",
    kind: "scalar",
    T: 12
    /* ScalarType.BYTES */
  },
  {
    no: 2,
    name: "signature",
    kind: "scalar",
    T: 12
    /* ScalarType.BYTES */
  }
]);
var VKeyWitness = _VKeyWitness;
var _NativeScript = class _NativeScript extends Message {
  constructor(data) {
    super();
    /**
     * @generated from oneof utxorpc.v1alpha.cardano.NativeScript.native_script
     */
    this.nativeScript = { case: void 0 };
    proto3.util.initPartial(data, this);
  }
  static fromBinary(bytes, options) {
    return new _NativeScript().fromBinary(bytes, options);
  }
  static fromJson(jsonValue, options) {
    return new _NativeScript().fromJson(jsonValue, options);
  }
  static fromJsonString(jsonString, options) {
    return new _NativeScript().fromJsonString(jsonString, options);
  }
  static equals(a, b) {
    return proto3.util.equals(_NativeScript, a, b);
  }
};
_NativeScript.runtime = proto3;
_NativeScript.typeName = "utxorpc.v1alpha.cardano.NativeScript";
_NativeScript.fields = proto3.util.newFieldList(() => [
  { no: 1, name: "script_pubkey", kind: "scalar", T: 12, oneof: "native_script" },
  { no: 2, name: "script_all", kind: "message", T: NativeScriptList, oneof: "native_script" },
  { no: 3, name: "script_any", kind: "message", T: NativeScriptList, oneof: "native_script" },
  { no: 4, name: "script_n_of_k", kind: "message", T: ScriptNOfK, oneof: "native_script" },
  { no: 5, name: "invalid_before", kind: "scalar", T: 4, oneof: "native_script" },
  { no: 6, name: "invalid_hereafter", kind: "scalar", T: 4, oneof: "native_script" }
]);
var NativeScript = _NativeScript;
var _NativeScriptList = class _NativeScriptList extends Message {
  constructor(data) {
    super();
    /**
     * List of native scripts.
     *
     * @generated from field: repeated utxorpc.v1alpha.cardano.NativeScript items = 1;
     */
    this.items = [];
    proto3.util.initPartial(data, this);
  }
  static fromBinary(bytes, options) {
    return new _NativeScriptList().fromBinary(bytes, options);
  }
  static fromJson(jsonValue, options) {
    return new _NativeScriptList().fromJson(jsonValue, options);
  }
  static fromJsonString(jsonString, options) {
    return new _NativeScriptList().fromJsonString(jsonString, options);
  }
  static equals(a, b) {
    return proto3.util.equals(_NativeScriptList, a, b);
  }
};
_NativeScriptList.runtime = proto3;
_NativeScriptList.typeName = "utxorpc.v1alpha.cardano.NativeScriptList";
_NativeScriptList.fields = proto3.util.newFieldList(() => [
  { no: 1, name: "items", kind: "message", T: NativeScript, repeated: true }
]);
var NativeScriptList = _NativeScriptList;
var _ScriptNOfK = class _ScriptNOfK extends Message {
  constructor(data) {
    super();
    /**
     * The number of required satisfied scripts.
     *
     * @generated from field: uint32 k = 1;
     */
    this.k = 0;
    /**
     * List of native scripts.
     *
     * @generated from field: repeated utxorpc.v1alpha.cardano.NativeScript scripts = 2;
     */
    this.scripts = [];
    proto3.util.initPartial(data, this);
  }
  static fromBinary(bytes, options) {
    return new _ScriptNOfK().fromBinary(bytes, options);
  }
  static fromJson(jsonValue, options) {
    return new _ScriptNOfK().fromJson(jsonValue, options);
  }
  static fromJsonString(jsonString, options) {
    return new _ScriptNOfK().fromJsonString(jsonString, options);
  }
  static equals(a, b) {
    return proto3.util.equals(_ScriptNOfK, a, b);
  }
};
_ScriptNOfK.runtime = proto3;
_ScriptNOfK.typeName = "utxorpc.v1alpha.cardano.ScriptNOfK";
_ScriptNOfK.fields = proto3.util.newFieldList(() => [
  {
    no: 1,
    name: "k",
    kind: "scalar",
    T: 13
    /* ScalarType.UINT32 */
  },
  { no: 2, name: "scripts", kind: "message", T: NativeScript, repeated: true }
]);
var ScriptNOfK = _ScriptNOfK;
var _Constr = class _Constr extends Message {
  constructor(data) {
    super();
    /**
     * @generated from field: uint32 tag = 1;
     */
    this.tag = 0;
    /**
     * @generated from field: uint64 any_constructor = 2;
     */
    this.anyConstructor = protoInt64.zero;
    /**
     * @generated from field: repeated utxorpc.v1alpha.cardano.PlutusData fields = 3;
     */
    this.fields = [];
    proto3.util.initPartial(data, this);
  }
  static fromBinary(bytes, options) {
    return new _Constr().fromBinary(bytes, options);
  }
  static fromJson(jsonValue, options) {
    return new _Constr().fromJson(jsonValue, options);
  }
  static fromJsonString(jsonString, options) {
    return new _Constr().fromJsonString(jsonString, options);
  }
  static equals(a, b) {
    return proto3.util.equals(_Constr, a, b);
  }
};
_Constr.runtime = proto3;
_Constr.typeName = "utxorpc.v1alpha.cardano.Constr";
_Constr.fields = proto3.util.newFieldList(() => [
  {
    no: 1,
    name: "tag",
    kind: "scalar",
    T: 13
    /* ScalarType.UINT32 */
  },
  {
    no: 2,
    name: "any_constructor",
    kind: "scalar",
    T: 4
    /* ScalarType.UINT64 */
  },
  { no: 3, name: "fields", kind: "message", T: PlutusData, repeated: true }
]);
var Constr = _Constr;
var _BigInt = class _BigInt extends Message {
  constructor(data) {
    super();
    /**
     * @generated from oneof utxorpc.v1alpha.cardano.BigInt.big_int
     */
    this.bigInt = { case: void 0 };
    proto3.util.initPartial(data, this);
  }
  static fromBinary(bytes, options) {
    return new _BigInt().fromBinary(bytes, options);
  }
  static fromJson(jsonValue, options) {
    return new _BigInt().fromJson(jsonValue, options);
  }
  static fromJsonString(jsonString, options) {
    return new _BigInt().fromJsonString(jsonString, options);
  }
  static equals(a, b) {
    return proto3.util.equals(_BigInt, a, b);
  }
};
_BigInt.runtime = proto3;
_BigInt.typeName = "utxorpc.v1alpha.cardano.BigInt";
_BigInt.fields = proto3.util.newFieldList(() => [
  { no: 1, name: "int", kind: "scalar", T: 3, oneof: "big_int" },
  { no: 2, name: "big_u_int", kind: "scalar", T: 12, oneof: "big_int" },
  { no: 3, name: "big_n_int", kind: "scalar", T: 12, oneof: "big_int" }
]);
var BigInt = _BigInt;
var _PlutusDataPair = class _PlutusDataPair extends Message {
  constructor(data) {
    super();
    proto3.util.initPartial(data, this);
  }
  static fromBinary(bytes, options) {
    return new _PlutusDataPair().fromBinary(bytes, options);
  }
  static fromJson(jsonValue, options) {
    return new _PlutusDataPair().fromJson(jsonValue, options);
  }
  static fromJsonString(jsonString, options) {
    return new _PlutusDataPair().fromJsonString(jsonString, options);
  }
  static equals(a, b) {
    return proto3.util.equals(_PlutusDataPair, a, b);
  }
};
_PlutusDataPair.runtime = proto3;
_PlutusDataPair.typeName = "utxorpc.v1alpha.cardano.PlutusDataPair";
_PlutusDataPair.fields = proto3.util.newFieldList(() => [
  { no: 1, name: "key", kind: "message", T: PlutusData },
  { no: 2, name: "value", kind: "message", T: PlutusData }
]);
var PlutusDataPair = _PlutusDataPair;
var _PlutusData = class _PlutusData extends Message {
  constructor(data) {
    super();
    /**
     * @generated from oneof utxorpc.v1alpha.cardano.PlutusData.plutus_data
     */
    this.plutusData = { case: void 0 };
    proto3.util.initPartial(data, this);
  }
  static fromBinary(bytes, options) {
    return new _PlutusData().fromBinary(bytes, options);
  }
  static fromJson(jsonValue, options) {
    return new _PlutusData().fromJson(jsonValue, options);
  }
  static fromJsonString(jsonString, options) {
    return new _PlutusData().fromJsonString(jsonString, options);
  }
  static equals(a, b) {
    return proto3.util.equals(_PlutusData, a, b);
  }
};
_PlutusData.runtime = proto3;
_PlutusData.typeName = "utxorpc.v1alpha.cardano.PlutusData";
_PlutusData.fields = proto3.util.newFieldList(() => [
  { no: 2, name: "constr", kind: "message", T: Constr, oneof: "plutus_data" },
  { no: 3, name: "map", kind: "message", T: PlutusDataMap, oneof: "plutus_data" },
  { no: 4, name: "big_int", kind: "message", T: BigInt, oneof: "plutus_data" },
  { no: 5, name: "bounded_bytes", kind: "scalar", T: 12, oneof: "plutus_data" },
  { no: 6, name: "array", kind: "message", T: PlutusDataArray, oneof: "plutus_data" }
]);
var PlutusData = _PlutusData;
var _PlutusDataMap = class _PlutusDataMap extends Message {
  constructor(data) {
    super();
    /**
     * List of key-value pairs.
     *
     * @generated from field: repeated utxorpc.v1alpha.cardano.PlutusDataPair pairs = 1;
     */
    this.pairs = [];
    proto3.util.initPartial(data, this);
  }
  static fromBinary(bytes, options) {
    return new _PlutusDataMap().fromBinary(bytes, options);
  }
  static fromJson(jsonValue, options) {
    return new _PlutusDataMap().fromJson(jsonValue, options);
  }
  static fromJsonString(jsonString, options) {
    return new _PlutusDataMap().fromJsonString(jsonString, options);
  }
  static equals(a, b) {
    return proto3.util.equals(_PlutusDataMap, a, b);
  }
};
_PlutusDataMap.runtime = proto3;
_PlutusDataMap.typeName = "utxorpc.v1alpha.cardano.PlutusDataMap";
_PlutusDataMap.fields = proto3.util.newFieldList(() => [
  { no: 1, name: "pairs", kind: "message", T: PlutusDataPair, repeated: true }
]);
var PlutusDataMap = _PlutusDataMap;
var _PlutusDataArray = class _PlutusDataArray extends Message {
  constructor(data) {
    super();
    /**
     * List of Plutus data items.
     *
     * @generated from field: repeated utxorpc.v1alpha.cardano.PlutusData items = 1;
     */
    this.items = [];
    proto3.util.initPartial(data, this);
  }
  static fromBinary(bytes, options) {
    return new _PlutusDataArray().fromBinary(bytes, options);
  }
  static fromJson(jsonValue, options) {
    return new _PlutusDataArray().fromJson(jsonValue, options);
  }
  static fromJsonString(jsonString, options) {
    return new _PlutusDataArray().fromJsonString(jsonString, options);
  }
  static equals(a, b) {
    return proto3.util.equals(_PlutusDataArray, a, b);
  }
};
_PlutusDataArray.runtime = proto3;
_PlutusDataArray.typeName = "utxorpc.v1alpha.cardano.PlutusDataArray";
_PlutusDataArray.fields = proto3.util.newFieldList(() => [
  { no: 1, name: "items", kind: "message", T: PlutusData, repeated: true }
]);
var PlutusDataArray = _PlutusDataArray;
var _Script = class _Script extends Message {
  constructor(data) {
    super();
    /**
     * @generated from oneof utxorpc.v1alpha.cardano.Script.script
     */
    this.script = { case: void 0 };
    proto3.util.initPartial(data, this);
  }
  static fromBinary(bytes, options) {
    return new _Script().fromBinary(bytes, options);
  }
  static fromJson(jsonValue, options) {
    return new _Script().fromJson(jsonValue, options);
  }
  static fromJsonString(jsonString, options) {
    return new _Script().fromJsonString(jsonString, options);
  }
  static equals(a, b) {
    return proto3.util.equals(_Script, a, b);
  }
};
_Script.runtime = proto3;
_Script.typeName = "utxorpc.v1alpha.cardano.Script";
_Script.fields = proto3.util.newFieldList(() => [
  { no: 1, name: "native", kind: "message", T: NativeScript, oneof: "script" },
  { no: 2, name: "plutus_v1", kind: "scalar", T: 12, oneof: "script" },
  { no: 3, name: "plutus_v2", kind: "scalar", T: 12, oneof: "script" },
  { no: 4, name: "plutus_v3", kind: "scalar", T: 12, oneof: "script" }
]);
var Script = _Script;
var _Metadatum = class _Metadatum extends Message {
  constructor(data) {
    super();
    /**
     * @generated from oneof utxorpc.v1alpha.cardano.Metadatum.metadatum
     */
    this.metadatum = { case: void 0 };
    proto3.util.initPartial(data, this);
  }
  static fromBinary(bytes, options) {
    return new _Metadatum().fromBinary(bytes, options);
  }
  static fromJson(jsonValue, options) {
    return new _Metadatum().fromJson(jsonValue, options);
  }
  static fromJsonString(jsonString, options) {
    return new _Metadatum().fromJsonString(jsonString, options);
  }
  static equals(a, b) {
    return proto3.util.equals(_Metadatum, a, b);
  }
};
_Metadatum.runtime = proto3;
_Metadatum.typeName = "utxorpc.v1alpha.cardano.Metadatum";
_Metadatum.fields = proto3.util.newFieldList(() => [
  { no: 1, name: "int", kind: "scalar", T: 3, oneof: "metadatum" },
  { no: 2, name: "bytes", kind: "scalar", T: 12, oneof: "metadatum" },
  { no: 3, name: "text", kind: "scalar", T: 9, oneof: "metadatum" },
  { no: 4, name: "array", kind: "message", T: MetadatumArray, oneof: "metadatum" },
  { no: 5, name: "map", kind: "message", T: MetadatumMap, oneof: "metadatum" }
]);
var Metadatum = _Metadatum;
var _MetadatumArray = class _MetadatumArray extends Message {
  constructor(data) {
    super();
    /**
     * @generated from field: repeated utxorpc.v1alpha.cardano.Metadatum items = 1;
     */
    this.items = [];
    proto3.util.initPartial(data, this);
  }
  static fromBinary(bytes, options) {
    return new _MetadatumArray().fromBinary(bytes, options);
  }
  static fromJson(jsonValue, options) {
    return new _MetadatumArray().fromJson(jsonValue, options);
  }
  static fromJsonString(jsonString, options) {
    return new _MetadatumArray().fromJsonString(jsonString, options);
  }
  static equals(a, b) {
    return proto3.util.equals(_MetadatumArray, a, b);
  }
};
_MetadatumArray.runtime = proto3;
_MetadatumArray.typeName = "utxorpc.v1alpha.cardano.MetadatumArray";
_MetadatumArray.fields = proto3.util.newFieldList(() => [
  { no: 1, name: "items", kind: "message", T: Metadatum, repeated: true }
]);
var MetadatumArray = _MetadatumArray;
var _MetadatumMap = class _MetadatumMap extends Message {
  constructor(data) {
    super();
    /**
     * @generated from field: repeated utxorpc.v1alpha.cardano.MetadatumPair pairs = 1;
     */
    this.pairs = [];
    proto3.util.initPartial(data, this);
  }
  static fromBinary(bytes, options) {
    return new _MetadatumMap().fromBinary(bytes, options);
  }
  static fromJson(jsonValue, options) {
    return new _MetadatumMap().fromJson(jsonValue, options);
  }
  static fromJsonString(jsonString, options) {
    return new _MetadatumMap().fromJsonString(jsonString, options);
  }
  static equals(a, b) {
    return proto3.util.equals(_MetadatumMap, a, b);
  }
};
_MetadatumMap.runtime = proto3;
_MetadatumMap.typeName = "utxorpc.v1alpha.cardano.MetadatumMap";
_MetadatumMap.fields = proto3.util.newFieldList(() => [
  { no: 1, name: "pairs", kind: "message", T: MetadatumPair, repeated: true }
]);
var MetadatumMap = _MetadatumMap;
var _MetadatumPair = class _MetadatumPair extends Message {
  constructor(data) {
    super();
    proto3.util.initPartial(data, this);
  }
  static fromBinary(bytes, options) {
    return new _MetadatumPair().fromBinary(bytes, options);
  }
  static fromJson(jsonValue, options) {
    return new _MetadatumPair().fromJson(jsonValue, options);
  }
  static fromJsonString(jsonString, options) {
    return new _MetadatumPair().fromJsonString(jsonString, options);
  }
  static equals(a, b) {
    return proto3.util.equals(_MetadatumPair, a, b);
  }
};
_MetadatumPair.runtime = proto3;
_MetadatumPair.typeName = "utxorpc.v1alpha.cardano.MetadatumPair";
_MetadatumPair.fields = proto3.util.newFieldList(() => [
  { no: 1, name: "key", kind: "message", T: Metadatum },
  { no: 2, name: "value", kind: "message", T: Metadatum }
]);
var MetadatumPair = _MetadatumPair;
var _Metadata = class _Metadata extends Message {
  constructor(data) {
    super();
    /**
     * @generated from field: uint64 label = 1;
     */
    this.label = protoInt64.zero;
    proto3.util.initPartial(data, this);
  }
  static fromBinary(bytes, options) {
    return new _Metadata().fromBinary(bytes, options);
  }
  static fromJson(jsonValue, options) {
    return new _Metadata().fromJson(jsonValue, options);
  }
  static fromJsonString(jsonString, options) {
    return new _Metadata().fromJsonString(jsonString, options);
  }
  static equals(a, b) {
    return proto3.util.equals(_Metadata, a, b);
  }
};
_Metadata.runtime = proto3;
_Metadata.typeName = "utxorpc.v1alpha.cardano.Metadata";
_Metadata.fields = proto3.util.newFieldList(() => [
  {
    no: 1,
    name: "label",
    kind: "scalar",
    T: 4
    /* ScalarType.UINT64 */
  },
  { no: 2, name: "value", kind: "message", T: Metadatum }
]);
var Metadata = _Metadata;
var _StakeCredential = class _StakeCredential extends Message {
  constructor(data) {
    super();
    /**
     * @generated from oneof utxorpc.v1alpha.cardano.StakeCredential.stake_credential
     */
    this.stakeCredential = { case: void 0 };
    proto3.util.initPartial(data, this);
  }
  static fromBinary(bytes, options) {
    return new _StakeCredential().fromBinary(bytes, options);
  }
  static fromJson(jsonValue, options) {
    return new _StakeCredential().fromJson(jsonValue, options);
  }
  static fromJsonString(jsonString, options) {
    return new _StakeCredential().fromJsonString(jsonString, options);
  }
  static equals(a, b) {
    return proto3.util.equals(_StakeCredential, a, b);
  }
};
_StakeCredential.runtime = proto3;
_StakeCredential.typeName = "utxorpc.v1alpha.cardano.StakeCredential";
_StakeCredential.fields = proto3.util.newFieldList(() => [
  { no: 1, name: "addr_key_hash", kind: "scalar", T: 12, oneof: "stake_credential" },
  { no: 2, name: "script_hash", kind: "scalar", T: 12, oneof: "stake_credential" }
]);
var StakeCredential = _StakeCredential;
var _RationalNumber = class _RationalNumber extends Message {
  constructor(data) {
    super();
    /**
     * @generated from field: int32 numerator = 1;
     */
    this.numerator = 0;
    /**
     * @generated from field: uint32 denominator = 2;
     */
    this.denominator = 0;
    proto3.util.initPartial(data, this);
  }
  static fromBinary(bytes, options) {
    return new _RationalNumber().fromBinary(bytes, options);
  }
  static fromJson(jsonValue, options) {
    return new _RationalNumber().fromJson(jsonValue, options);
  }
  static fromJsonString(jsonString, options) {
    return new _RationalNumber().fromJsonString(jsonString, options);
  }
  static equals(a, b) {
    return proto3.util.equals(_RationalNumber, a, b);
  }
};
_RationalNumber.runtime = proto3;
_RationalNumber.typeName = "utxorpc.v1alpha.cardano.RationalNumber";
_RationalNumber.fields = proto3.util.newFieldList(() => [
  {
    no: 1,
    name: "numerator",
    kind: "scalar",
    T: 5
    /* ScalarType.INT32 */
  },
  {
    no: 2,
    name: "denominator",
    kind: "scalar",
    T: 13
    /* ScalarType.UINT32 */
  }
]);
var RationalNumber = _RationalNumber;
var _Relay = class _Relay extends Message {
  constructor(data) {
    super();
    /**
     * @generated from field: bytes ip_v4 = 1;
     */
    this.ipV4 = new Uint8Array(0);
    /**
     * @generated from field: bytes ip_v6 = 2;
     */
    this.ipV6 = new Uint8Array(0);
    /**
     * @generated from field: string dns_name = 3;
     */
    this.dnsName = "";
    /**
     * @generated from field: uint32 port = 4;
     */
    this.port = 0;
    proto3.util.initPartial(data, this);
  }
  static fromBinary(bytes, options) {
    return new _Relay().fromBinary(bytes, options);
  }
  static fromJson(jsonValue, options) {
    return new _Relay().fromJson(jsonValue, options);
  }
  static fromJsonString(jsonString, options) {
    return new _Relay().fromJsonString(jsonString, options);
  }
  static equals(a, b) {
    return proto3.util.equals(_Relay, a, b);
  }
};
_Relay.runtime = proto3;
_Relay.typeName = "utxorpc.v1alpha.cardano.Relay";
_Relay.fields = proto3.util.newFieldList(() => [
  {
    no: 1,
    name: "ip_v4",
    kind: "scalar",
    T: 12
    /* ScalarType.BYTES */
  },
  {
    no: 2,
    name: "ip_v6",
    kind: "scalar",
    T: 12
    /* ScalarType.BYTES */
  },
  {
    no: 3,
    name: "dns_name",
    kind: "scalar",
    T: 9
    /* ScalarType.STRING */
  },
  {
    no: 4,
    name: "port",
    kind: "scalar",
    T: 13
    /* ScalarType.UINT32 */
  }
]);
var Relay = _Relay;
var _PoolMetadata = class _PoolMetadata extends Message {
  constructor(data) {
    super();
    /**
     * @generated from field: string url = 1;
     */
    this.url = "";
    /**
     * @generated from field: bytes hash = 2;
     */
    this.hash = new Uint8Array(0);
    proto3.util.initPartial(data, this);
  }
  static fromBinary(bytes, options) {
    return new _PoolMetadata().fromBinary(bytes, options);
  }
  static fromJson(jsonValue, options) {
    return new _PoolMetadata().fromJson(jsonValue, options);
  }
  static fromJsonString(jsonString, options) {
    return new _PoolMetadata().fromJsonString(jsonString, options);
  }
  static equals(a, b) {
    return proto3.util.equals(_PoolMetadata, a, b);
  }
};
_PoolMetadata.runtime = proto3;
_PoolMetadata.typeName = "utxorpc.v1alpha.cardano.PoolMetadata";
_PoolMetadata.fields = proto3.util.newFieldList(() => [
  {
    no: 1,
    name: "url",
    kind: "scalar",
    T: 9
    /* ScalarType.STRING */
  },
  {
    no: 2,
    name: "hash",
    kind: "scalar",
    T: 12
    /* ScalarType.BYTES */
  }
]);
var PoolMetadata = _PoolMetadata;
var _Certificate = class _Certificate extends Message {
  constructor(data) {
    super();
    /**
     * @generated from oneof utxorpc.v1alpha.cardano.Certificate.certificate
     */
    this.certificate = { case: void 0 };
    proto3.util.initPartial(data, this);
  }
  static fromBinary(bytes, options) {
    return new _Certificate().fromBinary(bytes, options);
  }
  static fromJson(jsonValue, options) {
    return new _Certificate().fromJson(jsonValue, options);
  }
  static fromJsonString(jsonString, options) {
    return new _Certificate().fromJsonString(jsonString, options);
  }
  static equals(a, b) {
    return proto3.util.equals(_Certificate, a, b);
  }
};
_Certificate.runtime = proto3;
_Certificate.typeName = "utxorpc.v1alpha.cardano.Certificate";
_Certificate.fields = proto3.util.newFieldList(() => [
  { no: 1, name: "stake_registration", kind: "message", T: StakeCredential, oneof: "certificate" },
  { no: 2, name: "stake_deregistration", kind: "message", T: StakeCredential, oneof: "certificate" },
  { no: 3, name: "stake_delegation", kind: "message", T: StakeDelegationCert, oneof: "certificate" },
  { no: 4, name: "pool_registration", kind: "message", T: PoolRegistrationCert, oneof: "certificate" },
  { no: 5, name: "pool_retirement", kind: "message", T: PoolRetirementCert, oneof: "certificate" },
  { no: 6, name: "genesis_key_delegation", kind: "message", T: GenesisKeyDelegationCert, oneof: "certificate" },
  { no: 7, name: "mir_cert", kind: "message", T: MirCert, oneof: "certificate" },
  { no: 8, name: "reg_cert", kind: "message", T: RegCert, oneof: "certificate" },
  { no: 9, name: "unreg_cert", kind: "message", T: UnRegCert, oneof: "certificate" },
  { no: 10, name: "vote_deleg_cert", kind: "message", T: VoteDelegCert, oneof: "certificate" },
  { no: 11, name: "stake_vote_deleg_cert", kind: "message", T: StakeVoteDelegCert, oneof: "certificate" },
  { no: 12, name: "stake_reg_deleg_cert", kind: "message", T: StakeRegDelegCert, oneof: "certificate" },
  { no: 13, name: "vote_reg_deleg_cert", kind: "message", T: VoteRegDelegCert, oneof: "certificate" },
  { no: 14, name: "stake_vote_reg_deleg_cert", kind: "message", T: StakeVoteRegDelegCert, oneof: "certificate" },
  { no: 15, name: "auth_committee_hot_cert", kind: "message", T: AuthCommitteeHotCert, oneof: "certificate" },
  { no: 16, name: "resign_committee_cold_cert", kind: "message", T: ResignCommitteeColdCert, oneof: "certificate" },
  { no: 17, name: "reg_drep_cert", kind: "message", T: RegDRepCert, oneof: "certificate" },
  { no: 18, name: "unreg_drep_cert", kind: "message", T: UnRegDRepCert, oneof: "certificate" },
  { no: 19, name: "update_drep_cert", kind: "message", T: UpdateDRepCert, oneof: "certificate" },
  { no: 100, name: "redeemer", kind: "message", T: Redeemer }
]);
var Certificate = _Certificate;
var _StakeDelegationCert = class _StakeDelegationCert extends Message {
  constructor(data) {
    super();
    /**
     * Pool key hash.
     *
     * @generated from field: bytes pool_keyhash = 2;
     */
    this.poolKeyhash = new Uint8Array(0);
    proto3.util.initPartial(data, this);
  }
  static fromBinary(bytes, options) {
    return new _StakeDelegationCert().fromBinary(bytes, options);
  }
  static fromJson(jsonValue, options) {
    return new _StakeDelegationCert().fromJson(jsonValue, options);
  }
  static fromJsonString(jsonString, options) {
    return new _StakeDelegationCert().fromJsonString(jsonString, options);
  }
  static equals(a, b) {
    return proto3.util.equals(_StakeDelegationCert, a, b);
  }
};
_StakeDelegationCert.runtime = proto3;
_StakeDelegationCert.typeName = "utxorpc.v1alpha.cardano.StakeDelegationCert";
_StakeDelegationCert.fields = proto3.util.newFieldList(() => [
  { no: 1, name: "stake_credential", kind: "message", T: StakeCredential },
  {
    no: 2,
    name: "pool_keyhash",
    kind: "scalar",
    T: 12
    /* ScalarType.BYTES */
  }
]);
var StakeDelegationCert = _StakeDelegationCert;
var _PoolRegistrationCert = class _PoolRegistrationCert extends Message {
  constructor(data) {
    super();
    /**
     * Operator key hash.
     *
     * @generated from field: bytes operator = 1;
     */
    this.operator = new Uint8Array(0);
    /**
     * VRF key hash.
     *
     * @generated from field: bytes vrf_keyhash = 2;
     */
    this.vrfKeyhash = new Uint8Array(0);
    /**
     * Pledge amount.
     *
     * @generated from field: uint64 pledge = 3;
     */
    this.pledge = protoInt64.zero;
    /**
     * Pool cost.
     *
     * @generated from field: uint64 cost = 4;
     */
    this.cost = protoInt64.zero;
    /**
     * Reward account.
     *
     * @generated from field: bytes reward_account = 6;
     */
    this.rewardAccount = new Uint8Array(0);
    /**
     * List of pool owner key hashes.
     *
     * @generated from field: repeated bytes pool_owners = 7;
     */
    this.poolOwners = [];
    /**
     * List of relays.
     *
     * @generated from field: repeated utxorpc.v1alpha.cardano.Relay relays = 8;
     */
    this.relays = [];
    proto3.util.initPartial(data, this);
  }
  static fromBinary(bytes, options) {
    return new _PoolRegistrationCert().fromBinary(bytes, options);
  }
  static fromJson(jsonValue, options) {
    return new _PoolRegistrationCert().fromJson(jsonValue, options);
  }
  static fromJsonString(jsonString, options) {
    return new _PoolRegistrationCert().fromJsonString(jsonString, options);
  }
  static equals(a, b) {
    return proto3.util.equals(_PoolRegistrationCert, a, b);
  }
};
_PoolRegistrationCert.runtime = proto3;
_PoolRegistrationCert.typeName = "utxorpc.v1alpha.cardano.PoolRegistrationCert";
_PoolRegistrationCert.fields = proto3.util.newFieldList(() => [
  {
    no: 1,
    name: "operator",
    kind: "scalar",
    T: 12
    /* ScalarType.BYTES */
  },
  {
    no: 2,
    name: "vrf_keyhash",
    kind: "scalar",
    T: 12
    /* ScalarType.BYTES */
  },
  {
    no: 3,
    name: "pledge",
    kind: "scalar",
    T: 4
    /* ScalarType.UINT64 */
  },
  {
    no: 4,
    name: "cost",
    kind: "scalar",
    T: 4
    /* ScalarType.UINT64 */
  },
  { no: 5, name: "margin", kind: "message", T: RationalNumber },
  {
    no: 6,
    name: "reward_account",
    kind: "scalar",
    T: 12
    /* ScalarType.BYTES */
  },
  { no: 7, name: "pool_owners", kind: "scalar", T: 12, repeated: true },
  { no: 8, name: "relays", kind: "message", T: Relay, repeated: true },
  { no: 9, name: "pool_metadata", kind: "message", T: PoolMetadata }
]);
var PoolRegistrationCert = _PoolRegistrationCert;
var _PoolRetirementCert = class _PoolRetirementCert extends Message {
  constructor(data) {
    super();
    /**
     * Pool key hash.
     *
     * @generated from field: bytes pool_keyhash = 1;
     */
    this.poolKeyhash = new Uint8Array(0);
    /**
     * Retirement epoch.
     *
     * @generated from field: uint64 epoch = 2;
     */
    this.epoch = protoInt64.zero;
    proto3.util.initPartial(data, this);
  }
  static fromBinary(bytes, options) {
    return new _PoolRetirementCert().fromBinary(bytes, options);
  }
  static fromJson(jsonValue, options) {
    return new _PoolRetirementCert().fromJson(jsonValue, options);
  }
  static fromJsonString(jsonString, options) {
    return new _PoolRetirementCert().fromJsonString(jsonString, options);
  }
  static equals(a, b) {
    return proto3.util.equals(_PoolRetirementCert, a, b);
  }
};
_PoolRetirementCert.runtime = proto3;
_PoolRetirementCert.typeName = "utxorpc.v1alpha.cardano.PoolRetirementCert";
_PoolRetirementCert.fields = proto3.util.newFieldList(() => [
  {
    no: 1,
    name: "pool_keyhash",
    kind: "scalar",
    T: 12
    /* ScalarType.BYTES */
  },
  {
    no: 2,
    name: "epoch",
    kind: "scalar",
    T: 4
    /* ScalarType.UINT64 */
  }
]);
var PoolRetirementCert = _PoolRetirementCert;
var _GenesisKeyDelegationCert = class _GenesisKeyDelegationCert extends Message {
  constructor(data) {
    super();
    /**
     * Genesis hash.
     *
     * @generated from field: bytes genesis_hash = 1;
     */
    this.genesisHash = new Uint8Array(0);
    /**
     * Genesis delegate hash.
     *
     * @generated from field: bytes genesis_delegate_hash = 2;
     */
    this.genesisDelegateHash = new Uint8Array(0);
    /**
     * VRF key hash.
     *
     * @generated from field: bytes vrf_keyhash = 3;
     */
    this.vrfKeyhash = new Uint8Array(0);
    proto3.util.initPartial(data, this);
  }
  static fromBinary(bytes, options) {
    return new _GenesisKeyDelegationCert().fromBinary(bytes, options);
  }
  static fromJson(jsonValue, options) {
    return new _GenesisKeyDelegationCert().fromJson(jsonValue, options);
  }
  static fromJsonString(jsonString, options) {
    return new _GenesisKeyDelegationCert().fromJsonString(jsonString, options);
  }
  static equals(a, b) {
    return proto3.util.equals(_GenesisKeyDelegationCert, a, b);
  }
};
_GenesisKeyDelegationCert.runtime = proto3;
_GenesisKeyDelegationCert.typeName = "utxorpc.v1alpha.cardano.GenesisKeyDelegationCert";
_GenesisKeyDelegationCert.fields = proto3.util.newFieldList(() => [
  {
    no: 1,
    name: "genesis_hash",
    kind: "scalar",
    T: 12
    /* ScalarType.BYTES */
  },
  {
    no: 2,
    name: "genesis_delegate_hash",
    kind: "scalar",
    T: 12
    /* ScalarType.BYTES */
  },
  {
    no: 3,
    name: "vrf_keyhash",
    kind: "scalar",
    T: 12
    /* ScalarType.BYTES */
  }
]);
var GenesisKeyDelegationCert = _GenesisKeyDelegationCert;
var _MirTarget = class _MirTarget extends Message {
  constructor(data) {
    super();
    /**
     * @generated from field: int64 delta_coin = 2;
     */
    this.deltaCoin = protoInt64.zero;
    proto3.util.initPartial(data, this);
  }
  static fromBinary(bytes, options) {
    return new _MirTarget().fromBinary(bytes, options);
  }
  static fromJson(jsonValue, options) {
    return new _MirTarget().fromJson(jsonValue, options);
  }
  static fromJsonString(jsonString, options) {
    return new _MirTarget().fromJsonString(jsonString, options);
  }
  static equals(a, b) {
    return proto3.util.equals(_MirTarget, a, b);
  }
};
_MirTarget.runtime = proto3;
_MirTarget.typeName = "utxorpc.v1alpha.cardano.MirTarget";
_MirTarget.fields = proto3.util.newFieldList(() => [
  { no: 1, name: "stake_credential", kind: "message", T: StakeCredential },
  {
    no: 2,
    name: "delta_coin",
    kind: "scalar",
    T: 3
    /* ScalarType.INT64 */
  }
]);
var MirTarget = _MirTarget;
var _MirCert = class _MirCert extends Message {
  constructor(data) {
    super();
    /**
     * @generated from field: utxorpc.v1alpha.cardano.MirSource from = 1;
     */
    this.from = 0 /* UNSPECIFIED */;
    /**
     * @generated from field: repeated utxorpc.v1alpha.cardano.MirTarget to = 2;
     */
    this.to = [];
    /**
     * @generated from field: uint64 other_pot = 3;
     */
    this.otherPot = protoInt64.zero;
    proto3.util.initPartial(data, this);
  }
  static fromBinary(bytes, options) {
    return new _MirCert().fromBinary(bytes, options);
  }
  static fromJson(jsonValue, options) {
    return new _MirCert().fromJson(jsonValue, options);
  }
  static fromJsonString(jsonString, options) {
    return new _MirCert().fromJsonString(jsonString, options);
  }
  static equals(a, b) {
    return proto3.util.equals(_MirCert, a, b);
  }
};
_MirCert.runtime = proto3;
_MirCert.typeName = "utxorpc.v1alpha.cardano.MirCert";
_MirCert.fields = proto3.util.newFieldList(() => [
  { no: 1, name: "from", kind: "enum", T: proto3.getEnumType(MirSource) },
  { no: 2, name: "to", kind: "message", T: MirTarget, repeated: true },
  {
    no: 3,
    name: "other_pot",
    kind: "scalar",
    T: 4
    /* ScalarType.UINT64 */
  }
]);
var MirCert = _MirCert;
var _RegCert = class _RegCert extends Message {
  constructor(data) {
    super();
    /**
     * @generated from field: uint64 coin = 2;
     */
    this.coin = protoInt64.zero;
    proto3.util.initPartial(data, this);
  }
  static fromBinary(bytes, options) {
    return new _RegCert().fromBinary(bytes, options);
  }
  static fromJson(jsonValue, options) {
    return new _RegCert().fromJson(jsonValue, options);
  }
  static fromJsonString(jsonString, options) {
    return new _RegCert().fromJsonString(jsonString, options);
  }
  static equals(a, b) {
    return proto3.util.equals(_RegCert, a, b);
  }
};
_RegCert.runtime = proto3;
_RegCert.typeName = "utxorpc.v1alpha.cardano.RegCert";
_RegCert.fields = proto3.util.newFieldList(() => [
  { no: 1, name: "stake_credential", kind: "message", T: StakeCredential },
  {
    no: 2,
    name: "coin",
    kind: "scalar",
    T: 4
    /* ScalarType.UINT64 */
  }
]);
var RegCert = _RegCert;
var _UnRegCert = class _UnRegCert extends Message {
  constructor(data) {
    super();
    /**
     * @generated from field: uint64 coin = 2;
     */
    this.coin = protoInt64.zero;
    proto3.util.initPartial(data, this);
  }
  static fromBinary(bytes, options) {
    return new _UnRegCert().fromBinary(bytes, options);
  }
  static fromJson(jsonValue, options) {
    return new _UnRegCert().fromJson(jsonValue, options);
  }
  static fromJsonString(jsonString, options) {
    return new _UnRegCert().fromJsonString(jsonString, options);
  }
  static equals(a, b) {
    return proto3.util.equals(_UnRegCert, a, b);
  }
};
_UnRegCert.runtime = proto3;
_UnRegCert.typeName = "utxorpc.v1alpha.cardano.UnRegCert";
_UnRegCert.fields = proto3.util.newFieldList(() => [
  { no: 1, name: "stake_credential", kind: "message", T: StakeCredential },
  {
    no: 2,
    name: "coin",
    kind: "scalar",
    T: 4
    /* ScalarType.UINT64 */
  }
]);
var UnRegCert = _UnRegCert;
var _DRep = class _DRep extends Message {
  constructor(data) {
    super();
    /**
     * @generated from oneof utxorpc.v1alpha.cardano.DRep.drep
     */
    this.drep = { case: void 0 };
    proto3.util.initPartial(data, this);
  }
  static fromBinary(bytes, options) {
    return new _DRep().fromBinary(bytes, options);
  }
  static fromJson(jsonValue, options) {
    return new _DRep().fromJson(jsonValue, options);
  }
  static fromJsonString(jsonString, options) {
    return new _DRep().fromJsonString(jsonString, options);
  }
  static equals(a, b) {
    return proto3.util.equals(_DRep, a, b);
  }
};
_DRep.runtime = proto3;
_DRep.typeName = "utxorpc.v1alpha.cardano.DRep";
_DRep.fields = proto3.util.newFieldList(() => [
  { no: 1, name: "addr_key_hash", kind: "scalar", T: 12, oneof: "drep" },
  { no: 2, name: "script_hash", kind: "scalar", T: 12, oneof: "drep" },
  { no: 3, name: "abstain", kind: "scalar", T: 8, oneof: "drep" },
  { no: 4, name: "no_confidence", kind: "scalar", T: 8, oneof: "drep" }
]);
var DRep = _DRep;
var _VoteDelegCert = class _VoteDelegCert extends Message {
  constructor(data) {
    super();
    proto3.util.initPartial(data, this);
  }
  static fromBinary(bytes, options) {
    return new _VoteDelegCert().fromBinary(bytes, options);
  }
  static fromJson(jsonValue, options) {
    return new _VoteDelegCert().fromJson(jsonValue, options);
  }
  static fromJsonString(jsonString, options) {
    return new _VoteDelegCert().fromJsonString(jsonString, options);
  }
  static equals(a, b) {
    return proto3.util.equals(_VoteDelegCert, a, b);
  }
};
_VoteDelegCert.runtime = proto3;
_VoteDelegCert.typeName = "utxorpc.v1alpha.cardano.VoteDelegCert";
_VoteDelegCert.fields = proto3.util.newFieldList(() => [
  { no: 1, name: "stake_credential", kind: "message", T: StakeCredential },
  { no: 2, name: "drep", kind: "message", T: DRep }
]);
var VoteDelegCert = _VoteDelegCert;
var _StakeVoteDelegCert = class _StakeVoteDelegCert extends Message {
  constructor(data) {
    super();
    /**
     * @generated from field: bytes pool_keyhash = 2;
     */
    this.poolKeyhash = new Uint8Array(0);
    proto3.util.initPartial(data, this);
  }
  static fromBinary(bytes, options) {
    return new _StakeVoteDelegCert().fromBinary(bytes, options);
  }
  static fromJson(jsonValue, options) {
    return new _StakeVoteDelegCert().fromJson(jsonValue, options);
  }
  static fromJsonString(jsonString, options) {
    return new _StakeVoteDelegCert().fromJsonString(jsonString, options);
  }
  static equals(a, b) {
    return proto3.util.equals(_StakeVoteDelegCert, a, b);
  }
};
_StakeVoteDelegCert.runtime = proto3;
_StakeVoteDelegCert.typeName = "utxorpc.v1alpha.cardano.StakeVoteDelegCert";
_StakeVoteDelegCert.fields = proto3.util.newFieldList(() => [
  { no: 1, name: "stake_credential", kind: "message", T: StakeCredential },
  {
    no: 2,
    name: "pool_keyhash",
    kind: "scalar",
    T: 12
    /* ScalarType.BYTES */
  },
  { no: 3, name: "drep", kind: "message", T: DRep }
]);
var StakeVoteDelegCert = _StakeVoteDelegCert;
var _StakeRegDelegCert = class _StakeRegDelegCert extends Message {
  constructor(data) {
    super();
    /**
     * @generated from field: bytes pool_keyhash = 2;
     */
    this.poolKeyhash = new Uint8Array(0);
    /**
     * @generated from field: uint64 coin = 3;
     */
    this.coin = protoInt64.zero;
    proto3.util.initPartial(data, this);
  }
  static fromBinary(bytes, options) {
    return new _StakeRegDelegCert().fromBinary(bytes, options);
  }
  static fromJson(jsonValue, options) {
    return new _StakeRegDelegCert().fromJson(jsonValue, options);
  }
  static fromJsonString(jsonString, options) {
    return new _StakeRegDelegCert().fromJsonString(jsonString, options);
  }
  static equals(a, b) {
    return proto3.util.equals(_StakeRegDelegCert, a, b);
  }
};
_StakeRegDelegCert.runtime = proto3;
_StakeRegDelegCert.typeName = "utxorpc.v1alpha.cardano.StakeRegDelegCert";
_StakeRegDelegCert.fields = proto3.util.newFieldList(() => [
  { no: 1, name: "stake_credential", kind: "message", T: StakeCredential },
  {
    no: 2,
    name: "pool_keyhash",
    kind: "scalar",
    T: 12
    /* ScalarType.BYTES */
  },
  {
    no: 3,
    name: "coin",
    kind: "scalar",
    T: 4
    /* ScalarType.UINT64 */
  }
]);
var StakeRegDelegCert = _StakeRegDelegCert;
var _VoteRegDelegCert = class _VoteRegDelegCert extends Message {
  constructor(data) {
    super();
    /**
     * @generated from field: uint64 coin = 3;
     */
    this.coin = protoInt64.zero;
    proto3.util.initPartial(data, this);
  }
  static fromBinary(bytes, options) {
    return new _VoteRegDelegCert().fromBinary(bytes, options);
  }
  static fromJson(jsonValue, options) {
    return new _VoteRegDelegCert().fromJson(jsonValue, options);
  }
  static fromJsonString(jsonString, options) {
    return new _VoteRegDelegCert().fromJsonString(jsonString, options);
  }
  static equals(a, b) {
    return proto3.util.equals(_VoteRegDelegCert, a, b);
  }
};
_VoteRegDelegCert.runtime = proto3;
_VoteRegDelegCert.typeName = "utxorpc.v1alpha.cardano.VoteRegDelegCert";
_VoteRegDelegCert.fields = proto3.util.newFieldList(() => [
  { no: 1, name: "stake_credential", kind: "message", T: StakeCredential },
  { no: 2, name: "drep", kind: "message", T: DRep },
  {
    no: 3,
    name: "coin",
    kind: "scalar",
    T: 4
    /* ScalarType.UINT64 */
  }
]);
var VoteRegDelegCert = _VoteRegDelegCert;
var _StakeVoteRegDelegCert = class _StakeVoteRegDelegCert extends Message {
  constructor(data) {
    super();
    /**
     * @generated from field: bytes pool_keyhash = 2;
     */
    this.poolKeyhash = new Uint8Array(0);
    /**
     * @generated from field: uint64 coin = 4;
     */
    this.coin = protoInt64.zero;
    proto3.util.initPartial(data, this);
  }
  static fromBinary(bytes, options) {
    return new _StakeVoteRegDelegCert().fromBinary(bytes, options);
  }
  static fromJson(jsonValue, options) {
    return new _StakeVoteRegDelegCert().fromJson(jsonValue, options);
  }
  static fromJsonString(jsonString, options) {
    return new _StakeVoteRegDelegCert().fromJsonString(jsonString, options);
  }
  static equals(a, b) {
    return proto3.util.equals(_StakeVoteRegDelegCert, a, b);
  }
};
_StakeVoteRegDelegCert.runtime = proto3;
_StakeVoteRegDelegCert.typeName = "utxorpc.v1alpha.cardano.StakeVoteRegDelegCert";
_StakeVoteRegDelegCert.fields = proto3.util.newFieldList(() => [
  { no: 1, name: "stake_credential", kind: "message", T: StakeCredential },
  {
    no: 2,
    name: "pool_keyhash",
    kind: "scalar",
    T: 12
    /* ScalarType.BYTES */
  },
  { no: 3, name: "drep", kind: "message", T: DRep },
  {
    no: 4,
    name: "coin",
    kind: "scalar",
    T: 4
    /* ScalarType.UINT64 */
  }
]);
var StakeVoteRegDelegCert = _StakeVoteRegDelegCert;
var _AuthCommitteeHotCert = class _AuthCommitteeHotCert extends Message {
  constructor(data) {
    super();
    proto3.util.initPartial(data, this);
  }
  static fromBinary(bytes, options) {
    return new _AuthCommitteeHotCert().fromBinary(bytes, options);
  }
  static fromJson(jsonValue, options) {
    return new _AuthCommitteeHotCert().fromJson(jsonValue, options);
  }
  static fromJsonString(jsonString, options) {
    return new _AuthCommitteeHotCert().fromJsonString(jsonString, options);
  }
  static equals(a, b) {
    return proto3.util.equals(_AuthCommitteeHotCert, a, b);
  }
};
_AuthCommitteeHotCert.runtime = proto3;
_AuthCommitteeHotCert.typeName = "utxorpc.v1alpha.cardano.AuthCommitteeHotCert";
_AuthCommitteeHotCert.fields = proto3.util.newFieldList(() => [
  { no: 1, name: "committee_cold_credential", kind: "message", T: StakeCredential },
  { no: 2, name: "committee_hot_credential", kind: "message", T: StakeCredential }
]);
var AuthCommitteeHotCert = _AuthCommitteeHotCert;
var _Anchor = class _Anchor extends Message {
  constructor(data) {
    super();
    /**
     * @generated from field: string url = 1;
     */
    this.url = "";
    /**
     * @generated from field: bytes content_hash = 2;
     */
    this.contentHash = new Uint8Array(0);
    proto3.util.initPartial(data, this);
  }
  static fromBinary(bytes, options) {
    return new _Anchor().fromBinary(bytes, options);
  }
  static fromJson(jsonValue, options) {
    return new _Anchor().fromJson(jsonValue, options);
  }
  static fromJsonString(jsonString, options) {
    return new _Anchor().fromJsonString(jsonString, options);
  }
  static equals(a, b) {
    return proto3.util.equals(_Anchor, a, b);
  }
};
_Anchor.runtime = proto3;
_Anchor.typeName = "utxorpc.v1alpha.cardano.Anchor";
_Anchor.fields = proto3.util.newFieldList(() => [
  {
    no: 1,
    name: "url",
    kind: "scalar",
    T: 9
    /* ScalarType.STRING */
  },
  {
    no: 2,
    name: "content_hash",
    kind: "scalar",
    T: 12
    /* ScalarType.BYTES */
  }
]);
var Anchor = _Anchor;
var _ResignCommitteeColdCert = class _ResignCommitteeColdCert extends Message {
  constructor(data) {
    super();
    proto3.util.initPartial(data, this);
  }
  static fromBinary(bytes, options) {
    return new _ResignCommitteeColdCert().fromBinary(bytes, options);
  }
  static fromJson(jsonValue, options) {
    return new _ResignCommitteeColdCert().fromJson(jsonValue, options);
  }
  static fromJsonString(jsonString, options) {
    return new _ResignCommitteeColdCert().fromJsonString(jsonString, options);
  }
  static equals(a, b) {
    return proto3.util.equals(_ResignCommitteeColdCert, a, b);
  }
};
_ResignCommitteeColdCert.runtime = proto3;
_ResignCommitteeColdCert.typeName = "utxorpc.v1alpha.cardano.ResignCommitteeColdCert";
_ResignCommitteeColdCert.fields = proto3.util.newFieldList(() => [
  { no: 1, name: "committee_cold_credential", kind: "message", T: StakeCredential },
  { no: 2, name: "anchor", kind: "message", T: Anchor }
]);
var ResignCommitteeColdCert = _ResignCommitteeColdCert;
var _RegDRepCert = class _RegDRepCert extends Message {
  constructor(data) {
    super();
    /**
     * @generated from field: uint64 coin = 2;
     */
    this.coin = protoInt64.zero;
    proto3.util.initPartial(data, this);
  }
  static fromBinary(bytes, options) {
    return new _RegDRepCert().fromBinary(bytes, options);
  }
  static fromJson(jsonValue, options) {
    return new _RegDRepCert().fromJson(jsonValue, options);
  }
  static fromJsonString(jsonString, options) {
    return new _RegDRepCert().fromJsonString(jsonString, options);
  }
  static equals(a, b) {
    return proto3.util.equals(_RegDRepCert, a, b);
  }
};
_RegDRepCert.runtime = proto3;
_RegDRepCert.typeName = "utxorpc.v1alpha.cardano.RegDRepCert";
_RegDRepCert.fields = proto3.util.newFieldList(() => [
  { no: 1, name: "drep_credential", kind: "message", T: StakeCredential },
  {
    no: 2,
    name: "coin",
    kind: "scalar",
    T: 4
    /* ScalarType.UINT64 */
  },
  { no: 3, name: "anchor", kind: "message", T: Anchor }
]);
var RegDRepCert = _RegDRepCert;
var _UnRegDRepCert = class _UnRegDRepCert extends Message {
  constructor(data) {
    super();
    /**
     * @generated from field: uint64 coin = 2;
     */
    this.coin = protoInt64.zero;
    proto3.util.initPartial(data, this);
  }
  static fromBinary(bytes, options) {
    return new _UnRegDRepCert().fromBinary(bytes, options);
  }
  static fromJson(jsonValue, options) {
    return new _UnRegDRepCert().fromJson(jsonValue, options);
  }
  static fromJsonString(jsonString, options) {
    return new _UnRegDRepCert().fromJsonString(jsonString, options);
  }
  static equals(a, b) {
    return proto3.util.equals(_UnRegDRepCert, a, b);
  }
};
_UnRegDRepCert.runtime = proto3;
_UnRegDRepCert.typeName = "utxorpc.v1alpha.cardano.UnRegDRepCert";
_UnRegDRepCert.fields = proto3.util.newFieldList(() => [
  { no: 1, name: "drep_credential", kind: "message", T: StakeCredential },
  {
    no: 2,
    name: "coin",
    kind: "scalar",
    T: 4
    /* ScalarType.UINT64 */
  }
]);
var UnRegDRepCert = _UnRegDRepCert;
var _UpdateDRepCert = class _UpdateDRepCert extends Message {
  constructor(data) {
    super();
    proto3.util.initPartial(data, this);
  }
  static fromBinary(bytes, options) {
    return new _UpdateDRepCert().fromBinary(bytes, options);
  }
  static fromJson(jsonValue, options) {
    return new _UpdateDRepCert().fromJson(jsonValue, options);
  }
  static fromJsonString(jsonString, options) {
    return new _UpdateDRepCert().fromJsonString(jsonString, options);
  }
  static equals(a, b) {
    return proto3.util.equals(_UpdateDRepCert, a, b);
  }
};
_UpdateDRepCert.runtime = proto3;
_UpdateDRepCert.typeName = "utxorpc.v1alpha.cardano.UpdateDRepCert";
_UpdateDRepCert.fields = proto3.util.newFieldList(() => [
  { no: 1, name: "drep_credential", kind: "message", T: StakeCredential },
  { no: 2, name: "anchor", kind: "message", T: Anchor }
]);
var UpdateDRepCert = _UpdateDRepCert;
var _AddressPattern = class _AddressPattern extends Message {
  constructor(data) {
    super();
    /**
     * The address should match this exact address value.
     *
     * @generated from field: bytes exact_address = 1;
     */
    this.exactAddress = new Uint8Array(0);
    /**
     * The payment part of the address should match this value.
     *
     * @generated from field: bytes payment_part = 2;
     */
    this.paymentPart = new Uint8Array(0);
    /**
     * The delegation part of the address should match this value.
     *
     * @generated from field: bytes delegation_part = 3;
     */
    this.delegationPart = new Uint8Array(0);
    proto3.util.initPartial(data, this);
  }
  static fromBinary(bytes, options) {
    return new _AddressPattern().fromBinary(bytes, options);
  }
  static fromJson(jsonValue, options) {
    return new _AddressPattern().fromJson(jsonValue, options);
  }
  static fromJsonString(jsonString, options) {
    return new _AddressPattern().fromJsonString(jsonString, options);
  }
  static equals(a, b) {
    return proto3.util.equals(_AddressPattern, a, b);
  }
};
_AddressPattern.runtime = proto3;
_AddressPattern.typeName = "utxorpc.v1alpha.cardano.AddressPattern";
_AddressPattern.fields = proto3.util.newFieldList(() => [
  {
    no: 1,
    name: "exact_address",
    kind: "scalar",
    T: 12
    /* ScalarType.BYTES */
  },
  {
    no: 2,
    name: "payment_part",
    kind: "scalar",
    T: 12
    /* ScalarType.BYTES */
  },
  {
    no: 3,
    name: "delegation_part",
    kind: "scalar",
    T: 12
    /* ScalarType.BYTES */
  }
]);
var AddressPattern = _AddressPattern;
var _AssetPattern = class _AssetPattern extends Message {
  constructor(data) {
    super();
    /**
     * The asset should belong to this policy id
     *
     * @generated from field: bytes policy_id = 1;
     */
    this.policyId = new Uint8Array(0);
    /**
     * The asset should present this name
     *
     * @generated from field: bytes asset_name = 2;
     */
    this.assetName = new Uint8Array(0);
    proto3.util.initPartial(data, this);
  }
  static fromBinary(bytes, options) {
    return new _AssetPattern().fromBinary(bytes, options);
  }
  static fromJson(jsonValue, options) {
    return new _AssetPattern().fromJson(jsonValue, options);
  }
  static fromJsonString(jsonString, options) {
    return new _AssetPattern().fromJsonString(jsonString, options);
  }
  static equals(a, b) {
    return proto3.util.equals(_AssetPattern, a, b);
  }
};
_AssetPattern.runtime = proto3;
_AssetPattern.typeName = "utxorpc.v1alpha.cardano.AssetPattern";
_AssetPattern.fields = proto3.util.newFieldList(() => [
  {
    no: 1,
    name: "policy_id",
    kind: "scalar",
    T: 12
    /* ScalarType.BYTES */
  },
  {
    no: 2,
    name: "asset_name",
    kind: "scalar",
    T: 12
    /* ScalarType.BYTES */
  }
]);
var AssetPattern = _AssetPattern;
var _TxOutputPattern = class _TxOutputPattern extends Message {
  constructor(data) {
    super();
    proto3.util.initPartial(data, this);
  }
  static fromBinary(bytes, options) {
    return new _TxOutputPattern().fromBinary(bytes, options);
  }
  static fromJson(jsonValue, options) {
    return new _TxOutputPattern().fromJson(jsonValue, options);
  }
  static fromJsonString(jsonString, options) {
    return new _TxOutputPattern().fromJsonString(jsonString, options);
  }
  static equals(a, b) {
    return proto3.util.equals(_TxOutputPattern, a, b);
  }
};
_TxOutputPattern.runtime = proto3;
_TxOutputPattern.typeName = "utxorpc.v1alpha.cardano.TxOutputPattern";
_TxOutputPattern.fields = proto3.util.newFieldList(() => [
  { no: 1, name: "address", kind: "message", T: AddressPattern },
  { no: 2, name: "asset", kind: "message", T: AssetPattern }
]);
var TxOutputPattern = _TxOutputPattern;
var _TxPattern = class _TxPattern extends Message {
  constructor(data) {
    super();
    proto3.util.initPartial(data, this);
  }
  static fromBinary(bytes, options) {
    return new _TxPattern().fromBinary(bytes, options);
  }
  static fromJson(jsonValue, options) {
    return new _TxPattern().fromJson(jsonValue, options);
  }
  static fromJsonString(jsonString, options) {
    return new _TxPattern().fromJsonString(jsonString, options);
  }
  static equals(a, b) {
    return proto3.util.equals(_TxPattern, a, b);
  }
};
_TxPattern.runtime = proto3;
_TxPattern.typeName = "utxorpc.v1alpha.cardano.TxPattern";
_TxPattern.fields = proto3.util.newFieldList(() => [
  { no: 1, name: "consumes", kind: "message", T: TxOutputPattern },
  { no: 2, name: "produces", kind: "message", T: TxOutputPattern },
  { no: 3, name: "has_address", kind: "message", T: AddressPattern },
  { no: 4, name: "moves_asset", kind: "message", T: AssetPattern },
  { no: 5, name: "mints_asset", kind: "message", T: AssetPattern }
]);
var TxPattern = _TxPattern;
var _ExUnits = class _ExUnits extends Message {
  constructor(data) {
    super();
    /**
     * @generated from field: uint64 steps = 1;
     */
    this.steps = protoInt64.zero;
    /**
     * @generated from field: uint64 memory = 2;
     */
    this.memory = protoInt64.zero;
    proto3.util.initPartial(data, this);
  }
  static fromBinary(bytes, options) {
    return new _ExUnits().fromBinary(bytes, options);
  }
  static fromJson(jsonValue, options) {
    return new _ExUnits().fromJson(jsonValue, options);
  }
  static fromJsonString(jsonString, options) {
    return new _ExUnits().fromJsonString(jsonString, options);
  }
  static equals(a, b) {
    return proto3.util.equals(_ExUnits, a, b);
  }
};
_ExUnits.runtime = proto3;
_ExUnits.typeName = "utxorpc.v1alpha.cardano.ExUnits";
_ExUnits.fields = proto3.util.newFieldList(() => [
  {
    no: 1,
    name: "steps",
    kind: "scalar",
    T: 4
    /* ScalarType.UINT64 */
  },
  {
    no: 2,
    name: "memory",
    kind: "scalar",
    T: 4
    /* ScalarType.UINT64 */
  }
]);
var ExUnits = _ExUnits;
var _ExPrices = class _ExPrices extends Message {
  constructor(data) {
    super();
    proto3.util.initPartial(data, this);
  }
  static fromBinary(bytes, options) {
    return new _ExPrices().fromBinary(bytes, options);
  }
  static fromJson(jsonValue, options) {
    return new _ExPrices().fromJson(jsonValue, options);
  }
  static fromJsonString(jsonString, options) {
    return new _ExPrices().fromJsonString(jsonString, options);
  }
  static equals(a, b) {
    return proto3.util.equals(_ExPrices, a, b);
  }
};
_ExPrices.runtime = proto3;
_ExPrices.typeName = "utxorpc.v1alpha.cardano.ExPrices";
_ExPrices.fields = proto3.util.newFieldList(() => [
  { no: 1, name: "steps", kind: "message", T: RationalNumber },
  { no: 2, name: "memory", kind: "message", T: RationalNumber }
]);
var ExPrices = _ExPrices;
var _ProtocolVersion = class _ProtocolVersion extends Message {
  constructor(data) {
    super();
    /**
     * @generated from field: uint32 major = 1;
     */
    this.major = 0;
    /**
     * @generated from field: uint32 minor = 2;
     */
    this.minor = 0;
    proto3.util.initPartial(data, this);
  }
  static fromBinary(bytes, options) {
    return new _ProtocolVersion().fromBinary(bytes, options);
  }
  static fromJson(jsonValue, options) {
    return new _ProtocolVersion().fromJson(jsonValue, options);
  }
  static fromJsonString(jsonString, options) {
    return new _ProtocolVersion().fromJsonString(jsonString, options);
  }
  static equals(a, b) {
    return proto3.util.equals(_ProtocolVersion, a, b);
  }
};
_ProtocolVersion.runtime = proto3;
_ProtocolVersion.typeName = "utxorpc.v1alpha.cardano.ProtocolVersion";
_ProtocolVersion.fields = proto3.util.newFieldList(() => [
  {
    no: 1,
    name: "major",
    kind: "scalar",
    T: 13
    /* ScalarType.UINT32 */
  },
  {
    no: 2,
    name: "minor",
    kind: "scalar",
    T: 13
    /* ScalarType.UINT32 */
  }
]);
var ProtocolVersion = _ProtocolVersion;
var _CostModel = class _CostModel extends Message {
  constructor(data) {
    super();
    /**
     * @generated from field: repeated int64 values = 1;
     */
    this.values = [];
    proto3.util.initPartial(data, this);
  }
  static fromBinary(bytes, options) {
    return new _CostModel().fromBinary(bytes, options);
  }
  static fromJson(jsonValue, options) {
    return new _CostModel().fromJson(jsonValue, options);
  }
  static fromJsonString(jsonString, options) {
    return new _CostModel().fromJsonString(jsonString, options);
  }
  static equals(a, b) {
    return proto3.util.equals(_CostModel, a, b);
  }
};
_CostModel.runtime = proto3;
_CostModel.typeName = "utxorpc.v1alpha.cardano.CostModel";
_CostModel.fields = proto3.util.newFieldList(() => [
  { no: 1, name: "values", kind: "scalar", T: 3, repeated: true }
]);
var CostModel = _CostModel;
var _CostModels = class _CostModels extends Message {
  constructor(data) {
    super();
    proto3.util.initPartial(data, this);
  }
  static fromBinary(bytes, options) {
    return new _CostModels().fromBinary(bytes, options);
  }
  static fromJson(jsonValue, options) {
    return new _CostModels().fromJson(jsonValue, options);
  }
  static fromJsonString(jsonString, options) {
    return new _CostModels().fromJsonString(jsonString, options);
  }
  static equals(a, b) {
    return proto3.util.equals(_CostModels, a, b);
  }
};
_CostModels.runtime = proto3;
_CostModels.typeName = "utxorpc.v1alpha.cardano.CostModels";
_CostModels.fields = proto3.util.newFieldList(() => [
  { no: 1, name: "plutus_v1", kind: "message", T: CostModel },
  { no: 2, name: "plutus_v2", kind: "message", T: CostModel },
  { no: 3, name: "plutus_v3", kind: "message", T: CostModel }
]);
var CostModels = _CostModels;
var _PParams = class _PParams extends Message {
  constructor(data) {
    super();
    /**
     * The number of coins per UTXO byte.
     *
     * @generated from field: uint64 coins_per_utxo_byte = 1;
     */
    this.coinsPerUtxoByte = protoInt64.zero;
    /**
     * The maximum transaction size.
     *
     * @generated from field: uint64 max_tx_size = 2;
     */
    this.maxTxSize = protoInt64.zero;
    /**
     * The minimum fee coefficient.
     *
     * @generated from field: uint64 min_fee_coefficient = 3;
     */
    this.minFeeCoefficient = protoInt64.zero;
    /**
     * The minimum fee constant.
     *
     * @generated from field: uint64 min_fee_constant = 4;
     */
    this.minFeeConstant = protoInt64.zero;
    /**
     * The maximum block body size.
     *
     * @generated from field: uint64 max_block_body_size = 5;
     */
    this.maxBlockBodySize = protoInt64.zero;
    /**
     * The maximum block header size.
     *
     * @generated from field: uint64 max_block_header_size = 6;
     */
    this.maxBlockHeaderSize = protoInt64.zero;
    /**
     * The stake key deposit.
     *
     * @generated from field: uint64 stake_key_deposit = 7;
     */
    this.stakeKeyDeposit = protoInt64.zero;
    /**
     * The pool deposit.
     *
     * @generated from field: uint64 pool_deposit = 8;
     */
    this.poolDeposit = protoInt64.zero;
    /**
     * The pool retirement epoch bound.
     *
     * @generated from field: uint64 pool_retirement_epoch_bound = 9;
     */
    this.poolRetirementEpochBound = protoInt64.zero;
    /**
     * The desired number of pools.
     *
     * @generated from field: uint64 desired_number_of_pools = 10;
     */
    this.desiredNumberOfPools = protoInt64.zero;
    /**
     * The minimum pool cost.
     *
     * @generated from field: uint64 min_pool_cost = 14;
     */
    this.minPoolCost = protoInt64.zero;
    /**
     * The maximum value size.
     *
     * @generated from field: uint64 max_value_size = 16;
     */
    this.maxValueSize = protoInt64.zero;
    /**
     * The collateral percentage.
     *
     * @generated from field: uint64 collateral_percentage = 17;
     */
    this.collateralPercentage = protoInt64.zero;
    /**
     * The maximum collateral inputs.
     *
     * @generated from field: uint64 max_collateral_inputs = 18;
     */
    this.maxCollateralInputs = protoInt64.zero;
    proto3.util.initPartial(data, this);
  }
  static fromBinary(bytes, options) {
    return new _PParams().fromBinary(bytes, options);
  }
  static fromJson(jsonValue, options) {
    return new _PParams().fromJson(jsonValue, options);
  }
  static fromJsonString(jsonString, options) {
    return new _PParams().fromJsonString(jsonString, options);
  }
  static equals(a, b) {
    return proto3.util.equals(_PParams, a, b);
  }
};
_PParams.runtime = proto3;
_PParams.typeName = "utxorpc.v1alpha.cardano.PParams";
_PParams.fields = proto3.util.newFieldList(() => [
  {
    no: 1,
    name: "coins_per_utxo_byte",
    kind: "scalar",
    T: 4
    /* ScalarType.UINT64 */
  },
  {
    no: 2,
    name: "max_tx_size",
    kind: "scalar",
    T: 4
    /* ScalarType.UINT64 */
  },
  {
    no: 3,
    name: "min_fee_coefficient",
    kind: "scalar",
    T: 4
    /* ScalarType.UINT64 */
  },
  {
    no: 4,
    name: "min_fee_constant",
    kind: "scalar",
    T: 4
    /* ScalarType.UINT64 */
  },
  {
    no: 5,
    name: "max_block_body_size",
    kind: "scalar",
    T: 4
    /* ScalarType.UINT64 */
  },
  {
    no: 6,
    name: "max_block_header_size",
    kind: "scalar",
    T: 4
    /* ScalarType.UINT64 */
  },
  {
    no: 7,
    name: "stake_key_deposit",
    kind: "scalar",
    T: 4
    /* ScalarType.UINT64 */
  },
  {
    no: 8,
    name: "pool_deposit",
    kind: "scalar",
    T: 4
    /* ScalarType.UINT64 */
  },
  {
    no: 9,
    name: "pool_retirement_epoch_bound",
    kind: "scalar",
    T: 4
    /* ScalarType.UINT64 */
  },
  {
    no: 10,
    name: "desired_number_of_pools",
    kind: "scalar",
    T: 4
    /* ScalarType.UINT64 */
  },
  { no: 11, name: "pool_influence", kind: "message", T: RationalNumber },
  { no: 12, name: "monetary_expansion", kind: "message", T: RationalNumber },
  { no: 13, name: "treasury_expansion", kind: "message", T: RationalNumber },
  {
    no: 14,
    name: "min_pool_cost",
    kind: "scalar",
    T: 4
    /* ScalarType.UINT64 */
  },
  { no: 15, name: "protocol_version", kind: "message", T: ProtocolVersion },
  {
    no: 16,
    name: "max_value_size",
    kind: "scalar",
    T: 4
    /* ScalarType.UINT64 */
  },
  {
    no: 17,
    name: "collateral_percentage",
    kind: "scalar",
    T: 4
    /* ScalarType.UINT64 */
  },
  {
    no: 18,
    name: "max_collateral_inputs",
    kind: "scalar",
    T: 4
    /* ScalarType.UINT64 */
  },
  { no: 19, name: "cost_models", kind: "message", T: CostModels },
  { no: 20, name: "prices", kind: "message", T: ExPrices },
  { no: 21, name: "max_execution_units_per_transaction", kind: "message", T: ExUnits },
  { no: 22, name: "max_execution_units_per_block", kind: "message", T: ExUnits }
]);
var PParams = _PParams;
var _EvalError = class _EvalError extends Message {
  constructor(data) {
    super();
    /**
     * @generated from field: string msg = 1;
     */
    this.msg = "";
    proto3.util.initPartial(data, this);
  }
  static fromBinary(bytes, options) {
    return new _EvalError().fromBinary(bytes, options);
  }
  static fromJson(jsonValue, options) {
    return new _EvalError().fromJson(jsonValue, options);
  }
  static fromJsonString(jsonString, options) {
    return new _EvalError().fromJsonString(jsonString, options);
  }
  static equals(a, b) {
    return proto3.util.equals(_EvalError, a, b);
  }
};
_EvalError.runtime = proto3;
_EvalError.typeName = "utxorpc.v1alpha.cardano.EvalError";
_EvalError.fields = proto3.util.newFieldList(() => [
  {
    no: 1,
    name: "msg",
    kind: "scalar",
    T: 9
    /* ScalarType.STRING */
  }
]);
var EvalError = _EvalError;
var _EvalTrace = class _EvalTrace extends Message {
  constructor(data) {
    super();
    /**
     * @generated from field: string msg = 1;
     */
    this.msg = "";
    proto3.util.initPartial(data, this);
  }
  static fromBinary(bytes, options) {
    return new _EvalTrace().fromBinary(bytes, options);
  }
  static fromJson(jsonValue, options) {
    return new _EvalTrace().fromJson(jsonValue, options);
  }
  static fromJsonString(jsonString, options) {
    return new _EvalTrace().fromJsonString(jsonString, options);
  }
  static equals(a, b) {
    return proto3.util.equals(_EvalTrace, a, b);
  }
};
_EvalTrace.runtime = proto3;
_EvalTrace.typeName = "utxorpc.v1alpha.cardano.EvalTrace";
_EvalTrace.fields = proto3.util.newFieldList(() => [
  {
    no: 1,
    name: "msg",
    kind: "scalar",
    T: 9
    /* ScalarType.STRING */
  }
]);
var EvalTrace = _EvalTrace;
var _TxEval = class _TxEval extends Message {
  constructor(data) {
    super();
    /**
     * @generated from field: uint64 fee = 1;
     */
    this.fee = protoInt64.zero;
    /**
     * @generated from field: repeated utxorpc.v1alpha.cardano.EvalError errors = 3;
     */
    this.errors = [];
    /**
     * @generated from field: repeated utxorpc.v1alpha.cardano.EvalTrace traces = 4;
     */
    this.traces = [];
    proto3.util.initPartial(data, this);
  }
  static fromBinary(bytes, options) {
    return new _TxEval().fromBinary(bytes, options);
  }
  static fromJson(jsonValue, options) {
    return new _TxEval().fromJson(jsonValue, options);
  }
  static fromJsonString(jsonString, options) {
    return new _TxEval().fromJsonString(jsonString, options);
  }
  static equals(a, b) {
    return proto3.util.equals(_TxEval, a, b);
  }
};
_TxEval.runtime = proto3;
_TxEval.typeName = "utxorpc.v1alpha.cardano.TxEval";
_TxEval.fields = proto3.util.newFieldList(() => [
  {
    no: 1,
    name: "fee",
    kind: "scalar",
    T: 4
    /* ScalarType.UINT64 */
  },
  { no: 2, name: "ex_units", kind: "message", T: ExUnits },
  { no: 3, name: "errors", kind: "message", T: EvalError, repeated: true },
  { no: 4, name: "traces", kind: "message", T: EvalTrace, repeated: true }
]);
var TxEval = _TxEval;

// src/utxorpc/v1alpha/query/query_pb.ts
var query_pb_exports = {};
__export(query_pb_exports, {
  AnyChainDatum: () => AnyChainDatum,
  AnyChainParams: () => AnyChainParams,
  AnyUtxoData: () => AnyUtxoData,
  AnyUtxoPattern: () => AnyUtxoPattern,
  ChainPoint: () => ChainPoint,
  ReadDataRequest: () => ReadDataRequest,
  ReadDataResponse: () => ReadDataResponse,
  ReadParamsRequest: () => ReadParamsRequest,
  ReadParamsResponse: () => ReadParamsResponse,
  ReadUtxosRequest: () => ReadUtxosRequest,
  ReadUtxosResponse: () => ReadUtxosResponse,
  SearchUtxosRequest: () => SearchUtxosRequest,
  SearchUtxosResponse: () => SearchUtxosResponse,
  TxoRef: () => TxoRef,
  UtxoPredicate: () => UtxoPredicate
});
import { FieldMask, Message as Message2, proto3 as proto32, protoInt64 as protoInt642 } from "@bufbuild/protobuf";
var _ChainPoint = class _ChainPoint extends Message2 {
  constructor(data) {
    super();
    /**
     * Slot number.
     *
     * @generated from field: uint64 slot = 1;
     */
    this.slot = protoInt642.zero;
    /**
     * Block hash.
     *
     * @generated from field: bytes hash = 2;
     */
    this.hash = new Uint8Array(0);
    proto32.util.initPartial(data, this);
  }
  static fromBinary(bytes, options) {
    return new _ChainPoint().fromBinary(bytes, options);
  }
  static fromJson(jsonValue, options) {
    return new _ChainPoint().fromJson(jsonValue, options);
  }
  static fromJsonString(jsonString, options) {
    return new _ChainPoint().fromJsonString(jsonString, options);
  }
  static equals(a, b) {
    return proto32.util.equals(_ChainPoint, a, b);
  }
};
_ChainPoint.runtime = proto32;
_ChainPoint.typeName = "utxorpc.v1alpha.query.ChainPoint";
_ChainPoint.fields = proto32.util.newFieldList(() => [
  {
    no: 1,
    name: "slot",
    kind: "scalar",
    T: 4
    /* ScalarType.UINT64 */
  },
  {
    no: 2,
    name: "hash",
    kind: "scalar",
    T: 12
    /* ScalarType.BYTES */
  }
]);
var ChainPoint = _ChainPoint;
var _TxoRef = class _TxoRef extends Message2 {
  constructor(data) {
    super();
    /**
     * Tx hash.
     *
     * @generated from field: bytes hash = 1;
     */
    this.hash = new Uint8Array(0);
    /**
     * Output index.
     *
     * @generated from field: uint32 index = 2;
     */
    this.index = 0;
    proto32.util.initPartial(data, this);
  }
  static fromBinary(bytes, options) {
    return new _TxoRef().fromBinary(bytes, options);
  }
  static fromJson(jsonValue, options) {
    return new _TxoRef().fromJson(jsonValue, options);
  }
  static fromJsonString(jsonString, options) {
    return new _TxoRef().fromJsonString(jsonString, options);
  }
  static equals(a, b) {
    return proto32.util.equals(_TxoRef, a, b);
  }
};
_TxoRef.runtime = proto32;
_TxoRef.typeName = "utxorpc.v1alpha.query.TxoRef";
_TxoRef.fields = proto32.util.newFieldList(() => [
  {
    no: 1,
    name: "hash",
    kind: "scalar",
    T: 12
    /* ScalarType.BYTES */
  },
  {
    no: 2,
    name: "index",
    kind: "scalar",
    T: 13
    /* ScalarType.UINT32 */
  }
]);
var TxoRef = _TxoRef;
var _ReadParamsRequest = class _ReadParamsRequest extends Message2 {
  constructor(data) {
    super();
    proto32.util.initPartial(data, this);
  }
  static fromBinary(bytes, options) {
    return new _ReadParamsRequest().fromBinary(bytes, options);
  }
  static fromJson(jsonValue, options) {
    return new _ReadParamsRequest().fromJson(jsonValue, options);
  }
  static fromJsonString(jsonString, options) {
    return new _ReadParamsRequest().fromJsonString(jsonString, options);
  }
  static equals(a, b) {
    return proto32.util.equals(_ReadParamsRequest, a, b);
  }
};
_ReadParamsRequest.runtime = proto32;
_ReadParamsRequest.typeName = "utxorpc.v1alpha.query.ReadParamsRequest";
_ReadParamsRequest.fields = proto32.util.newFieldList(() => [
  { no: 1, name: "field_mask", kind: "message", T: FieldMask }
]);
var ReadParamsRequest = _ReadParamsRequest;
var _AnyChainParams = class _AnyChainParams extends Message2 {
  constructor(data) {
    super();
    /**
     * @generated from oneof utxorpc.v1alpha.query.AnyChainParams.params
     */
    this.params = { case: void 0 };
    proto32.util.initPartial(data, this);
  }
  static fromBinary(bytes, options) {
    return new _AnyChainParams().fromBinary(bytes, options);
  }
  static fromJson(jsonValue, options) {
    return new _AnyChainParams().fromJson(jsonValue, options);
  }
  static fromJsonString(jsonString, options) {
    return new _AnyChainParams().fromJsonString(jsonString, options);
  }
  static equals(a, b) {
    return proto32.util.equals(_AnyChainParams, a, b);
  }
};
_AnyChainParams.runtime = proto32;
_AnyChainParams.typeName = "utxorpc.v1alpha.query.AnyChainParams";
_AnyChainParams.fields = proto32.util.newFieldList(() => [
  { no: 1, name: "cardano", kind: "message", T: PParams, oneof: "params" }
]);
var AnyChainParams = _AnyChainParams;
var _ReadParamsResponse = class _ReadParamsResponse extends Message2 {
  constructor(data) {
    super();
    proto32.util.initPartial(data, this);
  }
  static fromBinary(bytes, options) {
    return new _ReadParamsResponse().fromBinary(bytes, options);
  }
  static fromJson(jsonValue, options) {
    return new _ReadParamsResponse().fromJson(jsonValue, options);
  }
  static fromJsonString(jsonString, options) {
    return new _ReadParamsResponse().fromJsonString(jsonString, options);
  }
  static equals(a, b) {
    return proto32.util.equals(_ReadParamsResponse, a, b);
  }
};
_ReadParamsResponse.runtime = proto32;
_ReadParamsResponse.typeName = "utxorpc.v1alpha.query.ReadParamsResponse";
_ReadParamsResponse.fields = proto32.util.newFieldList(() => [
  { no: 1, name: "values", kind: "message", T: AnyChainParams },
  { no: 2, name: "ledger_tip", kind: "message", T: ChainPoint }
]);
var ReadParamsResponse = _ReadParamsResponse;
var _AnyUtxoPattern = class _AnyUtxoPattern extends Message2 {
  constructor(data) {
    super();
    /**
     * @generated from oneof utxorpc.v1alpha.query.AnyUtxoPattern.utxo_pattern
     */
    this.utxoPattern = { case: void 0 };
    proto32.util.initPartial(data, this);
  }
  static fromBinary(bytes, options) {
    return new _AnyUtxoPattern().fromBinary(bytes, options);
  }
  static fromJson(jsonValue, options) {
    return new _AnyUtxoPattern().fromJson(jsonValue, options);
  }
  static fromJsonString(jsonString, options) {
    return new _AnyUtxoPattern().fromJsonString(jsonString, options);
  }
  static equals(a, b) {
    return proto32.util.equals(_AnyUtxoPattern, a, b);
  }
};
_AnyUtxoPattern.runtime = proto32;
_AnyUtxoPattern.typeName = "utxorpc.v1alpha.query.AnyUtxoPattern";
_AnyUtxoPattern.fields = proto32.util.newFieldList(() => [
  { no: 1, name: "cardano", kind: "message", T: TxOutputPattern, oneof: "utxo_pattern" }
]);
var AnyUtxoPattern = _AnyUtxoPattern;
var _UtxoPredicate = class _UtxoPredicate extends Message2 {
  constructor(data) {
    super();
    /**
     * Predicate is true if tx doesn't exhibit pattern.
     *
     * @generated from field: repeated utxorpc.v1alpha.query.UtxoPredicate not = 2;
     */
    this.not = [];
    /**
     * Predicate is true if utxo exhibits all of the patterns.
     *
     * @generated from field: repeated utxorpc.v1alpha.query.UtxoPredicate all_of = 3;
     */
    this.allOf = [];
    /**
     * Predicate is true if utxo exhibits any of the patterns.
     *
     * @generated from field: repeated utxorpc.v1alpha.query.UtxoPredicate any_of = 4;
     */
    this.anyOf = [];
    proto32.util.initPartial(data, this);
  }
  static fromBinary(bytes, options) {
    return new _UtxoPredicate().fromBinary(bytes, options);
  }
  static fromJson(jsonValue, options) {
    return new _UtxoPredicate().fromJson(jsonValue, options);
  }
  static fromJsonString(jsonString, options) {
    return new _UtxoPredicate().fromJsonString(jsonString, options);
  }
  static equals(a, b) {
    return proto32.util.equals(_UtxoPredicate, a, b);
  }
};
_UtxoPredicate.runtime = proto32;
_UtxoPredicate.typeName = "utxorpc.v1alpha.query.UtxoPredicate";
_UtxoPredicate.fields = proto32.util.newFieldList(() => [
  { no: 1, name: "match", kind: "message", T: AnyUtxoPattern },
  { no: 2, name: "not", kind: "message", T: _UtxoPredicate, repeated: true },
  { no: 3, name: "all_of", kind: "message", T: _UtxoPredicate, repeated: true },
  { no: 4, name: "any_of", kind: "message", T: _UtxoPredicate, repeated: true }
]);
var UtxoPredicate = _UtxoPredicate;
var _AnyUtxoData = class _AnyUtxoData extends Message2 {
  constructor(data) {
    super();
    /**
     * Original bytes as defined by the chain
     *
     * @generated from field: bytes native_bytes = 1;
     */
    this.nativeBytes = new Uint8Array(0);
    /**
     * @generated from oneof utxorpc.v1alpha.query.AnyUtxoData.parsed_state
     */
    this.parsedState = { case: void 0 };
    proto32.util.initPartial(data, this);
  }
  static fromBinary(bytes, options) {
    return new _AnyUtxoData().fromBinary(bytes, options);
  }
  static fromJson(jsonValue, options) {
    return new _AnyUtxoData().fromJson(jsonValue, options);
  }
  static fromJsonString(jsonString, options) {
    return new _AnyUtxoData().fromJsonString(jsonString, options);
  }
  static equals(a, b) {
    return proto32.util.equals(_AnyUtxoData, a, b);
  }
};
_AnyUtxoData.runtime = proto32;
_AnyUtxoData.typeName = "utxorpc.v1alpha.query.AnyUtxoData";
_AnyUtxoData.fields = proto32.util.newFieldList(() => [
  {
    no: 1,
    name: "native_bytes",
    kind: "scalar",
    T: 12
    /* ScalarType.BYTES */
  },
  { no: 2, name: "txo_ref", kind: "message", T: TxoRef },
  { no: 3, name: "cardano", kind: "message", T: TxOutput, oneof: "parsed_state" }
]);
var AnyUtxoData = _AnyUtxoData;
var _ReadUtxosRequest = class _ReadUtxosRequest extends Message2 {
  constructor(data) {
    super();
    /**
     * List of keys UTxOs.
     *
     * @generated from field: repeated utxorpc.v1alpha.query.TxoRef keys = 1;
     */
    this.keys = [];
    proto32.util.initPartial(data, this);
  }
  static fromBinary(bytes, options) {
    return new _ReadUtxosRequest().fromBinary(bytes, options);
  }
  static fromJson(jsonValue, options) {
    return new _ReadUtxosRequest().fromJson(jsonValue, options);
  }
  static fromJsonString(jsonString, options) {
    return new _ReadUtxosRequest().fromJsonString(jsonString, options);
  }
  static equals(a, b) {
    return proto32.util.equals(_ReadUtxosRequest, a, b);
  }
};
_ReadUtxosRequest.runtime = proto32;
_ReadUtxosRequest.typeName = "utxorpc.v1alpha.query.ReadUtxosRequest";
_ReadUtxosRequest.fields = proto32.util.newFieldList(() => [
  { no: 1, name: "keys", kind: "message", T: TxoRef, repeated: true },
  { no: 2, name: "field_mask", kind: "message", T: FieldMask }
]);
var ReadUtxosRequest = _ReadUtxosRequest;
var _ReadUtxosResponse = class _ReadUtxosResponse extends Message2 {
  constructor(data) {
    super();
    /**
     * List of UTxOs.
     *
     * @generated from field: repeated utxorpc.v1alpha.query.AnyUtxoData items = 1;
     */
    this.items = [];
    proto32.util.initPartial(data, this);
  }
  static fromBinary(bytes, options) {
    return new _ReadUtxosResponse().fromBinary(bytes, options);
  }
  static fromJson(jsonValue, options) {
    return new _ReadUtxosResponse().fromJson(jsonValue, options);
  }
  static fromJsonString(jsonString, options) {
    return new _ReadUtxosResponse().fromJsonString(jsonString, options);
  }
  static equals(a, b) {
    return proto32.util.equals(_ReadUtxosResponse, a, b);
  }
};
_ReadUtxosResponse.runtime = proto32;
_ReadUtxosResponse.typeName = "utxorpc.v1alpha.query.ReadUtxosResponse";
_ReadUtxosResponse.fields = proto32.util.newFieldList(() => [
  { no: 1, name: "items", kind: "message", T: AnyUtxoData, repeated: true },
  { no: 2, name: "ledger_tip", kind: "message", T: ChainPoint }
]);
var ReadUtxosResponse = _ReadUtxosResponse;
var _SearchUtxosRequest = class _SearchUtxosRequest extends Message2 {
  constructor(data) {
    super();
    /**
     * The maximum number of items to return.
     *
     * @generated from field: int32 max_items = 3;
     */
    this.maxItems = 0;
    /**
     * The next_page_token value returned from a previous request, if any.
     *
     * @generated from field: string start_token = 4;
     */
    this.startToken = "";
    proto32.util.initPartial(data, this);
  }
  static fromBinary(bytes, options) {
    return new _SearchUtxosRequest().fromBinary(bytes, options);
  }
  static fromJson(jsonValue, options) {
    return new _SearchUtxosRequest().fromJson(jsonValue, options);
  }
  static fromJsonString(jsonString, options) {
    return new _SearchUtxosRequest().fromJsonString(jsonString, options);
  }
  static equals(a, b) {
    return proto32.util.equals(_SearchUtxosRequest, a, b);
  }
};
_SearchUtxosRequest.runtime = proto32;
_SearchUtxosRequest.typeName = "utxorpc.v1alpha.query.SearchUtxosRequest";
_SearchUtxosRequest.fields = proto32.util.newFieldList(() => [
  { no: 1, name: "predicate", kind: "message", T: UtxoPredicate },
  { no: 2, name: "field_mask", kind: "message", T: FieldMask },
  {
    no: 3,
    name: "max_items",
    kind: "scalar",
    T: 5
    /* ScalarType.INT32 */
  },
  {
    no: 4,
    name: "start_token",
    kind: "scalar",
    T: 9
    /* ScalarType.STRING */
  }
]);
var SearchUtxosRequest = _SearchUtxosRequest;
var _SearchUtxosResponse = class _SearchUtxosResponse extends Message2 {
  constructor(data) {
    super();
    /**
     * List of UTxOs.
     *
     * @generated from field: repeated utxorpc.v1alpha.query.AnyUtxoData items = 1;
     */
    this.items = [];
    /**
     * Token to retrieve the next page of results, or empty if there are no more results.
     *
     * @generated from field: string next_token = 3;
     */
    this.nextToken = "";
    proto32.util.initPartial(data, this);
  }
  static fromBinary(bytes, options) {
    return new _SearchUtxosResponse().fromBinary(bytes, options);
  }
  static fromJson(jsonValue, options) {
    return new _SearchUtxosResponse().fromJson(jsonValue, options);
  }
  static fromJsonString(jsonString, options) {
    return new _SearchUtxosResponse().fromJsonString(jsonString, options);
  }
  static equals(a, b) {
    return proto32.util.equals(_SearchUtxosResponse, a, b);
  }
};
_SearchUtxosResponse.runtime = proto32;
_SearchUtxosResponse.typeName = "utxorpc.v1alpha.query.SearchUtxosResponse";
_SearchUtxosResponse.fields = proto32.util.newFieldList(() => [
  { no: 1, name: "items", kind: "message", T: AnyUtxoData, repeated: true },
  { no: 2, name: "ledger_tip", kind: "message", T: ChainPoint },
  {
    no: 3,
    name: "next_token",
    kind: "scalar",
    T: 9
    /* ScalarType.STRING */
  }
]);
var SearchUtxosResponse = _SearchUtxosResponse;
var _ReadDataRequest = class _ReadDataRequest extends Message2 {
  constructor(data) {
    super();
    /**
     * @generated from field: repeated bytes keys = 1;
     */
    this.keys = [];
    proto32.util.initPartial(data, this);
  }
  static fromBinary(bytes, options) {
    return new _ReadDataRequest().fromBinary(bytes, options);
  }
  static fromJson(jsonValue, options) {
    return new _ReadDataRequest().fromJson(jsonValue, options);
  }
  static fromJsonString(jsonString, options) {
    return new _ReadDataRequest().fromJsonString(jsonString, options);
  }
  static equals(a, b) {
    return proto32.util.equals(_ReadDataRequest, a, b);
  }
};
_ReadDataRequest.runtime = proto32;
_ReadDataRequest.typeName = "utxorpc.v1alpha.query.ReadDataRequest";
_ReadDataRequest.fields = proto32.util.newFieldList(() => [
  { no: 1, name: "keys", kind: "scalar", T: 12, repeated: true },
  { no: 2, name: "field_mask", kind: "message", T: FieldMask }
]);
var ReadDataRequest = _ReadDataRequest;
var _AnyChainDatum = class _AnyChainDatum extends Message2 {
  constructor(data) {
    super();
    /**
     * Original bytes as defined by the chain
     *
     * @generated from field: bytes native_bytes = 1;
     */
    this.nativeBytes = new Uint8Array(0);
    /**
     * @generated from field: bytes key = 2;
     */
    this.key = new Uint8Array(0);
    /**
     * @generated from oneof utxorpc.v1alpha.query.AnyChainDatum.parsed_state
     */
    this.parsedState = { case: void 0 };
    proto32.util.initPartial(data, this);
  }
  static fromBinary(bytes, options) {
    return new _AnyChainDatum().fromBinary(bytes, options);
  }
  static fromJson(jsonValue, options) {
    return new _AnyChainDatum().fromJson(jsonValue, options);
  }
  static fromJsonString(jsonString, options) {
    return new _AnyChainDatum().fromJsonString(jsonString, options);
  }
  static equals(a, b) {
    return proto32.util.equals(_AnyChainDatum, a, b);
  }
};
_AnyChainDatum.runtime = proto32;
_AnyChainDatum.typeName = "utxorpc.v1alpha.query.AnyChainDatum";
_AnyChainDatum.fields = proto32.util.newFieldList(() => [
  {
    no: 1,
    name: "native_bytes",
    kind: "scalar",
    T: 12
    /* ScalarType.BYTES */
  },
  {
    no: 2,
    name: "key",
    kind: "scalar",
    T: 12
    /* ScalarType.BYTES */
  },
  { no: 3, name: "cardano", kind: "message", T: PlutusData, oneof: "parsed_state" }
]);
var AnyChainDatum = _AnyChainDatum;
var _ReadDataResponse = class _ReadDataResponse extends Message2 {
  constructor(data) {
    super();
    /**
     * The value of each datum.
     *
     * @generated from field: repeated utxorpc.v1alpha.query.AnyChainDatum values = 1;
     */
    this.values = [];
    proto32.util.initPartial(data, this);
  }
  static fromBinary(bytes, options) {
    return new _ReadDataResponse().fromBinary(bytes, options);
  }
  static fromJson(jsonValue, options) {
    return new _ReadDataResponse().fromJson(jsonValue, options);
  }
  static fromJsonString(jsonString, options) {
    return new _ReadDataResponse().fromJsonString(jsonString, options);
  }
  static equals(a, b) {
    return proto32.util.equals(_ReadDataResponse, a, b);
  }
};
_ReadDataResponse.runtime = proto32;
_ReadDataResponse.typeName = "utxorpc.v1alpha.query.ReadDataResponse";
_ReadDataResponse.fields = proto32.util.newFieldList(() => [
  { no: 1, name: "values", kind: "message", T: AnyChainDatum, repeated: true },
  { no: 2, name: "ledger_tip", kind: "message", T: ChainPoint }
]);
var ReadDataResponse = _ReadDataResponse;

// src/utxorpc/v1alpha/query/query_connect.ts
var query_connect_exports = {};
__export(query_connect_exports, {
  QueryService: () => QueryService
});
import { MethodKind } from "@bufbuild/protobuf";
var QueryService = {
  typeName: "utxorpc.v1alpha.query.QueryService",
  methods: {
    /**
     * Get overall chain state.
     *
     * @generated from rpc utxorpc.v1alpha.query.QueryService.ReadParams
     */
    readParams: {
      name: "ReadParams",
      I: ReadParamsRequest,
      O: ReadParamsResponse,
      kind: MethodKind.Unary
    },
    /**
     * Read specific UTxOs by reference.
     *
     * @generated from rpc utxorpc.v1alpha.query.QueryService.ReadUtxos
     */
    readUtxos: {
      name: "ReadUtxos",
      I: ReadUtxosRequest,
      O: ReadUtxosResponse,
      kind: MethodKind.Unary
    },
    /**
     * Search for UTxO based on a pattern.
     *
     * @generated from rpc utxorpc.v1alpha.query.QueryService.SearchUtxos
     */
    searchUtxos: {
      name: "SearchUtxos",
      I: SearchUtxosRequest,
      O: SearchUtxosResponse,
      kind: MethodKind.Unary
    },
    /**
     * Read specific datum by hash
     *
     * @generated from rpc utxorpc.v1alpha.query.QueryService.ReadData
     */
    readData: {
      name: "ReadData",
      I: ReadDataRequest,
      O: ReadDataResponse,
      kind: MethodKind.Unary
    }
  }
};

// src/utxorpc/v1alpha/submit/submit_pb.ts
var submit_pb_exports = {};
__export(submit_pb_exports, {
  AnyChainEval: () => AnyChainEval,
  AnyChainTx: () => AnyChainTx,
  AnyChainTxPattern: () => AnyChainTxPattern,
  EvalTxRequest: () => EvalTxRequest,
  EvalTxResponse: () => EvalTxResponse,
  ReadMempoolRequest: () => ReadMempoolRequest,
  ReadMempoolResponse: () => ReadMempoolResponse,
  Stage: () => Stage,
  SubmitTxRequest: () => SubmitTxRequest,
  SubmitTxResponse: () => SubmitTxResponse,
  TxInMempool: () => TxInMempool,
  TxPredicate: () => TxPredicate,
  WaitForTxRequest: () => WaitForTxRequest,
  WaitForTxResponse: () => WaitForTxResponse,
  WatchMempoolRequest: () => WatchMempoolRequest,
  WatchMempoolResponse: () => WatchMempoolResponse
});
import { FieldMask as FieldMask2, Message as Message3, proto3 as proto33 } from "@bufbuild/protobuf";
var Stage = /* @__PURE__ */ ((Stage2) => {
  Stage2[Stage2["UNSPECIFIED"] = 0] = "UNSPECIFIED";
  Stage2[Stage2["ACKNOWLEDGED"] = 1] = "ACKNOWLEDGED";
  Stage2[Stage2["MEMPOOL"] = 2] = "MEMPOOL";
  Stage2[Stage2["NETWORK"] = 3] = "NETWORK";
  Stage2[Stage2["CONFIRMED"] = 4] = "CONFIRMED";
  return Stage2;
})(Stage || {});
proto33.util.setEnumType(Stage, "utxorpc.v1alpha.submit.Stage", [
  { no: 0, name: "STAGE_UNSPECIFIED" },
  { no: 1, name: "STAGE_ACKNOWLEDGED" },
  { no: 2, name: "STAGE_MEMPOOL" },
  { no: 3, name: "STAGE_NETWORK" },
  { no: 4, name: "STAGE_CONFIRMED" }
]);
var _AnyChainTx = class _AnyChainTx extends Message3 {
  constructor(data) {
    super();
    /**
     * @generated from oneof utxorpc.v1alpha.submit.AnyChainTx.type
     */
    this.type = { case: void 0 };
    proto33.util.initPartial(data, this);
  }
  static fromBinary(bytes, options) {
    return new _AnyChainTx().fromBinary(bytes, options);
  }
  static fromJson(jsonValue, options) {
    return new _AnyChainTx().fromJson(jsonValue, options);
  }
  static fromJsonString(jsonString, options) {
    return new _AnyChainTx().fromJsonString(jsonString, options);
  }
  static equals(a, b) {
    return proto33.util.equals(_AnyChainTx, a, b);
  }
};
_AnyChainTx.runtime = proto33;
_AnyChainTx.typeName = "utxorpc.v1alpha.submit.AnyChainTx";
_AnyChainTx.fields = proto33.util.newFieldList(() => [
  { no: 1, name: "raw", kind: "scalar", T: 12, oneof: "type" }
]);
var AnyChainTx = _AnyChainTx;
var _EvalTxRequest = class _EvalTxRequest extends Message3 {
  constructor(data) {
    super();
    /**
     * List of transactions to evaluate.
     *
     * @generated from field: repeated utxorpc.v1alpha.submit.AnyChainTx tx = 1;
     */
    this.tx = [];
    proto33.util.initPartial(data, this);
  }
  static fromBinary(bytes, options) {
    return new _EvalTxRequest().fromBinary(bytes, options);
  }
  static fromJson(jsonValue, options) {
    return new _EvalTxRequest().fromJson(jsonValue, options);
  }
  static fromJsonString(jsonString, options) {
    return new _EvalTxRequest().fromJsonString(jsonString, options);
  }
  static equals(a, b) {
    return proto33.util.equals(_EvalTxRequest, a, b);
  }
};
_EvalTxRequest.runtime = proto33;
_EvalTxRequest.typeName = "utxorpc.v1alpha.submit.EvalTxRequest";
_EvalTxRequest.fields = proto33.util.newFieldList(() => [
  { no: 1, name: "tx", kind: "message", T: AnyChainTx, repeated: true }
]);
var EvalTxRequest = _EvalTxRequest;
var _AnyChainEval = class _AnyChainEval extends Message3 {
  constructor(data) {
    super();
    /**
     * @generated from oneof utxorpc.v1alpha.submit.AnyChainEval.chain
     */
    this.chain = { case: void 0 };
    proto33.util.initPartial(data, this);
  }
  static fromBinary(bytes, options) {
    return new _AnyChainEval().fromBinary(bytes, options);
  }
  static fromJson(jsonValue, options) {
    return new _AnyChainEval().fromJson(jsonValue, options);
  }
  static fromJsonString(jsonString, options) {
    return new _AnyChainEval().fromJsonString(jsonString, options);
  }
  static equals(a, b) {
    return proto33.util.equals(_AnyChainEval, a, b);
  }
};
_AnyChainEval.runtime = proto33;
_AnyChainEval.typeName = "utxorpc.v1alpha.submit.AnyChainEval";
_AnyChainEval.fields = proto33.util.newFieldList(() => [
  { no: 1, name: "cardano", kind: "message", T: TxEval, oneof: "chain" }
]);
var AnyChainEval = _AnyChainEval;
var _EvalTxResponse = class _EvalTxResponse extends Message3 {
  constructor(data) {
    super();
    /**
     * @generated from field: repeated utxorpc.v1alpha.submit.AnyChainEval report = 1;
     */
    this.report = [];
    proto33.util.initPartial(data, this);
  }
  static fromBinary(bytes, options) {
    return new _EvalTxResponse().fromBinary(bytes, options);
  }
  static fromJson(jsonValue, options) {
    return new _EvalTxResponse().fromJson(jsonValue, options);
  }
  static fromJsonString(jsonString, options) {
    return new _EvalTxResponse().fromJsonString(jsonString, options);
  }
  static equals(a, b) {
    return proto33.util.equals(_EvalTxResponse, a, b);
  }
};
_EvalTxResponse.runtime = proto33;
_EvalTxResponse.typeName = "utxorpc.v1alpha.submit.EvalTxResponse";
_EvalTxResponse.fields = proto33.util.newFieldList(() => [
  { no: 1, name: "report", kind: "message", T: AnyChainEval, repeated: true }
]);
var EvalTxResponse = _EvalTxResponse;
var _SubmitTxRequest = class _SubmitTxRequest extends Message3 {
  constructor(data) {
    super();
    /**
     * List of transactions to submit.
     *
     * @generated from field: repeated utxorpc.v1alpha.submit.AnyChainTx tx = 1;
     */
    this.tx = [];
    proto33.util.initPartial(data, this);
  }
  static fromBinary(bytes, options) {
    return new _SubmitTxRequest().fromBinary(bytes, options);
  }
  static fromJson(jsonValue, options) {
    return new _SubmitTxRequest().fromJson(jsonValue, options);
  }
  static fromJsonString(jsonString, options) {
    return new _SubmitTxRequest().fromJsonString(jsonString, options);
  }
  static equals(a, b) {
    return proto33.util.equals(_SubmitTxRequest, a, b);
  }
};
_SubmitTxRequest.runtime = proto33;
_SubmitTxRequest.typeName = "utxorpc.v1alpha.submit.SubmitTxRequest";
_SubmitTxRequest.fields = proto33.util.newFieldList(() => [
  { no: 1, name: "tx", kind: "message", T: AnyChainTx, repeated: true }
]);
var SubmitTxRequest = _SubmitTxRequest;
var _SubmitTxResponse = class _SubmitTxResponse extends Message3 {
  constructor(data) {
    super();
    /**
     * List of transaction references.
     *
     * @generated from field: repeated bytes ref = 1;
     */
    this.ref = [];
    proto33.util.initPartial(data, this);
  }
  static fromBinary(bytes, options) {
    return new _SubmitTxResponse().fromBinary(bytes, options);
  }
  static fromJson(jsonValue, options) {
    return new _SubmitTxResponse().fromJson(jsonValue, options);
  }
  static fromJsonString(jsonString, options) {
    return new _SubmitTxResponse().fromJsonString(jsonString, options);
  }
  static equals(a, b) {
    return proto33.util.equals(_SubmitTxResponse, a, b);
  }
};
_SubmitTxResponse.runtime = proto33;
_SubmitTxResponse.typeName = "utxorpc.v1alpha.submit.SubmitTxResponse";
_SubmitTxResponse.fields = proto33.util.newFieldList(() => [
  { no: 1, name: "ref", kind: "scalar", T: 12, repeated: true }
]);
var SubmitTxResponse = _SubmitTxResponse;
var _TxInMempool = class _TxInMempool extends Message3 {
  constructor(data) {
    super();
    /**
     * The transaction reference.
     *
     * @generated from field: bytes ref = 1;
     */
    this.ref = new Uint8Array(0);
    /**
     * Original bytes as defined by the chain
     *
     * @generated from field: bytes native_bytes = 2;
     */
    this.nativeBytes = new Uint8Array(0);
    /**
     * The current stage of the tx
     *
     * @generated from field: utxorpc.v1alpha.submit.Stage stage = 3;
     */
    this.stage = 0 /* UNSPECIFIED */;
    /**
     * @generated from oneof utxorpc.v1alpha.submit.TxInMempool.parsed_state
     */
    this.parsedState = { case: void 0 };
    proto33.util.initPartial(data, this);
  }
  static fromBinary(bytes, options) {
    return new _TxInMempool().fromBinary(bytes, options);
  }
  static fromJson(jsonValue, options) {
    return new _TxInMempool().fromJson(jsonValue, options);
  }
  static fromJsonString(jsonString, options) {
    return new _TxInMempool().fromJsonString(jsonString, options);
  }
  static equals(a, b) {
    return proto33.util.equals(_TxInMempool, a, b);
  }
};
_TxInMempool.runtime = proto33;
_TxInMempool.typeName = "utxorpc.v1alpha.submit.TxInMempool";
_TxInMempool.fields = proto33.util.newFieldList(() => [
  {
    no: 1,
    name: "ref",
    kind: "scalar",
    T: 12
    /* ScalarType.BYTES */
  },
  {
    no: 2,
    name: "native_bytes",
    kind: "scalar",
    T: 12
    /* ScalarType.BYTES */
  },
  { no: 3, name: "stage", kind: "enum", T: proto33.getEnumType(Stage) },
  { no: 4, name: "cardano", kind: "message", T: Tx, oneof: "parsed_state" }
]);
var TxInMempool = _TxInMempool;
var _ReadMempoolRequest = class _ReadMempoolRequest extends Message3 {
  constructor(data) {
    super();
    proto33.util.initPartial(data, this);
  }
  static fromBinary(bytes, options) {
    return new _ReadMempoolRequest().fromBinary(bytes, options);
  }
  static fromJson(jsonValue, options) {
    return new _ReadMempoolRequest().fromJson(jsonValue, options);
  }
  static fromJsonString(jsonString, options) {
    return new _ReadMempoolRequest().fromJsonString(jsonString, options);
  }
  static equals(a, b) {
    return proto33.util.equals(_ReadMempoolRequest, a, b);
  }
};
_ReadMempoolRequest.runtime = proto33;
_ReadMempoolRequest.typeName = "utxorpc.v1alpha.submit.ReadMempoolRequest";
_ReadMempoolRequest.fields = proto33.util.newFieldList(() => []);
var ReadMempoolRequest = _ReadMempoolRequest;
var _ReadMempoolResponse = class _ReadMempoolResponse extends Message3 {
  constructor(data) {
    super();
    /**
     * List of transaction currently on the mempool.
     *
     * @generated from field: repeated utxorpc.v1alpha.submit.TxInMempool items = 1;
     */
    this.items = [];
    proto33.util.initPartial(data, this);
  }
  static fromBinary(bytes, options) {
    return new _ReadMempoolResponse().fromBinary(bytes, options);
  }
  static fromJson(jsonValue, options) {
    return new _ReadMempoolResponse().fromJson(jsonValue, options);
  }
  static fromJsonString(jsonString, options) {
    return new _ReadMempoolResponse().fromJsonString(jsonString, options);
  }
  static equals(a, b) {
    return proto33.util.equals(_ReadMempoolResponse, a, b);
  }
};
_ReadMempoolResponse.runtime = proto33;
_ReadMempoolResponse.typeName = "utxorpc.v1alpha.submit.ReadMempoolResponse";
_ReadMempoolResponse.fields = proto33.util.newFieldList(() => [
  { no: 1, name: "items", kind: "message", T: TxInMempool, repeated: true }
]);
var ReadMempoolResponse = _ReadMempoolResponse;
var _WaitForTxRequest = class _WaitForTxRequest extends Message3 {
  constructor(data) {
    super();
    /**
     * List of transaction references to wait for.
     *
     * @generated from field: repeated bytes ref = 1;
     */
    this.ref = [];
    proto33.util.initPartial(data, this);
  }
  static fromBinary(bytes, options) {
    return new _WaitForTxRequest().fromBinary(bytes, options);
  }
  static fromJson(jsonValue, options) {
    return new _WaitForTxRequest().fromJson(jsonValue, options);
  }
  static fromJsonString(jsonString, options) {
    return new _WaitForTxRequest().fromJsonString(jsonString, options);
  }
  static equals(a, b) {
    return proto33.util.equals(_WaitForTxRequest, a, b);
  }
};
_WaitForTxRequest.runtime = proto33;
_WaitForTxRequest.typeName = "utxorpc.v1alpha.submit.WaitForTxRequest";
_WaitForTxRequest.fields = proto33.util.newFieldList(() => [
  { no: 1, name: "ref", kind: "scalar", T: 12, repeated: true }
]);
var WaitForTxRequest = _WaitForTxRequest;
var _WaitForTxResponse = class _WaitForTxResponse extends Message3 {
  constructor(data) {
    super();
    /**
     * Transaction reference.
     *
     * @generated from field: bytes ref = 1;
     */
    this.ref = new Uint8Array(0);
    /**
     * Stage reached by the transaction.
     *
     * @generated from field: utxorpc.v1alpha.submit.Stage stage = 2;
     */
    this.stage = 0 /* UNSPECIFIED */;
    proto33.util.initPartial(data, this);
  }
  static fromBinary(bytes, options) {
    return new _WaitForTxResponse().fromBinary(bytes, options);
  }
  static fromJson(jsonValue, options) {
    return new _WaitForTxResponse().fromJson(jsonValue, options);
  }
  static fromJsonString(jsonString, options) {
    return new _WaitForTxResponse().fromJsonString(jsonString, options);
  }
  static equals(a, b) {
    return proto33.util.equals(_WaitForTxResponse, a, b);
  }
};
_WaitForTxResponse.runtime = proto33;
_WaitForTxResponse.typeName = "utxorpc.v1alpha.submit.WaitForTxResponse";
_WaitForTxResponse.fields = proto33.util.newFieldList(() => [
  {
    no: 1,
    name: "ref",
    kind: "scalar",
    T: 12
    /* ScalarType.BYTES */
  },
  { no: 2, name: "stage", kind: "enum", T: proto33.getEnumType(Stage) }
]);
var WaitForTxResponse = _WaitForTxResponse;
var _AnyChainTxPattern = class _AnyChainTxPattern extends Message3 {
  constructor(data) {
    super();
    /**
     * @generated from oneof utxorpc.v1alpha.submit.AnyChainTxPattern.chain
     */
    this.chain = { case: void 0 };
    proto33.util.initPartial(data, this);
  }
  static fromBinary(bytes, options) {
    return new _AnyChainTxPattern().fromBinary(bytes, options);
  }
  static fromJson(jsonValue, options) {
    return new _AnyChainTxPattern().fromJson(jsonValue, options);
  }
  static fromJsonString(jsonString, options) {
    return new _AnyChainTxPattern().fromJsonString(jsonString, options);
  }
  static equals(a, b) {
    return proto33.util.equals(_AnyChainTxPattern, a, b);
  }
};
_AnyChainTxPattern.runtime = proto33;
_AnyChainTxPattern.typeName = "utxorpc.v1alpha.submit.AnyChainTxPattern";
_AnyChainTxPattern.fields = proto33.util.newFieldList(() => [
  { no: 1, name: "cardano", kind: "message", T: TxPattern, oneof: "chain" }
]);
var AnyChainTxPattern = _AnyChainTxPattern;
var _TxPredicate = class _TxPredicate extends Message3 {
  constructor(data) {
    super();
    /**
     * Predicate is true if tx doesn't exhibit pattern.
     *
     * @generated from field: repeated utxorpc.v1alpha.submit.TxPredicate not = 2;
     */
    this.not = [];
    /**
     * Predicate is true if tx exhibits all of the patterns.
     *
     * @generated from field: repeated utxorpc.v1alpha.submit.TxPredicate all_of = 3;
     */
    this.allOf = [];
    /**
     * Predicate is true if tx exhibits any of the patterns.
     *
     * @generated from field: repeated utxorpc.v1alpha.submit.TxPredicate any_of = 4;
     */
    this.anyOf = [];
    proto33.util.initPartial(data, this);
  }
  static fromBinary(bytes, options) {
    return new _TxPredicate().fromBinary(bytes, options);
  }
  static fromJson(jsonValue, options) {
    return new _TxPredicate().fromJson(jsonValue, options);
  }
  static fromJsonString(jsonString, options) {
    return new _TxPredicate().fromJsonString(jsonString, options);
  }
  static equals(a, b) {
    return proto33.util.equals(_TxPredicate, a, b);
  }
};
_TxPredicate.runtime = proto33;
_TxPredicate.typeName = "utxorpc.v1alpha.submit.TxPredicate";
_TxPredicate.fields = proto33.util.newFieldList(() => [
  { no: 1, name: "match", kind: "message", T: AnyChainTxPattern },
  { no: 2, name: "not", kind: "message", T: _TxPredicate, repeated: true },
  { no: 3, name: "all_of", kind: "message", T: _TxPredicate, repeated: true },
  { no: 4, name: "any_of", kind: "message", T: _TxPredicate, repeated: true }
]);
var TxPredicate = _TxPredicate;
var _WatchMempoolRequest = class _WatchMempoolRequest extends Message3 {
  constructor(data) {
    super();
    proto33.util.initPartial(data, this);
  }
  static fromBinary(bytes, options) {
    return new _WatchMempoolRequest().fromBinary(bytes, options);
  }
  static fromJson(jsonValue, options) {
    return new _WatchMempoolRequest().fromJson(jsonValue, options);
  }
  static fromJsonString(jsonString, options) {
    return new _WatchMempoolRequest().fromJsonString(jsonString, options);
  }
  static equals(a, b) {
    return proto33.util.equals(_WatchMempoolRequest, a, b);
  }
};
_WatchMempoolRequest.runtime = proto33;
_WatchMempoolRequest.typeName = "utxorpc.v1alpha.submit.WatchMempoolRequest";
_WatchMempoolRequest.fields = proto33.util.newFieldList(() => [
  { no: 1, name: "predicate", kind: "message", T: TxPredicate },
  { no: 2, name: "field_mask", kind: "message", T: FieldMask2 }
]);
var WatchMempoolRequest = _WatchMempoolRequest;
var _WatchMempoolResponse = class _WatchMempoolResponse extends Message3 {
  constructor(data) {
    super();
    proto33.util.initPartial(data, this);
  }
  static fromBinary(bytes, options) {
    return new _WatchMempoolResponse().fromBinary(bytes, options);
  }
  static fromJson(jsonValue, options) {
    return new _WatchMempoolResponse().fromJson(jsonValue, options);
  }
  static fromJsonString(jsonString, options) {
    return new _WatchMempoolResponse().fromJsonString(jsonString, options);
  }
  static equals(a, b) {
    return proto33.util.equals(_WatchMempoolResponse, a, b);
  }
};
_WatchMempoolResponse.runtime = proto33;
_WatchMempoolResponse.typeName = "utxorpc.v1alpha.submit.WatchMempoolResponse";
_WatchMempoolResponse.fields = proto33.util.newFieldList(() => [
  { no: 1, name: "tx", kind: "message", T: TxInMempool }
]);
var WatchMempoolResponse = _WatchMempoolResponse;

// src/utxorpc/v1alpha/submit/submit_connect.ts
var submit_connect_exports = {};
__export(submit_connect_exports, {
  SubmitService: () => SubmitService
});
import { MethodKind as MethodKind2 } from "@bufbuild/protobuf";
var SubmitService = {
  typeName: "utxorpc.v1alpha.submit.SubmitService",
  methods: {
    /**
     * Evaluates a transaction without submitting it.
     *
     * @generated from rpc utxorpc.v1alpha.submit.SubmitService.EvalTx
     */
    evalTx: {
      name: "EvalTx",
      I: EvalTxRequest,
      O: EvalTxResponse,
      kind: MethodKind2.Unary
    },
    /**
     * Submit transactions to the blockchain.
     *
     * @generated from rpc utxorpc.v1alpha.submit.SubmitService.SubmitTx
     */
    submitTx: {
      name: "SubmitTx",
      I: SubmitTxRequest,
      O: SubmitTxResponse,
      kind: MethodKind2.Unary
    },
    /**
     * Wait for transactions to reach a certain stage and stream the updates.
     *
     * @generated from rpc utxorpc.v1alpha.submit.SubmitService.WaitForTx
     */
    waitForTx: {
      name: "WaitForTx",
      I: WaitForTxRequest,
      O: WaitForTxResponse,
      kind: MethodKind2.ServerStreaming
    },
    /**
     * Returns a point-in-time snapshot of the mempool.
     *
     * @generated from rpc utxorpc.v1alpha.submit.SubmitService.ReadMempool
     */
    readMempool: {
      name: "ReadMempool",
      I: ReadMempoolRequest,
      O: ReadMempoolResponse,
      kind: MethodKind2.Unary
    },
    /**
     * Stream transactions from the mempool matching the specified predicates.
     *
     * @generated from rpc utxorpc.v1alpha.submit.SubmitService.WatchMempool
     */
    watchMempool: {
      name: "WatchMempool",
      I: WatchMempoolRequest,
      O: WatchMempoolResponse,
      kind: MethodKind2.ServerStreaming
    }
  }
};

// src/utxorpc/v1alpha/sync/sync_pb.ts
var sync_pb_exports = {};
__export(sync_pb_exports, {
  AnyChainBlock: () => AnyChainBlock,
  BlockRef: () => BlockRef,
  DumpHistoryRequest: () => DumpHistoryRequest,
  DumpHistoryResponse: () => DumpHistoryResponse,
  FetchBlockRequest: () => FetchBlockRequest,
  FetchBlockResponse: () => FetchBlockResponse,
  FollowTipRequest: () => FollowTipRequest,
  FollowTipResponse: () => FollowTipResponse
});
import { FieldMask as FieldMask3, Message as Message4, proto3 as proto34, protoInt64 as protoInt643 } from "@bufbuild/protobuf";
var _BlockRef = class _BlockRef extends Message4 {
  constructor(data) {
    super();
    /**
     * Height or slot number (depending on the blockchain)
     *
     * @generated from field: uint64 index = 1;
     */
    this.index = protoInt643.zero;
    /**
     * Hash of the content of the block
     *
     * @generated from field: bytes hash = 2;
     */
    this.hash = new Uint8Array(0);
    proto34.util.initPartial(data, this);
  }
  static fromBinary(bytes, options) {
    return new _BlockRef().fromBinary(bytes, options);
  }
  static fromJson(jsonValue, options) {
    return new _BlockRef().fromJson(jsonValue, options);
  }
  static fromJsonString(jsonString, options) {
    return new _BlockRef().fromJsonString(jsonString, options);
  }
  static equals(a, b) {
    return proto34.util.equals(_BlockRef, a, b);
  }
};
_BlockRef.runtime = proto34;
_BlockRef.typeName = "utxorpc.v1alpha.sync.BlockRef";
_BlockRef.fields = proto34.util.newFieldList(() => [
  {
    no: 1,
    name: "index",
    kind: "scalar",
    T: 4
    /* ScalarType.UINT64 */
  },
  {
    no: 2,
    name: "hash",
    kind: "scalar",
    T: 12
    /* ScalarType.BYTES */
  }
]);
var BlockRef = _BlockRef;
var _AnyChainBlock = class _AnyChainBlock extends Message4 {
  constructor(data) {
    super();
    /**
     * Original bytes as defined by the chain
     *
     * @generated from field: bytes native_bytes = 1;
     */
    this.nativeBytes = new Uint8Array(0);
    /**
     * @generated from oneof utxorpc.v1alpha.sync.AnyChainBlock.chain
     */
    this.chain = { case: void 0 };
    proto34.util.initPartial(data, this);
  }
  static fromBinary(bytes, options) {
    return new _AnyChainBlock().fromBinary(bytes, options);
  }
  static fromJson(jsonValue, options) {
    return new _AnyChainBlock().fromJson(jsonValue, options);
  }
  static fromJsonString(jsonString, options) {
    return new _AnyChainBlock().fromJsonString(jsonString, options);
  }
  static equals(a, b) {
    return proto34.util.equals(_AnyChainBlock, a, b);
  }
};
_AnyChainBlock.runtime = proto34;
_AnyChainBlock.typeName = "utxorpc.v1alpha.sync.AnyChainBlock";
_AnyChainBlock.fields = proto34.util.newFieldList(() => [
  {
    no: 1,
    name: "native_bytes",
    kind: "scalar",
    T: 12
    /* ScalarType.BYTES */
  },
  { no: 2, name: "cardano", kind: "message", T: Block, oneof: "chain" }
]);
var AnyChainBlock = _AnyChainBlock;
var _FetchBlockRequest = class _FetchBlockRequest extends Message4 {
  constructor(data) {
    super();
    /**
     * List of block references.
     *
     * @generated from field: repeated utxorpc.v1alpha.sync.BlockRef ref = 1;
     */
    this.ref = [];
    proto34.util.initPartial(data, this);
  }
  static fromBinary(bytes, options) {
    return new _FetchBlockRequest().fromBinary(bytes, options);
  }
  static fromJson(jsonValue, options) {
    return new _FetchBlockRequest().fromJson(jsonValue, options);
  }
  static fromJsonString(jsonString, options) {
    return new _FetchBlockRequest().fromJsonString(jsonString, options);
  }
  static equals(a, b) {
    return proto34.util.equals(_FetchBlockRequest, a, b);
  }
};
_FetchBlockRequest.runtime = proto34;
_FetchBlockRequest.typeName = "utxorpc.v1alpha.sync.FetchBlockRequest";
_FetchBlockRequest.fields = proto34.util.newFieldList(() => [
  { no: 1, name: "ref", kind: "message", T: BlockRef, repeated: true },
  { no: 2, name: "field_mask", kind: "message", T: FieldMask3 }
]);
var FetchBlockRequest = _FetchBlockRequest;
var _FetchBlockResponse = class _FetchBlockResponse extends Message4 {
  constructor(data) {
    super();
    /**
     * List of fetched blocks.
     *
     * @generated from field: repeated utxorpc.v1alpha.sync.AnyChainBlock block = 1;
     */
    this.block = [];
    proto34.util.initPartial(data, this);
  }
  static fromBinary(bytes, options) {
    return new _FetchBlockResponse().fromBinary(bytes, options);
  }
  static fromJson(jsonValue, options) {
    return new _FetchBlockResponse().fromJson(jsonValue, options);
  }
  static fromJsonString(jsonString, options) {
    return new _FetchBlockResponse().fromJsonString(jsonString, options);
  }
  static equals(a, b) {
    return proto34.util.equals(_FetchBlockResponse, a, b);
  }
};
_FetchBlockResponse.runtime = proto34;
_FetchBlockResponse.typeName = "utxorpc.v1alpha.sync.FetchBlockResponse";
_FetchBlockResponse.fields = proto34.util.newFieldList(() => [
  { no: 1, name: "block", kind: "message", T: AnyChainBlock, repeated: true }
]);
var FetchBlockResponse = _FetchBlockResponse;
var _DumpHistoryRequest = class _DumpHistoryRequest extends Message4 {
  constructor(data) {
    super();
    /**
     * Maximum number of items to return.
     *
     * @generated from field: uint32 max_items = 3;
     */
    this.maxItems = 0;
    proto34.util.initPartial(data, this);
  }
  static fromBinary(bytes, options) {
    return new _DumpHistoryRequest().fromBinary(bytes, options);
  }
  static fromJson(jsonValue, options) {
    return new _DumpHistoryRequest().fromJson(jsonValue, options);
  }
  static fromJsonString(jsonString, options) {
    return new _DumpHistoryRequest().fromJsonString(jsonString, options);
  }
  static equals(a, b) {
    return proto34.util.equals(_DumpHistoryRequest, a, b);
  }
};
_DumpHistoryRequest.runtime = proto34;
_DumpHistoryRequest.typeName = "utxorpc.v1alpha.sync.DumpHistoryRequest";
_DumpHistoryRequest.fields = proto34.util.newFieldList(() => [
  { no: 2, name: "start_token", kind: "message", T: BlockRef },
  {
    no: 3,
    name: "max_items",
    kind: "scalar",
    T: 13
    /* ScalarType.UINT32 */
  },
  { no: 4, name: "field_mask", kind: "message", T: FieldMask3 }
]);
var DumpHistoryRequest = _DumpHistoryRequest;
var _DumpHistoryResponse = class _DumpHistoryResponse extends Message4 {
  constructor(data) {
    super();
    /**
     * List of blocks in the history.
     *
     * @generated from field: repeated utxorpc.v1alpha.sync.AnyChainBlock block = 1;
     */
    this.block = [];
    proto34.util.initPartial(data, this);
  }
  static fromBinary(bytes, options) {
    return new _DumpHistoryResponse().fromBinary(bytes, options);
  }
  static fromJson(jsonValue, options) {
    return new _DumpHistoryResponse().fromJson(jsonValue, options);
  }
  static fromJsonString(jsonString, options) {
    return new _DumpHistoryResponse().fromJsonString(jsonString, options);
  }
  static equals(a, b) {
    return proto34.util.equals(_DumpHistoryResponse, a, b);
  }
};
_DumpHistoryResponse.runtime = proto34;
_DumpHistoryResponse.typeName = "utxorpc.v1alpha.sync.DumpHistoryResponse";
_DumpHistoryResponse.fields = proto34.util.newFieldList(() => [
  { no: 1, name: "block", kind: "message", T: AnyChainBlock, repeated: true },
  { no: 2, name: "next_token", kind: "message", T: BlockRef }
]);
var DumpHistoryResponse = _DumpHistoryResponse;
var _FollowTipRequest = class _FollowTipRequest extends Message4 {
  constructor(data) {
    super();
    /**
     * List of block references to find the intersection.
     *
     * @generated from field: repeated utxorpc.v1alpha.sync.BlockRef intersect = 1;
     */
    this.intersect = [];
    proto34.util.initPartial(data, this);
  }
  static fromBinary(bytes, options) {
    return new _FollowTipRequest().fromBinary(bytes, options);
  }
  static fromJson(jsonValue, options) {
    return new _FollowTipRequest().fromJson(jsonValue, options);
  }
  static fromJsonString(jsonString, options) {
    return new _FollowTipRequest().fromJsonString(jsonString, options);
  }
  static equals(a, b) {
    return proto34.util.equals(_FollowTipRequest, a, b);
  }
};
_FollowTipRequest.runtime = proto34;
_FollowTipRequest.typeName = "utxorpc.v1alpha.sync.FollowTipRequest";
_FollowTipRequest.fields = proto34.util.newFieldList(() => [
  { no: 1, name: "intersect", kind: "message", T: BlockRef, repeated: true },
  { no: 2, name: "field_mask", kind: "message", T: FieldMask3 }
]);
var FollowTipRequest = _FollowTipRequest;
var _FollowTipResponse = class _FollowTipResponse extends Message4 {
  constructor(data) {
    super();
    /**
     * @generated from oneof utxorpc.v1alpha.sync.FollowTipResponse.action
     */
    this.action = { case: void 0 };
    proto34.util.initPartial(data, this);
  }
  static fromBinary(bytes, options) {
    return new _FollowTipResponse().fromBinary(bytes, options);
  }
  static fromJson(jsonValue, options) {
    return new _FollowTipResponse().fromJson(jsonValue, options);
  }
  static fromJsonString(jsonString, options) {
    return new _FollowTipResponse().fromJsonString(jsonString, options);
  }
  static equals(a, b) {
    return proto34.util.equals(_FollowTipResponse, a, b);
  }
};
_FollowTipResponse.runtime = proto34;
_FollowTipResponse.typeName = "utxorpc.v1alpha.sync.FollowTipResponse";
_FollowTipResponse.fields = proto34.util.newFieldList(() => [
  { no: 1, name: "apply", kind: "message", T: AnyChainBlock, oneof: "action" },
  { no: 2, name: "undo", kind: "message", T: AnyChainBlock, oneof: "action" },
  { no: 3, name: "reset", kind: "message", T: BlockRef, oneof: "action" }
]);
var FollowTipResponse = _FollowTipResponse;

// src/utxorpc/v1alpha/sync/sync_connect.ts
var sync_connect_exports = {};
__export(sync_connect_exports, {
  SyncService: () => SyncService
});
import { MethodKind as MethodKind3 } from "@bufbuild/protobuf";
var SyncService = {
  typeName: "utxorpc.v1alpha.sync.SyncService",
  methods: {
    /**
     * Fetch a block by its reference.
     *
     * @generated from rpc utxorpc.v1alpha.sync.SyncService.FetchBlock
     */
    fetchBlock: {
      name: "FetchBlock",
      I: FetchBlockRequest,
      O: FetchBlockResponse,
      kind: MethodKind3.Unary
    },
    /**
     * Dump the block history.
     *
     * @generated from rpc utxorpc.v1alpha.sync.SyncService.DumpHistory
     */
    dumpHistory: {
      name: "DumpHistory",
      I: DumpHistoryRequest,
      O: DumpHistoryResponse,
      kind: MethodKind3.Unary
    },
    /**
     * Follow the tip of the blockchain.
     *
     * @generated from rpc utxorpc.v1alpha.sync.SyncService.FollowTip
     */
    followTip: {
      name: "FollowTip",
      I: FollowTipRequest,
      O: FollowTipResponse,
      kind: MethodKind3.ServerStreaming
    }
  }
};

// src/utxorpc/v1alpha/watch/watch_pb.ts
var watch_pb_exports = {};
__export(watch_pb_exports, {
  AnyChainTx: () => AnyChainTx2,
  AnyChainTxPattern: () => AnyChainTxPattern2,
  BlockRef: () => BlockRef2,
  TxPredicate: () => TxPredicate2,
  WatchTxRequest: () => WatchTxRequest,
  WatchTxResponse: () => WatchTxResponse
});
import { FieldMask as FieldMask4, Message as Message5, proto3 as proto35, protoInt64 as protoInt644 } from "@bufbuild/protobuf";
var _BlockRef2 = class _BlockRef2 extends Message5 {
  constructor(data) {
    super();
    /**
     * Height or slot number (depending on the blockchain)
     *
     * @generated from field: uint64 index = 1;
     */
    this.index = protoInt644.zero;
    /**
     * Hash of the content of the block
     *
     * @generated from field: bytes hash = 2;
     */
    this.hash = new Uint8Array(0);
    proto35.util.initPartial(data, this);
  }
  static fromBinary(bytes, options) {
    return new _BlockRef2().fromBinary(bytes, options);
  }
  static fromJson(jsonValue, options) {
    return new _BlockRef2().fromJson(jsonValue, options);
  }
  static fromJsonString(jsonString, options) {
    return new _BlockRef2().fromJsonString(jsonString, options);
  }
  static equals(a, b) {
    return proto35.util.equals(_BlockRef2, a, b);
  }
};
_BlockRef2.runtime = proto35;
_BlockRef2.typeName = "utxorpc.v1alpha.watch.BlockRef";
_BlockRef2.fields = proto35.util.newFieldList(() => [
  {
    no: 1,
    name: "index",
    kind: "scalar",
    T: 4
    /* ScalarType.UINT64 */
  },
  {
    no: 2,
    name: "hash",
    kind: "scalar",
    T: 12
    /* ScalarType.BYTES */
  }
]);
var BlockRef2 = _BlockRef2;
var _AnyChainTxPattern2 = class _AnyChainTxPattern2 extends Message5 {
  constructor(data) {
    super();
    /**
     * @generated from oneof utxorpc.v1alpha.watch.AnyChainTxPattern.chain
     */
    this.chain = { case: void 0 };
    proto35.util.initPartial(data, this);
  }
  static fromBinary(bytes, options) {
    return new _AnyChainTxPattern2().fromBinary(bytes, options);
  }
  static fromJson(jsonValue, options) {
    return new _AnyChainTxPattern2().fromJson(jsonValue, options);
  }
  static fromJsonString(jsonString, options) {
    return new _AnyChainTxPattern2().fromJsonString(jsonString, options);
  }
  static equals(a, b) {
    return proto35.util.equals(_AnyChainTxPattern2, a, b);
  }
};
_AnyChainTxPattern2.runtime = proto35;
_AnyChainTxPattern2.typeName = "utxorpc.v1alpha.watch.AnyChainTxPattern";
_AnyChainTxPattern2.fields = proto35.util.newFieldList(() => [
  { no: 1, name: "cardano", kind: "message", T: TxPattern, oneof: "chain" }
]);
var AnyChainTxPattern2 = _AnyChainTxPattern2;
var _TxPredicate2 = class _TxPredicate2 extends Message5 {
  constructor(data) {
    super();
    /**
     * Predicate is true if tx doesn't exhibit pattern.
     *
     * @generated from field: repeated utxorpc.v1alpha.watch.TxPredicate not = 2;
     */
    this.not = [];
    /**
     * Predicate is true if tx exhibits all of the patterns.
     *
     * @generated from field: repeated utxorpc.v1alpha.watch.TxPredicate all_of = 3;
     */
    this.allOf = [];
    /**
     * Predicate is true if tx exhibits any of the patterns.
     *
     * @generated from field: repeated utxorpc.v1alpha.watch.TxPredicate any_of = 4;
     */
    this.anyOf = [];
    proto35.util.initPartial(data, this);
  }
  static fromBinary(bytes, options) {
    return new _TxPredicate2().fromBinary(bytes, options);
  }
  static fromJson(jsonValue, options) {
    return new _TxPredicate2().fromJson(jsonValue, options);
  }
  static fromJsonString(jsonString, options) {
    return new _TxPredicate2().fromJsonString(jsonString, options);
  }
  static equals(a, b) {
    return proto35.util.equals(_TxPredicate2, a, b);
  }
};
_TxPredicate2.runtime = proto35;
_TxPredicate2.typeName = "utxorpc.v1alpha.watch.TxPredicate";
_TxPredicate2.fields = proto35.util.newFieldList(() => [
  { no: 1, name: "match", kind: "message", T: AnyChainTxPattern2 },
  { no: 2, name: "not", kind: "message", T: _TxPredicate2, repeated: true },
  { no: 3, name: "all_of", kind: "message", T: _TxPredicate2, repeated: true },
  { no: 4, name: "any_of", kind: "message", T: _TxPredicate2, repeated: true }
]);
var TxPredicate2 = _TxPredicate2;
var _WatchTxRequest = class _WatchTxRequest extends Message5 {
  constructor(data) {
    super();
    /**
     * List of block references to find the intersection.
     *
     * @generated from field: repeated utxorpc.v1alpha.watch.BlockRef intersect = 3;
     */
    this.intersect = [];
    proto35.util.initPartial(data, this);
  }
  static fromBinary(bytes, options) {
    return new _WatchTxRequest().fromBinary(bytes, options);
  }
  static fromJson(jsonValue, options) {
    return new _WatchTxRequest().fromJson(jsonValue, options);
  }
  static fromJsonString(jsonString, options) {
    return new _WatchTxRequest().fromJsonString(jsonString, options);
  }
  static equals(a, b) {
    return proto35.util.equals(_WatchTxRequest, a, b);
  }
};
_WatchTxRequest.runtime = proto35;
_WatchTxRequest.typeName = "utxorpc.v1alpha.watch.WatchTxRequest";
_WatchTxRequest.fields = proto35.util.newFieldList(() => [
  { no: 1, name: "predicate", kind: "message", T: TxPredicate2 },
  { no: 2, name: "field_mask", kind: "message", T: FieldMask4 },
  { no: 3, name: "intersect", kind: "message", T: BlockRef2, repeated: true }
]);
var WatchTxRequest = _WatchTxRequest;
var _AnyChainTx2 = class _AnyChainTx2 extends Message5 {
  constructor(data) {
    super();
    /**
     * @generated from oneof utxorpc.v1alpha.watch.AnyChainTx.chain
     */
    this.chain = { case: void 0 };
    proto35.util.initPartial(data, this);
  }
  static fromBinary(bytes, options) {
    return new _AnyChainTx2().fromBinary(bytes, options);
  }
  static fromJson(jsonValue, options) {
    return new _AnyChainTx2().fromJson(jsonValue, options);
  }
  static fromJsonString(jsonString, options) {
    return new _AnyChainTx2().fromJsonString(jsonString, options);
  }
  static equals(a, b) {
    return proto35.util.equals(_AnyChainTx2, a, b);
  }
};
_AnyChainTx2.runtime = proto35;
_AnyChainTx2.typeName = "utxorpc.v1alpha.watch.AnyChainTx";
_AnyChainTx2.fields = proto35.util.newFieldList(() => [
  { no: 1, name: "cardano", kind: "message", T: Tx, oneof: "chain" }
]);
var AnyChainTx2 = _AnyChainTx2;
var _WatchTxResponse = class _WatchTxResponse extends Message5 {
  constructor(data) {
    super();
    /**
     * @generated from oneof utxorpc.v1alpha.watch.WatchTxResponse.action
     */
    this.action = { case: void 0 };
    proto35.util.initPartial(data, this);
  }
  static fromBinary(bytes, options) {
    return new _WatchTxResponse().fromBinary(bytes, options);
  }
  static fromJson(jsonValue, options) {
    return new _WatchTxResponse().fromJson(jsonValue, options);
  }
  static fromJsonString(jsonString, options) {
    return new _WatchTxResponse().fromJsonString(jsonString, options);
  }
  static equals(a, b) {
    return proto35.util.equals(_WatchTxResponse, a, b);
  }
};
_WatchTxResponse.runtime = proto35;
_WatchTxResponse.typeName = "utxorpc.v1alpha.watch.WatchTxResponse";
_WatchTxResponse.fields = proto35.util.newFieldList(() => [
  { no: 1, name: "apply", kind: "message", T: AnyChainTx2, oneof: "action" },
  { no: 2, name: "undo", kind: "message", T: AnyChainTx2, oneof: "action" }
]);
var WatchTxResponse = _WatchTxResponse;

// src/utxorpc/v1alpha/watch/watch_connect.ts
var watch_connect_exports = {};
__export(watch_connect_exports, {
  WatchService: () => WatchService
});
import { MethodKind as MethodKind4 } from "@bufbuild/protobuf";
var WatchService = {
  typeName: "utxorpc.v1alpha.watch.WatchService",
  methods: {
    /**
     * Stream transactions from the chain matching the specified predicates.
     *
     * @generated from rpc utxorpc.v1alpha.watch.WatchService.WatchTx
     */
    watchTx: {
      name: "WatchTx",
      I: WatchTxRequest,
      O: WatchTxResponse,
      kind: MethodKind4.ServerStreaming
    }
  }
};
export {
  cardano_pb_exports as cardano,
  query_pb_exports as query,
  query_connect_exports as queryConnect,
  submit_pb_exports as submit,
  submit_connect_exports as submitConnect,
  sync_pb_exports as sync,
  sync_connect_exports as syncConnect,
  watch_pb_exports as watch,
  watch_connect_exports as watchConnect
};
