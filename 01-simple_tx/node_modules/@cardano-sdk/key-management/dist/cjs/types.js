"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.TxInId = exports.CommunicationType = exports.DeviceType = exports.AddressType = exports.KeyPurpose = exports.KeyRole = exports.KeyAgentType = exports.Cip1852PathLevelIndexes = exports.CardanoKeyConst = void 0;
var CardanoKeyConst;
(function (CardanoKeyConst) {
    CardanoKeyConst[CardanoKeyConst["PURPOSE"] = 1852] = "PURPOSE";
    CardanoKeyConst[CardanoKeyConst["COIN_TYPE"] = 1815] = "COIN_TYPE";
})(CardanoKeyConst = exports.CardanoKeyConst || (exports.CardanoKeyConst = {}));
var Cip1852PathLevelIndexes;
(function (Cip1852PathLevelIndexes) {
    Cip1852PathLevelIndexes[Cip1852PathLevelIndexes["PURPOSE"] = 0] = "PURPOSE";
    Cip1852PathLevelIndexes[Cip1852PathLevelIndexes["COIN_TYPE"] = 1] = "COIN_TYPE";
    Cip1852PathLevelIndexes[Cip1852PathLevelIndexes["ACCOUNT"] = 2] = "ACCOUNT";
    Cip1852PathLevelIndexes[Cip1852PathLevelIndexes["ROLE"] = 3] = "ROLE";
    Cip1852PathLevelIndexes[Cip1852PathLevelIndexes["INDEX"] = 4] = "INDEX";
})(Cip1852PathLevelIndexes = exports.Cip1852PathLevelIndexes || (exports.Cip1852PathLevelIndexes = {}));
var KeyAgentType;
(function (KeyAgentType) {
    KeyAgentType["InMemory"] = "InMemory";
    KeyAgentType["Ledger"] = "Ledger";
    KeyAgentType["Trezor"] = "Trezor";
})(KeyAgentType = exports.KeyAgentType || (exports.KeyAgentType = {}));
var KeyRole;
(function (KeyRole) {
    KeyRole[KeyRole["External"] = 0] = "External";
    KeyRole[KeyRole["Internal"] = 1] = "Internal";
    KeyRole[KeyRole["Stake"] = 2] = "Stake";
    KeyRole[KeyRole["DRep"] = 3] = "DRep";
})(KeyRole = exports.KeyRole || (exports.KeyRole = {}));
var KeyPurpose;
(function (KeyPurpose) {
    KeyPurpose[KeyPurpose["STANDARD"] = 1852] = "STANDARD";
    KeyPurpose[KeyPurpose["MULTI_SIG"] = 1854] = "MULTI_SIG";
})(KeyPurpose = exports.KeyPurpose || (exports.KeyPurpose = {}));
var AddressType;
(function (AddressType) {
    AddressType[AddressType["Internal"] = 1] = "Internal";
    AddressType[AddressType["External"] = 0] = "External";
})(AddressType = exports.AddressType || (exports.AddressType = {}));
var DeviceType;
(function (DeviceType) {
    DeviceType["Ledger"] = "Ledger";
})(DeviceType = exports.DeviceType || (exports.DeviceType = {}));
var CommunicationType;
(function (CommunicationType) {
    CommunicationType["Web"] = "web";
    CommunicationType["Node"] = "node";
})(CommunicationType = exports.CommunicationType || (exports.CommunicationType = {}));
const TxInId = ({ txId, index }) => `${txId}_${index}`;
exports.TxInId = TxInId;
//# sourceMappingURL=types.js.map