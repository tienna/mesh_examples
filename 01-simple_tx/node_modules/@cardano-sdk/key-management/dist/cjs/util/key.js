"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.stakeKeyPathFromGroupedAddress = exports.paymentKeyPathFromGroupedAddress = exports.accountKeyDerivationPathToBip32Path = exports.deriveAccountPrivateKey = exports.toEd25519KeyPair = exports.DREP_KEY_DERIVATION_PATH = exports.STAKE_KEY_DERIVATION_PATH = exports.harden = void 0;
const types_1 = require("../types");
const harden = (num) => 2147483648 + num;
exports.harden = harden;
exports.STAKE_KEY_DERIVATION_PATH = {
    index: 0,
    role: types_1.KeyRole.Stake
};
exports.DREP_KEY_DERIVATION_PATH = {
    index: 0,
    role: types_1.KeyRole.DRep
};
const toEd25519KeyPair = async (bip32KeyPair, provider) => ({
    skey: await provider.getRawPrivateKey(bip32KeyPair.skey),
    vkey: await provider.getRawPublicKey(bip32KeyPair.vkey)
});
exports.toEd25519KeyPair = toEd25519KeyPair;
const deriveAccountPrivateKey = async ({ rootPrivateKey, accountIndex, bip32Ed25519, purpose = types_1.KeyPurpose.STANDARD }) => await bip32Ed25519.derivePrivateKey(rootPrivateKey, [
    (0, exports.harden)(purpose),
    (0, exports.harden)(types_1.CardanoKeyConst.COIN_TYPE),
    (0, exports.harden)(accountIndex)
]);
exports.deriveAccountPrivateKey = deriveAccountPrivateKey;
const accountKeyDerivationPathToBip32Path = (accountIndex, { index, role }) => [(0, exports.harden)(types_1.CardanoKeyConst.PURPOSE), (0, exports.harden)(types_1.CardanoKeyConst.COIN_TYPE), (0, exports.harden)(accountIndex), role, index];
exports.accountKeyDerivationPathToBip32Path = accountKeyDerivationPathToBip32Path;
const paymentKeyPathFromGroupedAddress = (address) => [
    (0, exports.harden)(types_1.CardanoKeyConst.PURPOSE),
    (0, exports.harden)(types_1.CardanoKeyConst.COIN_TYPE),
    (0, exports.harden)(address.accountIndex),
    address.type,
    address.index
];
exports.paymentKeyPathFromGroupedAddress = paymentKeyPathFromGroupedAddress;
const stakeKeyPathFromGroupedAddress = (address) => {
    if (!address?.stakeKeyDerivationPath)
        return null;
    return [
        (0, exports.harden)(types_1.CardanoKeyConst.PURPOSE),
        (0, exports.harden)(types_1.CardanoKeyConst.COIN_TYPE),
        (0, exports.harden)(address.accountIndex),
        address.stakeKeyDerivationPath.role,
        address.stakeKeyDerivationPath.index
    ];
};
exports.stakeKeyPathFromGroupedAddress = stakeKeyPathFromGroupedAddress;
//# sourceMappingURL=key.js.map