import * as Crypto from '@cardano-sdk/crypto';
import { AccountAddressDerivationPath, AccountKeyDerivationPath, AsyncKeyAgent, GroupedAddress } from './types.js';
import { Cardano } from '@cardano-sdk/core';
declare type Bip32AccountProps = {
    extendedAccountPublicKey: Crypto.Bip32PublicKeyHex;
    accountIndex: number;
    chainId: Cardano.ChainId;
};
export declare class Bip32Account {
    readonly extendedAccountPublicKey: Crypto.Bip32PublicKey;
    readonly chainId: Cardano.ChainId;
    readonly accountIndex: number;
    constructor({ extendedAccountPublicKey, chainId, accountIndex }: Bip32AccountProps);
    derivePublicKey(derivationPath: AccountKeyDerivationPath): Promise<Crypto.Ed25519PublicKey>;
    deriveAddress(paymentKeyDerivationPath: AccountAddressDerivationPath, stakeKeyDerivationIndex: number): Promise<GroupedAddress>;
    static fromAsyncKeyAgent(keyAgent: AsyncKeyAgent): Promise<Bip32Account>;
}
export {};
//# sourceMappingURL=Bip32Account.d.ts.map