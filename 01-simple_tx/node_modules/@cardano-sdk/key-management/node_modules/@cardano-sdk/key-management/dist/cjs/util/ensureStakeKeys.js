"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.ensureStakeKeys = void 0;
const types_1 = require("../types");
const ensureStakeKeys = async ({ bip32Account, knownAddresses, count, logger, paymentKeyIndex: index = 0 }) => {
    const stakeKeys = new Map(knownAddresses
        .filter(({ stakeKeyDerivationPath }) => stakeKeyDerivationPath?.role === types_1.KeyRole.Stake && stakeKeyDerivationPath?.index !== undefined)
        .map(({ rewardAccount, stakeKeyDerivationPath }) => [stakeKeyDerivationPath.index, rewardAccount]));
    logger.debug(`Stake keys requested: ${count}; got ${stakeKeys.size}`);
    const newAddresses = [];
    for (let stakeKeyIdx = 0; stakeKeys.size < count; stakeKeyIdx++) {
        if (!stakeKeys.has(stakeKeyIdx)) {
            const address = await bip32Account.deriveAddress({ index, type: types_1.AddressType.External }, stakeKeyIdx);
            newAddresses.push(address);
            logger.debug(`No derivation with stake key index ${stakeKeyIdx} exists. Derived a new stake key ${address.rewardAccount}.`);
            stakeKeys.set(stakeKeyIdx, address.rewardAccount);
        }
    }
    return {
        newAddresses,
        rewardAccounts: [...stakeKeys.values()]
    };
};
exports.ensureStakeKeys = ensureStakeKeys;
//# sourceMappingURL=ensureStakeKeys.js.map