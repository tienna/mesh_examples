import * as AssetId from '../assetId.js';
import { Cardano, Seconds } from '@cardano-sdk/core';
import { resolvedHandle } from './mockHandleProvider.js';
export const rewardAccount = Cardano.RewardAccount('stake_test1up7pvfq8zn4quy45r2g572290p9vf99mr9tn7r9xrgy2l2qdsf58d');
export const stakeKeyHash = Cardano.RewardAccount.toHash(rewardAccount);
export const stakeCredential = {
    hash: stakeKeyHash,
    type: Cardano.CredentialType.KeyHash
};
export const rewardAccountBalance = 33333n;
export const handlePolicyId = resolvedHandle.policyId;
export const handle = resolvedHandle.handle;
export const handleAssetId = Cardano.AssetId.fromParts(handlePolicyId, Cardano.AssetName(Buffer.from(handle).toString('hex')));
export const handleAssetName = Cardano.AssetName(Buffer.from(handle, 'utf8').toString('hex'));
export const handleFingerprint = Cardano.AssetFingerprint('asset1f0azzptnr8dghzjh7egqvdjmt33e3lz5uy59th');
export const ledgerTip = {
    blockNo: Cardano.BlockNo(1111111),
    hash: Cardano.BlockId('10d64cc11e9b20e15b6c46aa7b1fed11246f437e62225655a30ea47bf8cc22d0'),
    slot: Cardano.Slot(37834496)
};
export const currentEpoch = {
    number: 157
};
export const protocolParameters = {
    coinsPerUtxoByte: 4310,
    maxCollateralInputs: 1,
    maxExecutionUnitsPerTransaction: {
        memory: 100,
        steps: 200
    },
    maxTxSize: 16384,
    maxValueSize: 1000,
    minFeeCoefficient: 44,
    minFeeConstant: 155381,
    minPoolCost: 340000000,
    poolDeposit: 500000000,
    prices: { memory: 0.0577, steps: 0.00000721 },
    protocolVersion: { major: 5, minor: 0 },
    stakeKeyDeposit: 2000000
};
export const epochRewards = [
    {
        epoch: Cardano.EpochNo(currentEpoch.number - 3),
        poolId: Cardano.PoolId('pool1h8yl5mkyrfmfls2x9fu9mls3ry6egnw4q6efg34xr37zc243gkf'),
        rewards: 10000n
    },
    {
        epoch: Cardano.EpochNo(currentEpoch.number - 2),
        poolId: Cardano.PoolId('pool1h8yl5mkyrfmfls2x9fu9mls3ry6egnw4q6efg34xr37zc243gkf'),
        rewards: 11000n
    }
];
export const rewardsHistory = new Map([[rewardAccount, epochRewards]]);
export const genesisParameters = {
    activeSlotsCoefficient: 0.05,
    epochLength: 432000,
    maxKesEvolutions: 62,
    maxLovelaceSupply: 45000000000000000n,
    networkId: 0,
    networkMagic: 764824073,
    securityParameter: 2160,
    slotLength: Seconds(1),
    slotsPerKesPeriod: 129600,
    systemStart: new Date(1506203091000),
    updateQuorum: 5
};
export const rewardsHistory2 = new Map([
    [
        rewardAccount,
        [
            {
                epoch: Cardano.EpochNo(currentEpoch.number - 4),
                poolId: Cardano.PoolId('pool1h8yl5mkyrfmfls2x9fu9mls3ry6egnw4q6efg34xr37zc243gkf'),
                rewards: 10000n
            },
            ...epochRewards
        ]
    ]
]);
export const rewardAccountBalance2 = rewardAccountBalance + 1n;
export const utxosWithLowCoins = [
    [
        {
            address: Cardano.PaymentAddress('addr_test1qzs0umu0s2ammmpw0hea0w2crtcymdjvvlqngpgqy76gpfnuzcjqw982pcftgx53fu5527z2cj2tkx2h8ux2vxsg475qp3y3vz'),
            index: 1,
            txId: Cardano.TransactionId('c7c0973c6bbf1a04a9f306da7814b4fa564db649bf48b0bd93c273bd03143547')
        },
        {
            address: Cardano.PaymentAddress('addr_test1qq585l3hyxgj3nas2v3xymd23vvartfhceme6gv98aaeg9muzcjqw982pcftgx53fu5527z2cj2tkx2h8ux2vxsg475q2g7k3g'),
            value: {
                coins: 3289566n
            }
        }
    ],
    [
        {
            address: Cardano.PaymentAddress('addr_test1qzs0umu0s2ammmpw0hea0w2crtcymdjvvlqngpgqy76gpfnuzcjqw982pcftgx53fu5527z2cj2tkx2h8ux2vxsg475qp3y3vz'),
            index: 2,
            txId: Cardano.TransactionId('c7c0973c6bbf1a04a9f306da7814b4fa564db649bf48b0bd93c273bd03143547')
        },
        {
            address: Cardano.PaymentAddress('addr_test1qq585l3hyxgj3nas2v3xymd23vvartfhceme6gv98aaeg9muzcjqw982pcftgx53fu5527z2cj2tkx2h8ux2vxsg475q2g7k3g'),
            value: {
                coins: 1000000n
            }
        }
    ]
];
export const utxosWithLowCoinsAndMixedAssets = [
    ...utxosWithLowCoins,
    [
        {
            address: Cardano.PaymentAddress('addr_test1qzs0umu0s2ammmpw0hea0w2crtcymdjvvlqngpgqy76gpfnuzcjqw982pcftgx53fu5527z2cj2tkx2h8ux2vxsg475qp3y3vz'),
            index: 3,
            txId: Cardano.TransactionId('c7c0973c6bbf1a04a9f306da7814b4fa564db649bf48b0bd93c273bd03143547')
        },
        {
            address: Cardano.PaymentAddress('addr_test1qq585l3hyxgj3nas2v3xymd23vvartfhceme6gv98aaeg9muzcjqw982pcftgx53fu5527z2cj2tkx2h8ux2vxsg475q2g7k3g'),
            value: {
                assets: new Map([
                    [AssetId.PXL, 5n],
                    [AssetId.TSLA, 10n]
                ]),
                coins: 4027026465n
            }
        }
    ]
];
export const sortedUtxosWithLowCoins = [utxosWithLowCoins[1], utxosWithLowCoins[0]];
//# sourceMappingURL=mockData.js.map