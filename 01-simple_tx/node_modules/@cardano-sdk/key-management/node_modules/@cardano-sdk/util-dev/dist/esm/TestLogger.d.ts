/// <reference types="node" />
declare const logLevels: {
    debug: number;
    error: number;
    fatal: number;
    info: number;
    trace: number;
    warn: number;
};
declare type LogLevel = keyof typeof logLevels;
export declare type LogFunction = (...args: unknown[]) => void;
export declare type LoggedMessage = {
    level: LogLevel;
    message: unknown[];
};
export declare type Logger = {
    [l in LogLevel]: LogFunction;
};
export declare type TestLogger = Logger & {
    messages: LoggedMessage[];
    reset: () => void;
};
declare type TestStream = {
    columns?: number;
    isTTY?: boolean;
    write: Function;
};
export interface TestLoggerOptions {
    env?: NodeJS.ProcessEnv;
    record?: boolean;
    stream?: TestStream;
}
export declare const createLogger: (options?: TestLoggerOptions) => TestLogger;
export declare const logger: TestLogger;
export {};
//# sourceMappingURL=TestLogger.d.ts.map