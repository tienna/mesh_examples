"use strict";
var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    var desc = Object.getOwnPropertyDescriptor(m, k);
    if (!desc || ("get" in desc ? !m.__esModule : desc.writable || desc.configurable)) {
      desc = { enumerable: true, get: function() { return m[k]; } };
    }
    Object.defineProperty(o, k2, desc);
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {
    Object.defineProperty(o, "default", { enumerable: true, value: v });
}) : function(o, v) {
    o["default"] = v;
});
var __importStar = (this && this.__importStar) || function (mod) {
    if (mod && mod.__esModule) return mod;
    var result = {};
    if (mod != null) for (var k in mod) if (k !== "default" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);
    __setModuleDefault(result, mod);
    return result;
};
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.mockUtxoProvider2 = exports.mockUtxoProvider = exports.utxo2 = exports.utxo = void 0;
const AssetId = __importStar(require("../assetId"));
const core_1 = require("@cardano-sdk/core");
const mockData_1 = require("./mockData");
const mockHandleProvider_1 = require("./mockHandleProvider");
const delay_1 = __importDefault(require("delay"));
exports.utxo = [
    [
        {
            address: core_1.Cardano.PaymentAddress('addr_test1qq585l3hyxgj3nas2v3xymd23vvartfhceme6gv98aaeg9muzcjqw982pcftgx53fu5527z2cj2tkx2h8ux2vxsg475q2g7k3g'),
            index: 1,
            txId: core_1.Cardano.TransactionId('bb217abaca60fc0ca68c1555eca6a96d2478547818ae76ce6836133f3cc546e0')
        },
        {
            address: core_1.Cardano.PaymentAddress('addr_test1qq585l3hyxgj3nas2v3xymd23vvartfhceme6gv98aaeg9muzcjqw982pcftgx53fu5527z2cj2tkx2h8ux2vxsg475q2g7k3g'),
            value: {
                assets: new Map([
                    [AssetId.PXL, 5n],
                    [AssetId.TSLA, 10n]
                ]),
                coins: 4027026465n
            }
        }
    ],
    [
        {
            address: core_1.Cardano.PaymentAddress('addr_test1qzs0umu0s2ammmpw0hea0w2crtcymdjvvlqngpgqy76gpfnuzcjqw982pcftgx53fu5527z2cj2tkx2h8ux2vxsg475qp3y3vz'),
            index: 0,
            txId: core_1.Cardano.TransactionId('c7c0973c6bbf1a04a9f306da7814b4fa564db649bf48b0bd93c273bd03143547')
        },
        {
            address: core_1.Cardano.PaymentAddress('addr_test1qq585l3hyxgj3nas2v3xymd23vvartfhceme6gv98aaeg9muzcjqw982pcftgx53fu5527z2cj2tkx2h8ux2vxsg475q2g7k3g'),
            value: {
                assets: new Map([
                    [AssetId.TSLA, 15n],
                    [AssetId.PXL, 20n]
                ]),
                coins: 3289566n
            }
        }
    ],
    [
        {
            address: core_1.Cardano.PaymentAddress('addr_test1qzs0umu0s2ammmpw0hea0w2crtcymdjvvlqngpgqy76gpfnuzcjqw982pcftgx53fu5527z2cj2tkx2h8ux2vxsg475qp3y3vz'),
            index: 1,
            txId: core_1.Cardano.TransactionId('c7c0973c6bbf1a04a9f306da7814b4fa564db649bf48b0bd93c273bd03143547')
        },
        {
            address: core_1.Cardano.PaymentAddress('addr_test1qq585l3hyxgj3nas2v3xymd23vvartfhceme6gv98aaeg9muzcjqw982pcftgx53fu5527z2cj2tkx2h8ux2vxsg475q2g7k3g'),
            value: {
                coins: 3289566n
            }
        }
    ],
    [
        {
            address: core_1.Cardano.PaymentAddress('addr_test1qzs0umu0s2ammmpw0hea0w2crtcymdjvvlqngpgqy76gpfnuzcjqw982pcftgx53fu5527z2cj2tkx2h8ux2vxsg475qp3y3vz'),
            index: 2,
            txId: core_1.Cardano.TransactionId('c7c0973c6bbf1a04a9f306da7814b4fa564db649bf48b0bd93c273bd03143547')
        },
        {
            address: core_1.Cardano.PaymentAddress('addr_test1qq585l3hyxgj3nas2v3xymd23vvartfhceme6gv98aaeg9muzcjqw982pcftgx53fu5527z2cj2tkx2h8ux2vxsg475q2g7k3g'),
            value: {
                coins: 1000000n
            }
        }
    ],
    [
        {
            address: core_1.Cardano.PaymentAddress('addr_test1qzs0umu0s2ammmpw0hea0w2crtcymdjvvlqngpgqy76gpfnuzcjqw982pcftgx53fu5527z2cj2tkx2h8ux2vxsg475qp3y3vz'),
            index: 3,
            txId: core_1.Cardano.TransactionId('c7c0973c6bbf1a04a9f306da7814b4fa564db649bf48b0bd93c273bd03143547')
        },
        {
            address: core_1.Cardano.PaymentAddress('addr_test1qq585l3hyxgj3nas2v3xymd23vvartfhceme6gv98aaeg9muzcjqw982pcftgx53fu5527z2cj2tkx2h8ux2vxsg475q2g7k3g'),
            value: {
                coins: 5289566n
            }
        }
    ],
    [
        {
            address: core_1.Cardano.PaymentAddress('addr_test1qq585l3hyxgj3nas2v3xymd23vvartfhceme6gv98aaeg9muzcjqw982pcftgx53fu5527z2cj2tkx2h8ux2vxsg475q2g7k3g'),
            index: 2,
            txId: core_1.Cardano.TransactionId('ea1517b8c36fea3148df9aa1f49bbee66ff59a5092331a67bd8b3c427e1d79d7')
        },
        {
            address: mockHandleProvider_1.resolvedHandle.cardanoAddress,
            value: {
                assets: new Map([[mockData_1.handleAssetId, 1n]]),
                coins: 9825963n
            }
        }
    ]
];
exports.utxo2 = exports.utxo.slice(1);
const mockUtxoProvider = ({ address, utxoSet = exports.utxo } = {}) => ({
    healthCheck: jest.fn().mockResolvedValue({ ok: true }),
    utxoByAddresses: jest
        .fn()
        .mockResolvedValue(address ? utxoSet.map(([txIn, txOut]) => [txIn, { ...txOut, address }]) : utxoSet)
});
exports.mockUtxoProvider = mockUtxoProvider;
const mockUtxoProvider2 = (delayMs) => {
    const delayedJestFn = (resolvedValue) => jest.fn().mockImplementation(() => (0, delay_1.default)(delayMs).then(() => resolvedValue));
    return {
        healthCheck: delayedJestFn(true),
        utxoByAddresses: delayedJestFn(exports.utxo2)
    };
};
exports.mockUtxoProvider2 = mockUtxoProvider2;
//# sourceMappingURL=mockUtxoProvider.js.map