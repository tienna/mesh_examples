"use strict";
var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    var desc = Object.getOwnPropertyDescriptor(m, k);
    if (!desc || ("get" in desc ? !m.__esModule : desc.writable || desc.configurable)) {
      desc = { enumerable: true, get: function() { return m[k]; } };
    }
    Object.defineProperty(o, k2, desc);
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {
    Object.defineProperty(o, "default", { enumerable: true, value: v });
}) : function(o, v) {
    o["default"] = v;
});
var __importStar = (this && this.__importStar) || function (mod) {
    if (mod && mod.__esModule) return mod;
    var result = {};
    if (mod != null) for (var k in mod) if (k !== "default" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);
    __setModuleDefault(result, mod);
    return result;
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.sortedUtxosWithLowCoins = exports.utxosWithLowCoinsAndMixedAssets = exports.utxosWithLowCoins = exports.rewardAccountBalance2 = exports.rewardsHistory2 = exports.genesisParameters = exports.rewardsHistory = exports.epochRewards = exports.protocolParameters = exports.currentEpoch = exports.ledgerTip = exports.handleFingerprint = exports.handleAssetName = exports.handleAssetId = exports.handle = exports.handlePolicyId = exports.rewardAccountBalance = exports.stakeCredential = exports.stakeKeyHash = exports.rewardAccount = void 0;
const AssetId = __importStar(require("../assetId"));
const core_1 = require("@cardano-sdk/core");
const mockHandleProvider_1 = require("./mockHandleProvider");
exports.rewardAccount = core_1.Cardano.RewardAccount('stake_test1up7pvfq8zn4quy45r2g572290p9vf99mr9tn7r9xrgy2l2qdsf58d');
exports.stakeKeyHash = core_1.Cardano.RewardAccount.toHash(exports.rewardAccount);
exports.stakeCredential = {
    hash: exports.stakeKeyHash,
    type: core_1.Cardano.CredentialType.KeyHash
};
exports.rewardAccountBalance = 33333n;
exports.handlePolicyId = mockHandleProvider_1.resolvedHandle.policyId;
exports.handle = mockHandleProvider_1.resolvedHandle.handle;
exports.handleAssetId = core_1.Cardano.AssetId.fromParts(exports.handlePolicyId, core_1.Cardano.AssetName(Buffer.from(exports.handle).toString('hex')));
exports.handleAssetName = core_1.Cardano.AssetName(Buffer.from(exports.handle, 'utf8').toString('hex'));
exports.handleFingerprint = core_1.Cardano.AssetFingerprint('asset1f0azzptnr8dghzjh7egqvdjmt33e3lz5uy59th');
exports.ledgerTip = {
    blockNo: core_1.Cardano.BlockNo(1111111),
    hash: core_1.Cardano.BlockId('10d64cc11e9b20e15b6c46aa7b1fed11246f437e62225655a30ea47bf8cc22d0'),
    slot: core_1.Cardano.Slot(37834496)
};
exports.currentEpoch = {
    number: 157
};
exports.protocolParameters = {
    coinsPerUtxoByte: 4310,
    maxCollateralInputs: 1,
    maxExecutionUnitsPerTransaction: {
        memory: 100,
        steps: 200
    },
    maxTxSize: 16384,
    maxValueSize: 1000,
    minFeeCoefficient: 44,
    minFeeConstant: 155381,
    minPoolCost: 340000000,
    poolDeposit: 500000000,
    prices: { memory: 0.0577, steps: 0.00000721 },
    protocolVersion: { major: 5, minor: 0 },
    stakeKeyDeposit: 2000000
};
exports.epochRewards = [
    {
        epoch: core_1.Cardano.EpochNo(exports.currentEpoch.number - 3),
        poolId: core_1.Cardano.PoolId('pool1h8yl5mkyrfmfls2x9fu9mls3ry6egnw4q6efg34xr37zc243gkf'),
        rewards: 10000n
    },
    {
        epoch: core_1.Cardano.EpochNo(exports.currentEpoch.number - 2),
        poolId: core_1.Cardano.PoolId('pool1h8yl5mkyrfmfls2x9fu9mls3ry6egnw4q6efg34xr37zc243gkf'),
        rewards: 11000n
    }
];
exports.rewardsHistory = new Map([[exports.rewardAccount, exports.epochRewards]]);
exports.genesisParameters = {
    activeSlotsCoefficient: 0.05,
    epochLength: 432000,
    maxKesEvolutions: 62,
    maxLovelaceSupply: 45000000000000000n,
    networkId: 0,
    networkMagic: 764824073,
    securityParameter: 2160,
    slotLength: (0, core_1.Seconds)(1),
    slotsPerKesPeriod: 129600,
    systemStart: new Date(1506203091000),
    updateQuorum: 5
};
exports.rewardsHistory2 = new Map([
    [
        exports.rewardAccount,
        [
            {
                epoch: core_1.Cardano.EpochNo(exports.currentEpoch.number - 4),
                poolId: core_1.Cardano.PoolId('pool1h8yl5mkyrfmfls2x9fu9mls3ry6egnw4q6efg34xr37zc243gkf'),
                rewards: 10000n
            },
            ...exports.epochRewards
        ]
    ]
]);
exports.rewardAccountBalance2 = exports.rewardAccountBalance + 1n;
exports.utxosWithLowCoins = [
    [
        {
            address: core_1.Cardano.PaymentAddress('addr_test1qzs0umu0s2ammmpw0hea0w2crtcymdjvvlqngpgqy76gpfnuzcjqw982pcftgx53fu5527z2cj2tkx2h8ux2vxsg475qp3y3vz'),
            index: 1,
            txId: core_1.Cardano.TransactionId('c7c0973c6bbf1a04a9f306da7814b4fa564db649bf48b0bd93c273bd03143547')
        },
        {
            address: core_1.Cardano.PaymentAddress('addr_test1qq585l3hyxgj3nas2v3xymd23vvartfhceme6gv98aaeg9muzcjqw982pcftgx53fu5527z2cj2tkx2h8ux2vxsg475q2g7k3g'),
            value: {
                coins: 3289566n
            }
        }
    ],
    [
        {
            address: core_1.Cardano.PaymentAddress('addr_test1qzs0umu0s2ammmpw0hea0w2crtcymdjvvlqngpgqy76gpfnuzcjqw982pcftgx53fu5527z2cj2tkx2h8ux2vxsg475qp3y3vz'),
            index: 2,
            txId: core_1.Cardano.TransactionId('c7c0973c6bbf1a04a9f306da7814b4fa564db649bf48b0bd93c273bd03143547')
        },
        {
            address: core_1.Cardano.PaymentAddress('addr_test1qq585l3hyxgj3nas2v3xymd23vvartfhceme6gv98aaeg9muzcjqw982pcftgx53fu5527z2cj2tkx2h8ux2vxsg475q2g7k3g'),
            value: {
                coins: 1000000n
            }
        }
    ]
];
exports.utxosWithLowCoinsAndMixedAssets = [
    ...exports.utxosWithLowCoins,
    [
        {
            address: core_1.Cardano.PaymentAddress('addr_test1qzs0umu0s2ammmpw0hea0w2crtcymdjvvlqngpgqy76gpfnuzcjqw982pcftgx53fu5527z2cj2tkx2h8ux2vxsg475qp3y3vz'),
            index: 3,
            txId: core_1.Cardano.TransactionId('c7c0973c6bbf1a04a9f306da7814b4fa564db649bf48b0bd93c273bd03143547')
        },
        {
            address: core_1.Cardano.PaymentAddress('addr_test1qq585l3hyxgj3nas2v3xymd23vvartfhceme6gv98aaeg9muzcjqw982pcftgx53fu5527z2cj2tkx2h8ux2vxsg475q2g7k3g'),
            value: {
                assets: new Map([
                    [AssetId.PXL, 5n],
                    [AssetId.TSLA, 10n]
                ]),
                coins: 4027026465n
            }
        }
    ]
];
exports.sortedUtxosWithLowCoins = [exports.utxosWithLowCoins[1], exports.utxosWithLowCoins[0]];
//# sourceMappingURL=mockData.js.map