import { AxiosError } from 'axios';
import { Cardano, ProviderFailure } from '@cardano-sdk/core';
export declare const axiosError: (bodyError?: Error | null, reason?: ProviderFailure) => AxiosError<any, any>;
export declare const healthCheckResponseWithState: {
    localNode: {
        ledgerTip: {
            blockNo: number;
            hash: string;
            slot: number;
        };
        networkSync: number;
    };
    ok: boolean;
};
export declare const getWrongHandleProviderResponse: {
    cardanoAddress: Cardano.PaymentAddress;
    handle: string;
    hasDatum: boolean;
    policyId: Cardano.PolicyId;
    resolvedAt: {
        hash: Cardano.BlockId;
        slot: Cardano.Slot;
    };
};
export declare const getAliceHandleProviderResponse: {
    cardanoAddress: Cardano.PaymentAddress;
    handle: string;
    hasDatum: boolean;
    policyId: Cardano.PolicyId;
};
export declare const getBobHandleProviderResponse: {
    cardanoAddress: Cardano.PaymentAddress;
    handle: string;
    hasDatum: boolean;
    policyId: Cardano.PolicyId;
};
export declare const getAliceHandleAPIResponse: {
    background: string;
    characters: string;
    created_slot_number: number;
    default_in_wallet: string;
    hasDatum: boolean;
    hex: string;
    holder_address: string;
    length: number;
    name: string;
    nft_image: string;
    numeric_modifiers: string;
    og: number;
    original_nft_image: string;
    profile_pic: string;
    rarity: string;
    resolved_addresses: {
        ada: string;
    };
    updated_slot_number: number;
    utxo: string;
};
export declare const getBobHandleAPIResponse: {
    background: string;
    characters: string;
    created_slot_number: number;
    default_in_wallet: string;
    hasDatum: boolean;
    hex: string;
    holder_address: string;
    length: number;
    name: string;
    nft_image: string;
    numeric_modifiers: string;
    og: number;
    original_nft_image: string;
    profile_pic: string;
    rarity: string;
    resolved_addresses: {
        ada: string;
    };
    updated_slot_number: number;
    utxo: string;
};
//# sourceMappingURL=handleProvider.d.ts.map