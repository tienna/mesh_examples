import { createServer } from 'http';
import { getRandomPort } from 'get-port-please';
export const createGenericMockServer = (listenerGenerator, serverPort) => (handler = async () => ({})) => new Promise(async (resolve, reject) => {
    try {
        const port = serverPort || (await getRandomPort());
        const server = createServer(listenerGenerator(handler));
        let resolver = jest.fn();
        let rejecter = jest.fn();
        const closePromise = new Promise((resolve, reject) => {
            resolver = resolve;
            rejecter = reject;
        });
        server.on('error', rejecter);
        server.listen(port, 'localhost', () => resolve({
            closeMock: () => {
                server.close((error) => (error ? rejecter(error) : resolver()));
                return closePromise;
            },
            serverUrl: `http://localhost:${port}`
        }));
    }
    catch (error) {
        reject(error);
    }
});
//# sourceMappingURL=createGenericMockServer.js.map